/**
 * Vodafone Reboot Framework: Version 2.15.0. Generation Date: 2021-07-07T07:39:33.724Z
 */

.vfes-ms-content img {
  max-width: 100%;
}

.vfes-ms-content .ws10-c-cards-discovery-standard__image-holder {
  overflow: hidden;
}

.vfes-ms-content .vfms-addons-img {
  padding-bottom: 0 !important;
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:first-child a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .vfms-video-container {
  height: auto;
  max-height: 21.875rem;
  display: block;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-video-container {
    display: none;
  }
}

.vfes-ms-content .vfms-content {
  width: 100%;
  display: flex;
}

.vfes-ms-content .vfms-container {
  position: absolute;
  z-index: 5;
  width: 100%;
  top: 6.25rem;
  left: 0;
  padding-left: 2.5rem;
  right: 0;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-container {
    position: relative;
    padding: 0.625rem 0.625rem;
    top: 0;
    left: 0;
    right: 0;
    padding-left: 0;
  }
}

.vfes-ms-content .vf-banner .vf-banner__container {
  background:  url('../img/bg-banner-mobile.jpg?v=bece4c6b97043e221478c247b31b9f6f') no-repeat center;
  background-size: contain;
  min-height: 25rem;
  margin-bottom: -1rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner .vf-banner__container {
    background:  url('../img/bg-banner.png?v=b70cd0d30e723c2d71211612b1558d75') no-repeat center;
    background-position: right;
    background-size: contain;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__title {
    padding-right: 6.875rem;
  }
}

.vfes-ms-content .vf-banner__container {
  position: relative;
}

.vfes-ms-content .vfms-banner-container {
  background-color: #f4f4f4;
  background: url("https://www.vodafone.es/c/statics/imagen/bg-banner.png") no-repeat center;
  background-size: cover;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 29.375rem;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-container {
    height: 29.375rem;
  }
}

.vfes-ms-content .vfms-banner-title {
  width: 50%;
  position: relative;
  /*&__bolo{
      width:100px;
      height:auto;
      position: absolute;
      right: 0;
      display: none;
      @media screen and (min-width:768px) {
        display: block;
      }
    }*/
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-title {
    width: 100%;
  }
}

.vfes-ms-content .vfms__banner-mobile {
  display: none;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms__banner-mobile {
    display: block;
    text-align: center;
    margin: 0 auto;
    overflow: hidden;
  }
}

.vfes-ms-content .vfms-animation {
  width: 50%;
  position: relative;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-animation {
    display: none;
  }
}

.vfes-ms-content .vfms-animation--element {
  position: absolute;
  overflow: hidden;
}

.vfes-ms-content .vfms-animation--1 {
  z-index: 2;
  -webkit-animation: float 6s ease-in-out infinite;
          animation: float 6s ease-in-out infinite;
  right: 1.875rem;
  bottom: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--1 {
    margin-top: 0;
    right: -5rem;
  }
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vfms-animation--1 img {
    width: 8.75rem;
  }
}

.vfes-ms-content .vfms-animation--2 {
  z-index: 2;
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 45%;
  top: 0;
  margin-top: 3.75rem;
}

.vfes-ms-content .vfms-animation--3 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4s ease-in-out infinite;
          animation: float 4s ease-in-out infinite;
  right: 30%;
  top: -10%;
  margin-top: 1.875rem;
}

.vfes-ms-content .vfms-animation--4 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 78%;
  top: 0;
  margin-top: 6.25rem;
}

.vfes-ms-content .vfms-animation--5 {
  z-index: 2;
  width: 6.25rem;
  height: auto;
  right: 100%;
  top: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--5 {
    right: 99%;
  }
}

.vfes-ms-content .vfms-animation--6 {
  z-index: 2;
  width: 11.875rem;
  height: auto;
  right: 69%;
  top: -1.875rem;
  transform: scale(0.8, 0.8);
}

@media screen and (max-width: 64.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    right: 85%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    top: 0;
    right: 70%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 img {
    width: 6.25rem;
  }
}

@-webkit-keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

@keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

.vfes-ms-content .vfms-video {
  width: 100%;
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .vf-bold {
  font-family: "Vodafone";
  src: local("Vodafone Rg Bold"), url("https://www.vodafone.es/c/statics/fonts/vodafonergbd-webfont.woff") format("woff"), url(fonts/vodafone-bold.woff) format("woff");
  font-style: "normal";
  font-weight: 700;
  font-display: swap;
}

.vfes-ms-content .vf-form {
  padding: 0.625rem 0 0 1.5rem;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: start;
    align-items: start;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: flex-end;
    align-items: flex-end;
  }
}

.vfes-ms-content .vf-banner50__img {
  max-width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__img {
    max-width: 100%;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container1 {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container2 {
    order: 1;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICBpbWd7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC53czEwLWMtY2FyZHMtZGlzY292ZXJ5LXN0YW5kYXJkX19pbWFnZS1ob2xkZXJ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICB9XG4gIC52Zm1zLWFkZG9ucy1pbWd7XG4gICAgcGFkZGluZy1ib3R0b206IDAhaW1wb3J0YW50O1xuICB9XG4gIC8vIEJyZWFkY3J1bWJzXG4gIC52Zi1icmVhZGNydW1ic3tcbiAgICAmIGxpIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICYgYXtcbiAgICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogLjA2MjVyZW07XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogLjc1cmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTM1ZGVnKTtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX2xpbmsge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgICY6YWZ0ZXJ7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgYm9yZGVyLXRvcDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB3aWR0aDogLjc1cmVtO1xuICAgICAgICAgIGhlaWdodDogLjc1cmVtO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9XG5cbiAgfVxuICAudmZtcy12aWRlby1jb250YWluZXJ7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1heC1oZWlnaHQ6IDM1MHB4O1xuICAgIGRpc3BsYXk6YmxvY2s7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cblxuICB9XG4gIC52Zm1zLWNvbnRlbnR7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuICAudmZtcy1jb250YWluZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAxMDBweDtcbiAgICBsZWZ0OjA7XG4gICAgcGFkZGluZy1sZWZ0OjQwcHg7XG4gICAgcmlnaHQ6IDA7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmc6MTBweCAxMHB4O1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OjA7XG4gICAgfVxuXG4gIH1cblxuICAudmYtYmFubmVye1xuICAgICAgLnZmLWJhbm5lcl9fY29udGFpbmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9iZy1iYW5uZXItbW9iaWxlLmpwZycpIG5vLXJlcGVhdCBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0xcmVtO1xuICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9iZy1iYW5uZXIucG5nJykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAmX190aXRsZXtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTEwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVye1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgfVxuICAudmZtcy1iYW5uZXItY29udGFpbmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6I2Y0ZjRmNCA7XG4gICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnLWJhbm5lci5wbmcnKSBuby1yZXBlYXQgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICB6LWluZGV4Oi0xO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDo0NzBweDtcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzY4cHgpIHtcbiAgICAgIGhlaWdodDo0NzBweDtcbiAgICB9XG4gIH1cbiAgLnZmbXMtYmFubmVyLXRpdGxle1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzY4cHgpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC8qJl9fYm9sb3tcbiAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjc2OHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH0qL1xuICB9XG4gIC52Zm1zX19iYW5uZXItbW9iaWxle1xuICAgZGlzcGxheTpub25lO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gIH1cbiAgLy9hbmltYXRpb25cbiAgLnZmbXMtYW5pbWF0aW9uIHtcblxuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG5cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgICYtLWVsZW1lbnR7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAmLS0xe1xuICAgICAgei1pbmRleDoyO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA2cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMHB4O1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgbWFyZ2luLXRvcDowO1xuICAgICAgICByaWdodDogLTgwcHg7XG4gICAgICB9XG4gICAgICBpbWd7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgd2lkdGg6IDE0MHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICYtLTJ7XG4gICAgICB6LWluZGV4OjI7XG4gICAgICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogNDUlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICB9XG4gICAgJi0tM3tcbiAgICAgIHotaW5kZXg6MjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMCU7XG4gICAgICB0b3A6IC0xMCU7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIH1cbiAgICAmLS00e1xuICAgICAgei1pbmRleDoyO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogNzglO1xuICAgICAgdG9wOiAwO1xuICAgICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gICAgfVxuICAgICYtLTV7XG4gICAgICB6LWluZGV4OjI7XG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgLy9hbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICByaWdodDogMTAwJTtcbiAgICAgIHRvcDowO1xuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICByaWdodDogOTklO1xuICAgICAgfVxuICAgIH1cbiAgICAmLS02e1xuICAgICAgei1pbmRleDoyO1xuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIC8vYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgd2lkdGg6MTkwcHg7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICByaWdodDogNjklO1xuICAgICAgdG9wOi0zMHB4O1xuXG4gICAgICB0cmFuc2Zvcm06c2NhbGUoLjgsIC44KTtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjVweCkge1xuICAgICAgICByaWdodDogODUlO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICB0b3A6MDtcbiAgICAgICAgcmlnaHQ6IDcwJTtcbiAgICAgIH1cblxuICAgICAgaW1ne1xuXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gICAgICAgICAgd2lkdGg6MTAwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAa2V5ZnJhbWVzIGZsb2F0IHtcbiAgICAwJSB7XG4gICAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDI1cHggMTUgMHB4IHJnYmEoMTUxLDE0NSwxNDUsMC42KSk7XG4gICAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1MHB4IDVweCByZ2JhKDE1MSwxNDUsMTQ1LDAuNikpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgfVxuICAgIDUwJSB7XG4gICAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDU1cHggLTE1cHggIDBweCByZ2JhKDE1MSwxNDUsMTQ1LDAuMikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygtMTVweCA3NXB4IDE1cHggcmdiYSgxNTEsMTQ1LDE0NSwwLjIpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgtMjBweCk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwxNDUsMTQ1LDAuNikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsMTQ1LDE0NSwwLjYpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgIH1cbiAgfVxuICAudmZtcy12aWRlbyB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbiAgLndzMTAtYy1mb3JtX19yYWRpbzpjaGVja2VkKy53czEwLWMtZm9ybV9fbGFiZWw6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YzkyO1xuICB9XG5cbiAgLnZmLWJvbGR7XG4gICAgZm9udC1mYW1pbHk6IFwiVm9kYWZvbmVcIjtcbiAgICBzcmM6IGxvY2FsKFwiVm9kYWZvbmUgUmcgQm9sZFwiKSx1cmwoXCJodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvZm9udHMvdm9kYWZvbmVyZ2JkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLHVybChmb250cy92b2RhZm9uZS1ib2xkLndvZmYpIGZvcm1hdChcIndvZmZcIik7XG4gICAgZm9udC1zdHlsZTogXCJub3JtYWxcIjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtZGlzcGxheTogc3dhcFxuICB9XG4gIC52Zi1mb3Jte1xuICAgIHBhZGRpbmc6MTBweCAwIDAgMjRweDtcbiAgICAmX19ib3h7XG4gICAgICB3aWR0aDogaW5pdGlhbDtcbiAgICAgICY6Zmlyc3QtY2hpbGR7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnZmLXJhdGVze1xuICAgICZfX2NvbnRhaW5lcntcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC52Zi1iYW5uZXI1MHtcbiAgICAmX19pbWd7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250YWluZXIxe1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgb3JkZXI6IDI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyMntcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0UsZ0JBRGMsQ0FDZCxHQUFHLENBQUE7RUFDRCxTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUFISCxBQUlFLGdCQUpjLENBSWQsOENBQThDLENBQUE7RUFDNUMsUUFBUSxFQUFFLE1BQU07Q0FFakI7O0FBUEgsQUFRRSxnQkFSYyxDQVFkLGdCQUFnQixDQUFBO0VBQ2QsY0FBYyxFQUFFLENBQUMsQ0FBQSxVQUFVO0NBQzVCOztBQVZILEFBYUksZ0JBYlksQ0FZZCxlQUFlLENBQ1gsRUFBRSxDQUFDO0VBQ0gsVUFBVSxFQUFFLElBQUk7Q0FnQ2pCOztBQTlDTCxBQWdCTSxnQkFoQlUsQ0FZZCxlQUFlLENBQ1gsRUFBRSxBQUdELFdBQVcsQ0FBQztFQUNYLE9BQU8sRUFBRSxJQUFJO0NBSWQ7O0FBSEMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxCM0MsQUFnQk0sZ0JBaEJVLENBWWQsZUFBZSxDQUNYLEVBQUUsQUFHRCxXQUFXLENBQUM7SUFHVCxPQUFPLEVBQUUsS0FBSztHQUVqQjs7O0FBckJQLEFBeUJVLGdCQXpCTSxDQVlkLGVBQWUsQ0FDWCxFQUFFLEFBVUQsWUFBWSxDQUNULENBQUMsQUFD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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
