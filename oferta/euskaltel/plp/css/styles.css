/**
 * Vodafone Reboot Framework: Version 2.15.0. Generation Date: 2021-07-01T13:10:13.194Z
 */

.vfes-ms-content img {
  max-width: 100%;
}

.vfes-ms-content .ws10-c-cards-discovery-standard__image-holder {
  overflow: hidden;
}

.vfes-ms-content .vfms-addons-img {
  padding-bottom: 0 !important;
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:first-child a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .vfms-video-container {
  height: auto;
  max-height: 21.875rem;
  display: block;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-video-container {
    display: none;
  }
}

.vfes-ms-content .vfms-content {
  width: 100%;
  display: flex;
}

.vfes-ms-content .vfms-container {
  position: absolute;
  z-index: 5;
  width: 100%;
  top: 6.25rem;
  left: 0;
  padding-left: 2.5rem;
  right: 0;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-container {
    position: relative;
    padding: 0.625rem 0.625rem;
    top: 0;
    left: 0;
    right: 0;
    padding-left: 0;
  }
}

.vfes-ms-content .vf-banner {
  background:  url('../img/bg-banner-mobile.jpg?v=bece4c6b97043e221478c247b31b9f6f') no-repeat center;
  background-size: contain;
  position: relative;
  min-height: 25rem;
  margin-bottom: -3.125rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background:  url('../img/bg-banner.png?v=b70cd0d30e723c2d71211612b1558d75') no-repeat center;
    background-position-x: 26.875rem;
    background-size: contain;
    min-height: auto;
    margin-bottom: -1.25rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__title {
    padding-right: 6.875rem;
  }
}

.vfes-ms-content .vf-banner__container {
  position: relative;
}

.vfes-ms-content .vfms-banner-container {
  background-color: #f4f4f4;
  background: url("https://www.vodafone.es/c/statics/imagen/bg-banner.jpg") no-repeat center;
  background-size: cover;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 29.375rem;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-container {
    height: 29.375rem;
  }
}

.vfes-ms-content .vfms-banner-title {
  width: 50%;
  position: relative;
  /*&__bolo{
      width:100px;
      height:auto;
      position: absolute;
      right: 0;
      display: none;
      @media screen and (min-width:768px) {
        display: block;
      }
    }*/
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-title {
    width: 100%;
  }
}

.vfes-ms-content .vfms__banner-mobile {
  display: none;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms__banner-mobile {
    display: block;
    text-align: center;
    margin: 0 auto;
    overflow: hidden;
  }
}

.vfes-ms-content .vfms-animation {
  width: 50%;
  position: relative;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-animation {
    display: none;
  }
}

.vfes-ms-content .vfms-animation--element {
  position: absolute;
  overflow: hidden;
}

.vfes-ms-content .vfms-animation--1 {
  z-index: 2;
  -webkit-animation: float 6s ease-in-out infinite;
          animation: float 6s ease-in-out infinite;
  right: 1.875rem;
  bottom: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--1 {
    margin-top: 0;
    right: -5rem;
  }
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vfms-animation--1 img {
    width: 8.75rem;
  }
}

.vfes-ms-content .vfms-animation--2 {
  z-index: 2;
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 45%;
  top: 0;
  margin-top: 3.75rem;
}

.vfes-ms-content .vfms-animation--3 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4s ease-in-out infinite;
          animation: float 4s ease-in-out infinite;
  right: 30%;
  top: -10%;
  margin-top: 1.875rem;
}

.vfes-ms-content .vfms-animation--4 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 78%;
  top: 0;
  margin-top: 6.25rem;
}

.vfes-ms-content .vfms-animation--5 {
  z-index: 2;
  width: 6.25rem;
  height: auto;
  right: 100%;
  top: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--5 {
    right: 99%;
  }
}

.vfes-ms-content .vfms-animation--6 {
  z-index: 2;
  width: 11.875rem;
  height: auto;
  right: 69%;
  top: -1.875rem;
  transform: scale(0.8, 0.8);
}

@media screen and (max-width: 64.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    right: 85%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    top: 0;
    right: 70%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 img {
    width: 6.25rem;
  }
}

@-webkit-keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

@keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

.vfes-ms-content .vfms-video {
  width: 100%;
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .vf-bold {
  font-family: "Vodafone";
  src: local("Vodafone Rg Bold"), url("https://www.vodafone.es/c/statics/fonts/vodafonergbd-webfont.woff") format("woff"), url(fonts/vodafone-bold.woff) format("woff");
  font-style: "normal";
  font-weight: 700;
  font-display: swap;
}

.vfes-ms-content .vf-form {
  padding: 0.625rem 0 0 1.5rem;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: start;
    align-items: start;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: flex-end;
    align-items: flex-end;
  }
}

.vfes-ms-content .vf-banner50__img {
  max-width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__img {
    max-width: 100%;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container1 {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container2 {
    order: 1;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICBpbWd7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC53czEwLWMtY2FyZHMtZGlzY292ZXJ5LXN0YW5kYXJkX19pbWFnZS1ob2xkZXJ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICB9XG4gIC52Zm1zLWFkZG9ucy1pbWd7XG4gICAgcGFkZGluZy1ib3R0b206IDAhaW1wb3J0YW50O1xuICB9XG4gIC8vIEJyZWFkY3J1bWJzXG4gIC52Zi1icmVhZGNydW1ic3tcbiAgICAmIGxpIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICYgYXtcbiAgICAgICAgICAmOmJlZm9yZXtcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogLjA2MjVyZW07XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogLjc1cmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTM1ZGVnKTtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX2xpbmsge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgICY6YWZ0ZXJ7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgYm9yZGVyLXRvcDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB3aWR0aDogLjc1cmVtO1xuICAgICAgICAgIGhlaWdodDogLjc1cmVtO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9XG5cbiAgfVxuICAudmZtcy12aWRlby1jb250YWluZXJ7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1heC1oZWlnaHQ6IDM1MHB4O1xuICAgIGRpc3BsYXk6YmxvY2s7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cblxuICB9XG4gIC52Zm1zLWNvbnRlbnR7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuICAudmZtcy1jb250YWluZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAxMDBweDtcbiAgICBsZWZ0OjA7XG4gICAgcGFkZGluZy1sZWZ0OjQwcHg7XG4gICAgcmlnaHQ6IDA7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmc6MTBweCAxMHB4O1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OjA7XG4gICAgfVxuXG4gIH1cblxuICAudmYtYmFubmVye1xuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2JnLWJhbm5lci1tb2JpbGUuanBnJykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IC01MHB4O1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9iZy1iYW5uZXIucG5nJykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogNDMwcHg7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgICAgbWFyZ2luLWJvdHRvbTogLTIwcHg7XG4gICAgfVxuXG4gICAgJl9fdGl0bGV7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDExMHB4O1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnRhaW5lcntcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gIH1cbiAgLnZmbXMtYmFubmVyLWNvbnRhaW5lcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjQgO1xuICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZy1iYW5uZXIuanBnJykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgei1pbmRleDotMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6NDcwcHg7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc2OHB4KSB7XG4gICAgICBoZWlnaHQ6NDcwcHg7XG4gICAgfVxuICB9XG4gIC52Zm1zLWJhbm5lci10aXRsZXtcbiAgICB3aWR0aDogNTAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc2OHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAvKiZfX2JvbG97XG4gICAgICB3aWR0aDoxMDBweDtcbiAgICAgIGhlaWdodDphdXRvO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo3NjhweCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9Ki9cbiAgfVxuICAudmZtc19fYmFubmVyLW1vYmlsZXtcbiAgIGRpc3BsYXk6bm9uZTtcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cblxuICB9XG4gIC8vYW5pbWF0aW9uXG4gIC52Zm1zLWFuaW1hdGlvbiB7XG5cbiAgICB3aWR0aDogNTAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbiAgICAmLS1lbGVtZW50e1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgJi0tMXtcbiAgICAgIHotaW5kZXg6MjtcbiAgICAgIGFuaW1hdGlvbjogZmxvYXQgNnMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogMzBweDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgcmlnaHQ6IC04MHB4O1xuICAgICAgfVxuICAgICAgaW1ne1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgIHdpZHRoOiAxNDBweDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAmLS0ye1xuICAgICAgei1pbmRleDoyO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgcmlnaHQ6IDQ1JTtcbiAgICAgIHRvcDogMDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgfVxuICAgICYtLTN7XG4gICAgICB6LWluZGV4OjI7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIGFuaW1hdGlvbjogZmxvYXQgNHMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogMzAlO1xuICAgICAgdG9wOiAtMTAlO1xuICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICB9XG4gICAgJi0tNHtcbiAgICAgIHotaW5kZXg6MjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgcmlnaHQ6IDc4JTtcbiAgICAgIHRvcDogMDtcbiAgICAgIG1hcmdpbi10b3A6IDEwMHB4O1xuICAgIH1cbiAgICAmLS01e1xuICAgICAgei1pbmRleDoyO1xuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIC8vYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgcmlnaHQ6IDEwMCU7XG4gICAgICB0b3A6MDtcblxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgcmlnaHQ6IDk5JTtcbiAgICAgIH1cbiAgICB9XG4gICAgJi0tNntcbiAgICAgIHotaW5kZXg6MjtcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgICAvL2FuaW1hdGlvbjogZmxvYXQgNC41cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHdpZHRoOjE5MHB4O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgcmlnaHQ6IDY5JTtcbiAgICAgIHRvcDotMzBweDtcblxuICAgICAgdHJhbnNmb3JtOnNjYWxlKC44LCAuOCk7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI1cHgpIHtcbiAgICAgICAgcmlnaHQ6IDg1JTtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgdG9wOjA7XG4gICAgICAgIHJpZ2h0OiA3MCU7XG4gICAgICB9XG5cbiAgICAgIGltZ3tcblxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGtleWZyYW1lcyBmbG9hdCB7XG4gICAgMCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwxNDUsMTQ1LDAuNikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsMTQ1LDE0NSwwLjYpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgIH1cbiAgICA1MCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCA1NXB4IC0xNXB4ICAwcHggcmdiYSgxNTEsMTQ1LDE0NSwwLjIpKTtcbiAgICAgIGZpbHRlcjogZHJvcC1zaGFkb3coLTE1cHggNzVweCAxNXB4IHJnYmEoMTUxLDE0NSwxNDUsMC4yKSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoLTIwcHgpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMjVweCAxNSAwcHggcmdiYSgxNTEsMTQ1LDE0NSwwLjYpKTtcbiAgICAgIGZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDUwcHggNXB4IHJnYmEoMTUxLDE0NSwxNDUsMC42KSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICB9XG4gIH1cbiAgLnZmbXMtdmlkZW8ge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4gIC53czEwLWMtZm9ybV9fcmFkaW86Y2hlY2tlZCsud3MxMC1jLWZvcm1fX2xhYmVsOjphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2M5MjtcbiAgfVxuXG4gIC52Zi1ib2xke1xuICAgIGZvbnQtZmFtaWx5OiBcIlZvZGFmb25lXCI7XG4gICAgc3JjOiBsb2NhbChcIlZvZGFmb25lIFJnIEJvbGRcIiksdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ZvbnRzL3ZvZGFmb25lcmdiZC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSx1cmwoZm9udHMvdm9kYWZvbmUtYm9sZC53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICAgIGZvbnQtc3R5bGU6IFwibm9ybWFsXCI7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LWRpc3BsYXk6IHN3YXBcbiAgfVxuICAudmYtZm9ybXtcbiAgICBwYWRkaW5nOjEwcHggMCAwIDI0cHg7XG4gICAgJl9fYm94e1xuICAgICAgd2lkdGg6IGluaXRpYWw7XG4gICAgICAmOmZpcnN0LWNoaWxke1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC52Zi1yYXRlc3tcbiAgICAmX19jb250YWluZXJ7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgICAgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpe1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudmYtYmFubmVyNTB7XG4gICAgJl9faW1ne1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpe1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyMXtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnRhaW5lcjJ7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBvcmRlcjogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUNFLGdCQURjLENBQ2QsR0FBRyxDQUFBO0VBQ0QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FBSEgsQUFJRSxnQkFKYyxDQUlkLDhDQUE4QyxDQUFBO0VBQzVDLFFBQVEsRUFBRSxNQUFNO0NBRWpCOztBQVBILEFBUUUsZ0JBUmMsQ0FRZCxnQkFBZ0IsQ0FBQTtFQUNkLGNBQWMsRUFBRSxDQUFDLENBQUEsVUFBVTtDQUM1Qjs7QUFWSCxBQWFJLGdCQWJZLENBWWQsZUFBZSxDQUNYLEVBQUUsQ0FBQztFQUNILFVBQVUsRUFBRSxJQUFJO0NBZ0NqQjs7QUE5Q0wsQUFnQk0sZ0JBaEJVLENBWWQsZUFBZSxDQUNYLEVBQUUsQUFHRCxXQUFXLENBQUM7RUFDWCxPQUFPLEVBQUUsSUFBSTtDQUlkOztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFsQjNDLEFBZ0JNLGdCQWhCVSxDQVlkLGVBQWUsQ0FDWCxFQUFFLEFBR0QsV0FBVyxDQUFDO0lBR1QsT0FBTyxFQUFFLEtBQUs7R0FFakI7OztBQXJCUCxBQXlCVSxnQkF6Qk0sQ0FZZCxlQUFlLENBQ1gsRUFBRSxBQVVELFlBQVksQ0FDVCxDQUFDLEFBQ0EsT0FBTyxDQUFBO0VBQ04sWUFBWSxFQUFFLFFBQVE7RUFDdEIsWUFBWSxFQUFFLG1CQUFtQjtFQUNqQyxVQUFVLEVBQUUsbUJBQW1CO0VBQy9CLE9BQU8sRUFBRSxLQUFLO0VBQ2QsS0FBSyxFQUFFLE1BQU07RUFDYixNQUFNLEVBQUUsTUFBTTtFQUNkLFNBQVMsRUFBRSxlQUFlO0VBQzFCLE9BQU8sRUFBRSxFQUFFO0VBQ1gsT0FBTyxFQUFFLFlBQVk7RUFDckIsY0FBYyxFQUFFLFFBQVE7RUFDeEIsUUFBUSxFQUFFLFFBQVE7Q0FNbkI7O0FBSkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRDL0MsQUF5QlUsZ0JBekJNLENBWWQsZUFBZSxDQUNYLEVBQUUsQUFVRCxZQUFZLENBQ1QsQ0FBQyxBQUNBLE9BQU8sQ0FBQTtJQWNKLE9BQU8sRUFBRSxJQUFJO0dBR2hCOzs7QUExQ1gsQUFnREksZ0JBaERZLENBZ0RYLHFCQUFNLENBQUM7RUFDTixPQUFPLEVBQUUsSUFBSTtFQUNiLFdBQVcsRUFBRSxNQUFNO0NBaUJwQjs7QUFoQkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQW5EekMsQUFvRFEsZ0JBcERRLENBZ0RYLHFCQUFNLEFBSUYsTUFBTSxDQUFBO0lBQ0wsWUFBWSxFQUFFLFFBQVE7SUFDdEIsWUFBWSxFQUFFLG1CQUFtQjtJQUNqQyxVQUFVLEVBQUUsbUJBQW1CO0lBQy9CLE9BQU8sRUFBRSxLQUFLO0lBQ2QsS0FBSyxFQUFFLE1BQU07SUFDYixNQUFNLEVBQUUsTUFBTTtJQUNkLFNBQVMsRUFBRSxhQUFhO0lBQ3hCLE9BQU8sRUFBRSxFQUFFO0lBQ1gsT0FBTyxFQUFFLFlBQVk7SUFDckIsY0FBYyxFQUFFLFFBQVE7SUFDeEIsUUFBUSxFQUFFLFFBQVE7R0FDbkI7OztBQWhFVCxBQXNFRSxnQkF0RWMsQ0FzRWQscUJBQXFCLENBQUE7RUFDbkIsTUFBTSxFQUFFLElBQUk7RUFDWixVQUFVLEVBQUUsS0FBSztFQUNqQixPQUFPLEVBQUMsS0FBSztDQU1kOztBQUpDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUEzRXZDLEFBc0VFLGdCQXRFYyxDQXNFZCxxQkFBcUIsQ0FBQTtJQU1qQixPQUFPLEVBQUMsSUFBSTtHQUdmOzs7QUEvRUgsQUFnRkUsZ0JBaEZjLENBZ0ZkLGFBQWEsQ0FBQTtFQUNYLEtBQUssRUFBRSxJQUFJO0VBQ1gsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFuRkgsQUFvRkUsZ0JBcEZjLENBb0ZkLGVBQWUsQ0FBQTtFQUNiLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLE9BQU8sRUFBRSxDQUFDO0VBQ1YsS0FBSyxFQUFFLElBQUk7RUFDWCxHQUFHLEVBQUUsS0FBSztFQUNWLElBQUksRUFBQyxDQUFDO0VBQ04sWUFBWSxFQUFDLElBQUk7RUFDakIsS0FBSyxFQUFFLENBQUM7Q0FVVDs7QUFUQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBNUZ2QyxBQW9GRSxnQkFwRmMsQ0FvRmQsZUFBZSxDQUFBO0lBU1gsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFDLFNBQVM7SUFDakIsR0FBRyxFQUFFLENBQUM7SUFDTixJQUFJLEVBQUUsQ0FBQztJQUNQLEtBQUssRUFBRSxDQUFDO0lBQ1IsWUFBWSxFQUFDLENBQUM7R0FHakI7OztBQXJHSCxBQXVHRSxnQkF2R2MsQ0F1R2QsVUFBVSxDQUFBO0VBQ1IsVUFBVSxFQUFFLGtDQUFrQyxDQUFDLFNBQVMsQ0FBQyxNQUFNO0VBQy9ELGVBQWUsRUFBRSxPQUFPO0VBQ3hCLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLGFBQWEsRUFBRSxLQUFLO0NBa0JyQjs7QUFqQkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTdHdkMsQUF1R0UsZ0JBdkdjLENBdUdkLFVBQVUsQ0FBQTtJQU9OLFVBQVUsRUFBRSwyQkFBMkIsQ0FBQyxTQUFTLENBQUMsTUFBTTtJQUN4RCxxQkFBcUIsRUFBRSxLQUFLO0lBQzVCLGVBQWUsRUFBRSxPQUFPO0lBQ3hCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLGFBQWEsRUFBRSxLQUFLO0dBWXZCOzs7QUFSRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEh6QyxBQXFISSxnQkFySFksQ0FxSFgsaUJBQU8sQ0FBQTtJQUVKLGFBQWEsRUFBRSxLQUFLO0dBRXZCOzs7QUF6SEwsQUEySEksZ0JBM0hZLENBMkhYLHFCQUFXLENBQUE7RUFDVixRQUFRLEVBQUUsUUFBUTtDQUNuQjs7QUE3SEwsQUErSEUsZ0JBL0hjLENBK0hkLHNCQUFzQixDQUFBO0VBQ3BCLGdCQUFnQixFQUFDLE9BQVE7RUFDekIsVUFBVSxFQUFFLDZEQUE2RCxDQUFDLFNBQVMsQ0FBQyxNQUFNO0VBQzFGLGVBQWUsRUFBQyxLQUFLO0VBQ3JCLFFBQVEsRUFBQyxRQUFRO0VBQ2pCLE9BQU8sRUFBQyxFQUFFO0VBQ1YsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUMsS0FBSztDQUtiOztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF4SXZDLEFBK0hFLGdCQS9IYyxDQStIZCxzQkFBc0IsQ0FBQTtJQVVsQixNQUFNLEVBQUMsS0FBSztHQUVmOzs7QUEzSUgsQUE0SUUsZ0JBNUljLENBNElkLGtCQUFrQixDQUFBO0VBQ2hCLEtBQUssRUFBRSxHQUFHO0VBQ1YsUUFBUSxFQUFFLFFBQVE7RUFLbEI7Ozs7Ozs7OztPQVNHO0NBQ0o7O0FBZEMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQS9JdkMsQUE0SUUsZ0JBNUljLENBNElkLGtCQUFrQixDQUFBO0lBSWQsS0FBSyxFQUFFLElBQUk7R0FhZDs7O0FBN0pILEFBOEpFLGdCQTlKYyxDQThKZCxvQkFBb0IsQ0FBQTtFQUNuQixPQUFPLEVBQUMsSUFBSTtDQVNaOztBQVBDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFqS3ZDLEFBOEpFLGdCQTlKYyxDQThKZCxvQkFBb0IsQ0FBQTtJQUloQixPQUFPLEVBQUMsS0FBSztJQUNiLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLE1BQU0sRUFBRSxNQUFNO0lBQ2QsUUFBUSxFQUFFLE1BQU07R0FHbkI7OztBQXhLSCxBQTBLRSxnQkExS2MsQ0EwS2QsZUFBZSxDQUFDO0VBRWQsS0FBSyxFQUFFLEdBQUc7RUFDVixRQUFRLEVBQUUsUUFBUTtDQXdGbkI7O0FBcEZDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFqTHZDLEFBMEtFLGdCQTFLYyxDQTBLZCxlQUFlLENBQUM7SUFRWixPQUFPLEVBQUMsSUFBSTtHQW1GZjs7O0FBclFILEFBb0xJLGdCQXBMWSxDQW9MWCx3QkFBUyxDQUFBO0VBQ1IsUUFBUSxFQUFFLFFBQVE7RUFDbEIsUUFBUSxFQUFFLE1BQU07Q0FDakI7O0FBdkxMLEFBd0xJLGdCQXhMWSxDQXdMWCxrQkFBRyxDQUFBO0VBQ0YsT0FBTyxFQUFDLENBQUM7RUFDVCxTQUFTLEVBQUUsNkJBQTZCO0VBQ3hDLEtBQUssRUFBRSxJQUFJO0VBQ1gsTUFBTSxFQUFFLENBQUM7Q0FVVjs7QUFUQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBN0x6QyxBQXdMSSxnQkF4TFksQ0F3TFgsa0JBQUcsQ0FBQTtJQU1BLFVBQVUsRUFBQyxDQUFDO0lBQ1osS0FBSyxFQUFFLEtBQUs7R0FPZjs7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxNM0MsQUFpTU0sZ0JBak1VLENBd0xYLGtCQUFHLENBU0YsR0FBRyxDQUFBO0lBRUMsS0FBSyxFQUFFLEtBQUs7R0FFZjs7O0FBck1QLEFBdU1JLGdCQXZNWSxDQXVNWCxrQkFBRyxDQUFBO0VBQ0YsT0FBTyxFQUFDLENBQUM7RUFDVCxTQUFTLEVBQUUsK0JBQStCO0VBQzFDLEtBQUssRUFBRSxHQUFHO0VBQ1YsR0FBRyxFQUFFLENBQUM7RUFDTixVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUE3TUwsQUE4TUksZ0JBOU1ZLENBOE1YLGtCQUFHLENBQUE7RUFDRixPQUFPLEVBQUMsQ0FBQztFQUNULFNBQVMsRUFBRSxlQUFlO0VBQzFCLFNBQVMsRUFBRSw2QkFBNkI7RUFDeEMsS0FBSyxFQUFFLEdBQUc7RUFDVixHQUFHLEVBQUUsSUFBSTtFQUNULFVBQVUsRUFBRSxJQUFJO0NBQ2pCOztBQXJOTCxBQXNOSSxnQkF0TlksQ0FzTlgsa0JBQUcsQ0FBQTtFQUNGLE9BQU8sRUFBQyxDQUFDO0VBQ1QsU0FBUyxFQUFFLGVBQWU7RUFDMUIsU0FBUyxFQUFFLCtCQUErQjtFQUMxQyxLQUFLLEVBQUUsR0FBRztFQUNWLEdBQUcsRUFBRSxDQUFDO0VBQ04sVUFBVSxFQUFFLEtBQUs7Q0FDbEI7O0FBN05MLEFBOE5JLGdCQTlOWSxDQThOWCxrQkFBRyxDQUFBO0VBQ0YsT0FBTyxFQUFDLENBQUM7RUFHVCxLQUFLLEVBQUUsS0FBSztFQUNaLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLElBQUk7RUFDWCxHQUFHLEVBQUMsQ0FBQztDQUtOOztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF2T3pDLEFBOE5JLGdCQTlOWSxDQThOWCxrQkFBRyxDQUFBO0lBVUEsS0FBSyxFQUFFLEdBQUc7R0FFYjs7O0FBMU9MLEFBMk9JLGdCQTNPWSxDQTJPWCxrQkFBRyxDQUFBO0VBQ0YsT0FBTyxFQUFDLENBQUM7RUFHVCxLQUFLLEVBQUMsS0FBSztFQUNYLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLEdBQUc7RUFDVixHQUFHLEVBQUMsS0FBSztFQUVULFNBQVMsRUFBQyxlQUFhO0NBZ0J4Qjs7QUFmQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxNQUFNO0VBclAxQyxBQTJPSSxnQkEzT1ksQ0EyT1gsa0JBQUcsQ0FBQTtJQVdBLEtBQUssRUFBRSxHQUFHO0dBY2I7OztBQVhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF6UHpDLEFBMk9JLGdCQTNPWSxDQTJPWCxrQkFBRyxDQUFBO0lBZUEsR0FBRyxFQUFDLENBQUM7SUFDTCxLQUFLLEVBQUUsR0FBRztHQVNiOzs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaFEzQyxBQThQTSxnQkE5UFUsQ0EyT1gsa0JBQUcsQ0FtQkYsR0FBRyxDQUFBO0lBR0MsS0FBSyxFQUFDLEtBQUs7R0FFZDs7O0FBSUwsVUFBVSxDQUFWLEtBQVU7RUFDUixFQUFFO0lBQ0EsY0FBYyxFQUFFLHFEQUFrRDtJQUNsRSxNQUFNLEVBQUUsa0RBQStDO0lBQ3ZELFNBQVMsRUFBRSxlQUFlOztFQUU1QixHQUFHO0lBQ0QsY0FBYyxFQUFFLHdEQUFzRDtJQUN0RSxNQUFNLEVBQUUscURBQWtEO0lBQzFELFNBQVMsRUFBRSxpQkFBaUI7O0VBRTlCLElBQUk7SUFDRixjQUFjLEVBQUUscURBQWtEO0lBQ2xFLE1BQU0sRUFBRSxrREFBK0M7SUFDdkQsU0FBUyxFQUFFLGVBQWU7Ozs7QUFyUmhDLEFBd1JFLGdCQXhSYyxDQXdSZCxXQUFXLENBQUM7RUFDVixLQUFLLEVBQUUsSUFBSTtDQUNkOztBQTFSRCxBQTRSRSxnQkE1UmMsQ0E0UmQsbUJBQW1CLEFBQUEsUUFBUSxHQUFDLG1CQUFtQixBQUFBLE9BQU8sQ0FBQztFQUNyRCxnQkFBZ0IsRUFBRSxPQUFPO0NBQzFCOztBQTlSSCxBQWdTRSxnQkFoU2MsQ0FnU2QsUUFBUSxDQUFBO0VBQ04sV0FBVyxFQUFFLFVBQVU7RUFDdkIsR0FBRyxFQUFFLHlCQUF5QixFQUFDLHdFQUF3RSxDQUFDLGNBQWMsRUFBQyw2QkFBNkIsQ0FBQyxjQUFjO0VBQ25LLFVBQVUsRUFBRSxRQUFRO0VBQ3BCLFdBQVcsRUFBRSxHQUFHO0VBQ2hCLFlBQVksRUFBRSxJQUNoQjtDQUFDOztBQXRTSCxBQXVTRSxnQkF2U2MsQ0F1U2QsUUFBUSxDQUFBO0VBQ04sT0FBTyxFQUFDLGFBQWE7Q0FPdEI7O0FBL1NILEFBeVNJLGdCQXpTWSxDQXlTWCxhQUFLLENBQUE7RUFDSixLQUFLLEVBQUUsT0FBTztDQUlmOztBQTlTTCxBQTJTTSxnQkEzU1UsQ0F5U1gsYUFBSyxBQUVILFlBQVksQ0FBQTtFQUNYLGFBQWEsRUFBRSxJQUFJO0NBQ3BCOztBQU1ELE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFuVHpDLEFBa1RJLGdCQWxUWSxDQWtUWCxvQkFBVyxDQUFBO0lBRVIsV0FBVyxFQUFFLEtBQUs7SUFDbEIsV0FBVyxFQUFFLEtBQUs7R0FNckI7OztBQUpDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF2VHpDLEFBa1RJLGdCQWxUWSxDQWtUWCxvQkFBVyxDQUFBO0lBTVIsV0FBVyxFQUFFLFFBQVE7SUFDckIsV0FBVyxFQUFFLFFBQVE7R0FFeEI7OztBQTNUTCxBQStUSSxnQkEvVFksQ0ErVFgsaUJBQUssQ0FBQTtFQUNKLFNBQVMsRUFBRSxJQUFJO0NBSWhCOztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFqVXpDLEFBK1RJLGdCQS9UWSxDQStUWCxpQkFBSyxDQUFBO0lBR0YsU0FBUyxFQUFFLElBQUk7R0FFbEI7OztBQUdDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF2VXpDLEFBc1VJLGdCQXRVWSxDQXNVWCx3QkFBWSxDQUFBO0lBRVQsS0FBSyxFQUFFLENBQUM7R0FFWDs7O0FBR0MsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTdVekMsQUE0VUksZ0JBNVVZLENBNFVYLHdCQUFZLENBQUE7SUFFVCxLQUFLLEVBQUUsQ0FBQztHQUVYIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taWNyby5zY3NzIiwic3R5bGVzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVJLGVBQWU7QUNEbkI7O0FEREE7RUFLSSxnQkFBZ0I7QUNBcEI7O0FETEE7RUFTSSw0QkFBMkI7QUNBL0I7O0FEVEE7RUFjTSxnQkFBZ0I7QUNEdEI7O0FEYkE7RUFpQlEsYUFBYTtBQ0FyQjs7QURDUTtFQWxCUjtJQW1CVSxjQUFjO0VDR3RCO0FBQ0Y7O0FEdkJBO0VBMEJZLHNCQUFzQjtFQUN0QixpQ0FBaUM7RUFDakMsK0JBQStCO0VBQy9CLGNBQWM7RUFDZCxhQUFhO0VBQ2IsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLHdCQUF3QjtFQUN4QixrQkFBa0I7QUNDOUI7O0FEQ1k7RUF0Q1o7SUF1Q2MsYUFBYTtFQ0d6QjtBQUNGOztBRDNDQTtFQWlETSxhQUFhO0VBQ2IsbUJBQW1CO0FDRnpCOztBREdNO0VBbkROO0lBcURVLHNCQUFzQjtJQUN0QixpQ0FBaUM7SUFDakMsK0JBQStCO0lBQy9CLGNBQWM7SUFDZCxhQUFhO0lBQ2IsY0FBYztJQUNkLHdCQUF3QjtJQUN4QixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLHdCQUF3QjtJQUN4QixrQkFBa0I7RUNBMUI7QUFDRjs7QURoRUE7RUF1RUksWUFBWTtFQUNaLHFCQUFpQjtFQUNqQixjQUFhO0FDSGpCOztBREtJO0VBM0VKO0lBNEVNLGFBQVk7RUNEaEI7QUFDRjs7QUQ1RUE7RUFpRkksV0FBVztFQUNYLGFBQWE7QUNEakI7O0FEakZBO0VBcUZJLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVU7RUFDVixPQUFNO0VBQ04sb0JBQWlCO0VBQ2pCLFFBQVE7QUNBWjs7QURDSTtFQTVGSjtJQTZGTSxrQkFBa0I7SUFDbEIsMEJBQWlCO0lBQ2pCLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLGVBQWM7RUNHbEI7QUFDRjs7QUR0R0E7RUF3R0ks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LHNCQUFtQjtBQzhCM0I7O0FEdkJNO0VBblROO0lBb1RRLGtCQUFrQjtJQUNsQixrQkFBa0I7RUMyQnhCO0FBQ0Y7O0FEMUJNO0VBdlROO0lBd1RRLHFCQUFxQjtJQUNyQixxQkFBcUI7RUM4QjNCO0FBQ0Y7O0FEeFZBO0VBZ1VNLGVBQWU7QUM0QnJCOztBRDNCTTtFQWpVTjtJQWtVUSxlQUFlO0VDK0JyQjtBQUNGOztBRDNCTTtFQXZVTjtJQXdVUSxRQUFRO0VDK0JkO0FBQ0Y7O0FEM0JNO0VBN1VOO0lBOFVRLFFBQVE7RUMrQmQ7QUFDRjs7QUFFQSw2aGxCQUE2aGxCO0FBQzdobEIsOGhsQkFBOGhsQiIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ1NTIGRlbCBtaWNyb3NpdGVcbi52ZmVzLW1zLWNvbnRlbnR7XG4gIGltZ3tcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbiAgLndzMTAtYy1jYXJkcy1kaXNjb3Zlcnktc3RhbmRhcmRfX2ltYWdlLWhvbGRlcntcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIH1cbiAgLnZmbXMtYWRkb25zLWltZ3tcbiAgICBwYWRkaW5nLWJvdHRvbTogMCFpbXBvcnRhbnQ7XG4gIH1cbiAgLy8gQnJlYWRjcnVtYnNcbiAgLnZmLWJyZWFkY3J1bWJze1xuICAgICYgbGkge1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgJiBhe1xuICAgICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICAgIGJvcmRlci10b3A6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgICBoZWlnaHQ6IC43NXJlbTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgJjphZnRlcntcbiAgICAgICAgICBib3JkZXItd2lkdGg6IC4wNjI1cmVtO1xuICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cblxuICB9XG4gIC52Zm1zLXZpZGVvLWNvbnRhaW5lcntcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWF4LWhlaWdodDogMzUwcHg7XG4gICAgZGlzcGxheTpibG9jaztcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuXG4gIH1cbiAgLnZmbXMtY29udGVudHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIC52Zm1zLWNvbnRhaW5lcntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogNTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0b3A6IDEwMHB4O1xuICAgIGxlZnQ6MDtcbiAgICBwYWRkaW5nLWxlZnQ6NDBweDtcbiAgICByaWdodDogMDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZzoxMHB4IDEwcHg7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6MDtcbiAgICB9XG5cbiAgfVxuXG4gIC52Zi1iYW5uZXJ7XG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvYmctYmFubmVyLW1vYmlsZS5qcGcnKSBuby1yZXBlYXQgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLWhlaWdodDogNDAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogLTUwcHg7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2JnLWJhbm5lci5wbmcnKSBuby1yZXBlYXQgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiA0MzBweDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIG1pbi1oZWlnaHQ6IGF1dG87XG4gICAgICBtYXJnaW4tYm90dG9tOiAtMjBweDtcbiAgICB9XG5cbiAgICAmX190aXRsZXtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTEwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVye1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgfVxuICAudmZtcy1iYW5uZXItY29udGFpbmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6I2Y0ZjRmNCA7XG4gICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnLWJhbm5lci5qcGcnKSBuby1yZXBlYXQgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICB6LWluZGV4Oi0xO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDo0NzBweDtcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzY4cHgpIHtcbiAgICAgIGhlaWdodDo0NzBweDtcbiAgICB9XG4gIH1cbiAgLnZmbXMtYmFubmVyLXRpdGxle1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzY4cHgpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC8qJl9fYm9sb3tcbiAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjc2OHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH0qL1xuICB9XG4gIC52Zm1zX19iYW5uZXItbW9iaWxle1xuICAgZGlzcGxheTpub25lO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gIH1cbiAgLy9hbmltYXRpb25cbiAgLnZmbXMtYW5pbWF0aW9uIHtcblxuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG5cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgICYtLWVsZW1lbnR7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAmLS0xe1xuICAgICAgei1pbmRleDoyO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA2cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMHB4O1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgbWFyZ2luLXRvcDowO1xuICAgICAgICByaWdodDogLTgwcHg7XG4gICAgICB9XG4gICAgICBpbWd7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgd2lkdGg6IDE0MHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICYtLTJ7XG4gICAgICB6LWluZGV4OjI7XG4gICAgICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogNDUlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICB9XG4gICAgJi0tM3tcbiAgICAgIHotaW5kZXg6MjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMCU7XG4gICAgICB0b3A6IC0xMCU7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIH1cbiAgICAmLS00e1xuICAgICAgei1pbmRleDoyO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICByaWdodDogNzglO1xuICAgICAgdG9wOiAwO1xuICAgICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gICAgfVxuICAgICYtLTV7XG4gICAgICB6LWluZGV4OjI7XG4gICAgICAvL3RyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgLy9hbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICByaWdodDogMTAwJTtcbiAgICAgIHRvcDowO1xuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICByaWdodDogOTklO1xuICAgICAgfVxuICAgIH1cbiAgICAmLS02e1xuICAgICAgei1pbmRleDoyO1xuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIC8vYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgd2lkdGg6MTkwcHg7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICByaWdodDogNjklO1xuICAgICAgdG9wOi0zMHB4O1xuXG4gICAgICB0cmFuc2Zvcm06c2NhbGUoLjgsIC44KTtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjVweCkge1xuICAgICAgICByaWdodDogODUlO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICB0b3A6MDtcbiAgICAgICAgcmlnaHQ6IDcwJTtcbiAgICAgIH1cblxuICAgICAgaW1ne1xuXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gICAgICAgICAgd2lkdGg6MTAwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAa2V5ZnJhbWVzIGZsb2F0IHtcbiAgICAwJSB7XG4gICAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDI1cHggMTUgMHB4IHJnYmEoMTUxLDE0NSwxNDUsMC42KSk7XG4gICAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1MHB4IDVweCByZ2JhKDE1MSwxNDUsMTQ1LDAuNikpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgfVxuICAgIDUwJSB7XG4gICAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDU1cHggLTE1cHggIDBweCByZ2JhKDE1MSwxNDUsMTQ1LDAuMikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygtMTVweCA3NXB4IDE1cHggcmdiYSgxNTEsMTQ1LDE0NSwwLjIpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgtMjBweCk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwxNDUsMTQ1LDAuNikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsMTQ1LDE0NSwwLjYpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgIH1cbiAgfVxuICAudmZtcy12aWRlbyB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbiAgLndzMTAtYy1mb3JtX19yYWRpbzpjaGVja2VkKy53czEwLWMtZm9ybV9fbGFiZWw6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YzkyO1xuICB9XG5cbiAgLnZmLWJvbGR7XG4gICAgZm9udC1mYW1pbHk6IFwiVm9kYWZvbmVcIjtcbiAgICBzcmM6IGxvY2FsKFwiVm9kYWZvbmUgUmcgQm9sZFwiKSx1cmwoXCJodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvZm9udHMvdm9kYWZvbmVyZ2JkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLHVybChmb250cy92b2RhZm9uZS1ib2xkLndvZmYpIGZvcm1hdChcIndvZmZcIik7XG4gICAgZm9udC1zdHlsZTogXCJub3JtYWxcIjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtZGlzcGxheTogc3dhcFxuICB9XG4gIC52Zi1mb3Jte1xuICAgIHBhZGRpbmc6MTBweCAwIDAgMjRweDtcbiAgICAmX19ib3h7XG4gICAgICB3aWR0aDogaW5pdGlhbDtcbiAgICAgICY6Zmlyc3QtY2hpbGR7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnZmLXJhdGVze1xuICAgICZfX2NvbnRhaW5lcntcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC52Zi1iYW5uZXI1MHtcbiAgICAmX19pbWd7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250YWluZXIxe1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgb3JkZXI6IDI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyMntcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLnZmZXMtbXMtY29udGVudCBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLndzMTAtYy1jYXJkcy1kaXNjb3Zlcnktc3RhbmRhcmRfX2ltYWdlLWhvbGRlciB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYWRkb25zLWltZyB7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnMgbGk6bGFzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmZpcnN0LWNoaWxkIGE6YmVmb3JlIHtcbiAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgYm9yZGVyLXJpZ2h0OiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IC43NXJlbTtcbiAgaGVpZ2h0OiAuNzVyZW07XG4gIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1icmVhZGNydW1icyBsaTpmaXJzdC1jaGlsZCBhOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1icmVhZGNydW1ic19fbGluayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzX19saW5rOmFmdGVyIHtcbiAgICBib3JkZXItd2lkdGg6IC4wNjI1cmVtO1xuICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAuNzVyZW07XG4gICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy12aWRlby1jb250YWluZXIge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDM1MHB4O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy12aWRlby1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiA1O1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAxMDBweDtcbiAgbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICByaWdodDogMDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9iZy1iYW5uZXItbW9iaWxlLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLWhlaWdodDogNDAwcHg7XG4gIG1hcmdpbi1ib3R0b206IC01MHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9iZy1iYW5uZXIucG5nXCIpIG5vLXJlcGVhdCBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiA0MzBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgbWluLWhlaWdodDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiAtMjBweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXJfX3RpdGxlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMTBweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXJfX2NvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1iYW5uZXItY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZy1iYW5uZXIuanBnXCIpIG5vLXJlcGVhdCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQ3MHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWJhbm5lci1jb250YWluZXIge1xuICAgIGhlaWdodDogNDcwcHg7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1iYW5uZXItdGl0bGUge1xuICB3aWR0aDogNTAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC8qJl9fYm9sb3tcbiAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjc2OHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH0qL1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWJhbm5lci10aXRsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtc19fYmFubmVyLW1vYmlsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXNfX2Jhbm5lci1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uIHtcbiAgd2lkdGg6IDUwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tZWxlbWVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTEge1xuICB6LWluZGV4OiAyO1xuICBhbmltYXRpb246IGZsb2F0IDZzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICByaWdodDogMzBweDtcbiAgYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tMSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICByaWdodDogLTgwcHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTEgaW1nIHtcbiAgICB3aWR0aDogMTQwcHg7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTIge1xuICB6LWluZGV4OiAyO1xuICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gIHJpZ2h0OiA0NSU7XG4gIHRvcDogMDtcbiAgbWFyZ2luLXRvcDogNjBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTMge1xuICB6LWluZGV4OiAyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgYW5pbWF0aW9uOiBmbG9hdCA0cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgcmlnaHQ6IDMwJTtcbiAgdG9wOiAtMTAlO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tNCB7XG4gIHotaW5kZXg6IDI7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICBhbmltYXRpb246IGZsb2F0IDQuNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gIHJpZ2h0OiA3OCU7XG4gIHRvcDogMDtcbiAgbWFyZ2luLXRvcDogMTAwcHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS01IHtcbiAgei1pbmRleDogMjtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIHJpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS01IHtcbiAgICByaWdodDogOTklO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS02IHtcbiAgei1pbmRleDogMjtcbiAgd2lkdGg6IDE5MHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIHJpZ2h0OiA2OSU7XG4gIHRvcDogLTMwcHg7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC44LCAwLjgpO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI1cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTYge1xuICAgIHJpZ2h0OiA4NSU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTYge1xuICAgIHRvcDogMDtcbiAgICByaWdodDogNzAlO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS02IGltZyB7XG4gICAgd2lkdGg6IDEwMHB4O1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmxvYXQge1xuICAwJSB7XG4gICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuNikpO1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDUwcHggNXB4IHJnYmEoMTUxLCAxNDUsIDE0NSwgMC42KSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gIH1cbiAgNTAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDU1cHggLTE1cHggMHB4IHJnYmEoMTUxLCAxNDUsIDE0NSwgMC4yKSk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdygtMTVweCA3NXB4IDE1cHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjIpKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoLTIwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMjVweCAxNSAwcHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjYpKTtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1MHB4IDVweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuNikpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtdmlkZW8ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAud3MxMC1jLWZvcm1fX3JhZGlvOmNoZWNrZWQgKyAud3MxMC1jLWZvcm1fX2xhYmVsOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdjOTI7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJvbGQge1xuICBmb250LWZhbWlseTogXCJWb2RhZm9uZVwiO1xuICBzcmM6IGxvY2FsKFwiVm9kYWZvbmUgUmcgQm9sZFwiKSwgdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ZvbnRzL3ZvZGFmb25lcmdiZC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKGZvbnRzL3ZvZGFmb25lLWJvbGQud29mZikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC1zdHlsZTogXCJub3JtYWxcIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1mb3JtIHtcbiAgcGFkZGluZzogMTBweCAwIDAgMjRweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZm9ybV9fYm94IHtcbiAgd2lkdGg6IGluaXRpYWw7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWZvcm1fX2JveDpmaXJzdC1jaGlsZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXJhdGVzX19jb250YWluZXIge1xuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtcmF0ZXNfX2NvbnRhaW5lciB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXI1MF9faW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXI1MF9faW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyNTBfX2NvbnRhaW5lcjEge1xuICAgIG9yZGVyOiAyO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lcjUwX19jb250YWluZXIyIHtcbiAgICBvcmRlcjogMTtcbiAgfVxufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzNSNWJHVnpMbU56Y3lJc0luTnZkWEpqWlhNaU9sc2ljM1I1YkdWekxuTmpjM01pTENKZmJXbGpjbTh1YzJOemN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCQmNYVnBJSE5sSUhCMVpXUmxiaUJwYlhCdmNuUmhjaUJzYVdKeVpYTERyV0Z6SUdWNGRHVnlibUZ6WEc0dkx5Qmxham9nUUdsdGNHOXlkQ0FuTDNSdmIyeHpMMloxYm1OMGFXOXVjeWM3WEc1Y2JrQnBiWEJ2Y25RZ1hDSnRhV055YjF3aU95SXNJaTh2SUVOVFV5QmtaV3dnYldsamNtOXphWFJsWEc0dWRtWmxjeTF0Y3kxamIyNTBaVzUwZTF4dUlDQnBiV2Q3WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVJQ0I5WEc0Z0lDNTNjekV3TFdNdFkyRnlaSE10WkdselkyOTJaWEo1TFhOMFlXNWtZWEprWDE5cGJXRm5aUzFvYjJ4a1pYSjdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JseHVJQ0I5WEc0Z0lDNTJabTF6TFdGa1pHOXVjeTFwYldkN1hHNGdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREFoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzRnSUM4dklFSnlaV0ZrWTNKMWJXSnpYRzRnSUM1MlppMWljbVZoWkdOeWRXMWljM3RjYmlBZ0lDQW1JR3hwSUh0Y2JpQWdJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1Y2JpQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJQ1lnWVh0Y2JpQWdJQ0FnSUNBZ0lDQW1PbUpsWm05eVpYdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dMakEyTWpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0Y21sbmFIUTZJQzR3TmpJMWNtVnRJSE52Ykdsa0lDTXpNek03WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPaUF1TURZeU5YSmxiU0J6YjJ4cFpDQWpNek16TzF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dMamMxY21WdE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE1UTTFaR1ZuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgyeHBibXNnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDbDdYRzRnSUNBZ0lDQWdJQ1k2WVdaMFpYSjdYRzRnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWGRwWkhSb09pQXVNRFl5TlhKbGJUdGNiaUFnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklDNHdOakkxY21WdElITnZiR2xrSUNNek16TTdYRzRnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ0xqQTJNalZ5WlcwZ2MyOXNhV1FnSXpNek16dGNiaUFnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dMamMxY21WdE8xeHVJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dMamMxY21WdE8xeHVJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFExWkdWbktUdGNiaUFnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0FnSUNBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0I5WEc1Y2JpQWdmVnh1SUNBdWRtWnRjeTEyYVdSbGJ5MWpiMjUwWVdsdVpYSjdYRzRnSUNBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNBZ0lHMWhlQzFvWldsbmFIUTZJRE0xTUhCNE8xeHVJQ0FnSUdScGMzQnNZWGs2WW14dlkyczdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUcHViMjVsTzF4dUlDQWdJSDFjYmx4dUlDQjlYRzRnSUM1MlptMXpMV052Ym5SbGJuUjdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ2ZWeHVJQ0F1ZG1adGN5MWpiMjUwWVdsdVpYSjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhvdGFXNWtaWGc2SURVN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnZEc5d09pQXhNREJ3ZUR0Y2JpQWdJQ0JzWldaME9qQTdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPalF3Y0hnN1hHNGdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpZNGNIZ3BJSHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZNVEJ3ZUNBeE1IQjRPMXh1SUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0FnSUhKcFoyaDBPaUF3TzF4dUlDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9qQTdYRzRnSUNBZ2ZWeHVYRzRnSUgxY2JseHVJQ0F1ZG1ZdFltRnVibVZ5ZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUhWeWJDZ25MaTR2YVcxbkwySm5MV0poYm01bGNpMXRiMkpwYkdVdWFuQm5KeWtnYm04dGNtVndaV0YwSUdObGJuUmxjanRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZiblJoYVc0N1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJRzFwYmkxb1pXbG5hSFE2SURRd01IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUMwMU1IQjRPMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUIxY213b0p5NHVMMmx0Wnk5aVp5MWlZVzV1WlhJdWNHNW5KeWtnYm04dGNtVndaV0YwSUdObGJuUmxjanRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjR0ZURvZ05ETXdjSGc3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052Ym5SaGFXNDdYRzRnSUNBZ0lDQnRhVzR0YUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTFRJd2NIZzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZkR2wwYkdWN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNsN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURFeE1IQjRPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWmZYMk52Ym5SaGFXNWxjbnRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptYlhNdFltRnVibVZ5TFdOdmJuUmhhVzVsY250Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaU5tTkdZMFpqUWdPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFZ5YkNnbmFIUjBjSE02THk5M2QzY3VkbTlrWVdadmJtVXVaWE12WXk5emRHRjBhV056TDJsdFlXZGxiaTlpWnkxaVlXNXVaWEl1YW5Cbkp5a2dibTh0Y21Wd1pXRjBJR05sYm5SbGNqdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2WTI5MlpYSTdYRzRnSUNBZ2NHOXphWFJwYjI0NllXSnpiMngxZEdVN1hHNGdJQ0FnZWkxcGJtUmxlRG90TVR0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZORGN3Y0hnN1hHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09qYzJPSEI0S1NCN1hHNGdJQ0FnSUNCb1pXbG5hSFE2TkRjd2NIZzdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFdKaGJtNWxjaTEwYVhSc1pYdGNiaUFnSUNCM2FXUjBhRG9nTlRBbE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2pjMk9IQjRLU0I3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2laZlgySnZiRzk3WEc0Z0lDQWdJQ0IzYVdSMGFEb3hNREJ3ZUR0Y2JpQWdJQ0FnSUdobGFXZG9kRHBoZFhSdk8xeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG8zTmpod2VDa2dlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUtpOWNiaUFnZlZ4dUlDQXVkbVp0YzE5ZlltRnVibVZ5TFcxdlltbHNaWHRjYmlBZ0lHUnBjM0JzWVhrNmJtOXVaVHRjYmx4dUlDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURjMk9IQjRLU0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPbUpzYjJOck8xeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lIMWNibHh1SUNCOVhHNGdJQzh2WVc1cGJXRjBhVzl1WEc0Z0lDNTJabTF6TFdGdWFXMWhkR2x2YmlCN1hHNWNiaUFnSUNCM2FXUjBhRG9nTlRBbE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseHVYRzVjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUcHViMjVsTzF4dUlDQWdJSDFjYmlBZ0lDQW1MUzFsYkdWdFpXNTBlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnSUNCOVhHNGdJQ0FnSmkwdE1YdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNk1qdGNiaUFnSUNBZ0lHRnVhVzFoZEdsdmJqb2dabXh2WVhRZ05uTWdaV0Z6WlMxcGJpMXZkWFFnYVc1bWFXNXBkR1U3WEc0Z0lDQWdJQ0J5YVdkb2REb2dNekJ3ZUR0Y2JpQWdJQ0FnSUdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklEYzJPWEI0S1NCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZNRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzA0TUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2FXMW5lMXh1SUNBZ0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBMk5EQndlQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE5EQndlRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1MUzB5ZTF4dUlDQWdJQ0FnZWkxcGJtUmxlRG95TzF4dUlDQWdJQ0FnWVc1cGJXRjBhVzl1T2lCbWJHOWhkQ0EwTGpWeklHVmhjMlV0YVc0dGIzVjBJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklEUTFKVHRjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRFl3Y0hnN1hHNGdJQ0FnZlZ4dUlDQWdJQ1l0TFRON1hHNGdJQ0FnSUNCNkxXbHVaR1Y0T2pJN1hHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpYa29NSEI0S1R0Y2JpQWdJQ0FnSUdGdWFXMWhkR2x2YmpvZ1pteHZZWFFnTkhNZ1pXRnpaUzFwYmkxdmRYUWdhVzVtYVc1cGRHVTdYRzRnSUNBZ0lDQnlhV2RvZERvZ016QWxPMXh1SUNBZ0lDQWdkRzl3T2lBdE1UQWxPMXh1SUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTXpCd2VEdGNiaUFnSUNCOVhHNGdJQ0FnSmkwdE5IdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNk1qdGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxlU2d3Y0hncE8xeHVJQ0FnSUNBZ1lXNXBiV0YwYVc5dU9pQm1iRzloZENBMExqVnpJR1ZoYzJVdGFXNHRiM1YwSUdsdVptbHVhWFJsTzF4dUlDQWdJQ0FnY21sbmFIUTZJRGM0SlR0Y2JpQWdJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURFd01IQjRPMXh1SUNBZ0lIMWNiaUFnSUNBbUxTMDFlMXh1SUNBZ0lDQWdlaTFwYm1SbGVEb3lPMXh1SUNBZ0lDQWdMeTkwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlhrb01IQjRLVHRjYmlBZ0lDQWdJQzh2WVc1cGJXRjBhVzl1T2lCbWJHOWhkQ0EwTGpWeklHVmhjMlV0YVc0dGIzVjBJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdkMmxrZEdnNklERXdNSEI0TzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURFd01DVTdYRzRnSUNBZ0lDQjBiM0E2TUR0Y2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dOelk1Y0hncElIdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklEazVKVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0ppMHRObnRjYmlBZ0lDQWdJSG90YVc1a1pYZzZNanRjYmlBZ0lDQWdJQzh2ZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWNUtEQndlQ2s3WEc0Z0lDQWdJQ0F2TDJGdWFXMWhkR2x2YmpvZ1pteHZZWFFnTkM0MWN5QmxZWE5sTFdsdUxXOTFkQ0JwYm1acGJtbDBaVHRjYmlBZ0lDQWdJSGRwWkhSb09qRTVNSEI0TzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURZNUpUdGNiaUFnSUNBZ0lIUnZjRG90TXpCd2VEdGNibHh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPbk5qWVd4bEtDNDRMQ0F1T0NrN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQXhNREkxY0hncElIdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklEZzFKVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTVjSGdwSUh0Y2JpQWdJQ0FnSUNBZ2RHOXdPakE3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUEzTUNVN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbHRaM3RjYmx4dUlDQWdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamx3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSGRwWkhSb09qRXdNSEI0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1FHdGxlV1p5WVcxbGN5Qm1iRzloZENCN1hHNGdJQ0FnTUNVZ2UxeHVJQ0FnSUNBZ0xYZGxZbXRwZEMxbWFXeDBaWEk2SUdSeWIzQXRjMmhoWkc5M0tEQndlQ0F5TlhCNElERTFJREJ3ZUNCeVoySmhLREUxTVN3eE5EVXNNVFExTERBdU5pa3BPMXh1SUNBZ0lDQWdabWxzZEdWeU9pQmtjbTl3TFhOb1lXUnZkeWcxY0hnZ05UQndlQ0ExY0hnZ2NtZGlZU2d4TlRFc01UUTFMREUwTlN3d0xqWXBLVHRjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsZVNnd2NIZ3BPMXh1SUNBZ0lIMWNiaUFnSUNBMU1DVWdlMXh1SUNBZ0lDQWdMWGRsWW10cGRDMW1hV3gwWlhJNklHUnliM0F0YzJoaFpHOTNLREJ3ZUNBMU5YQjRJQzB4TlhCNElDQXdjSGdnY21kaVlTZ3hOVEVzTVRRMUxERTBOU3d3TGpJcEtUdGNiaUFnSUNBZ0lHWnBiSFJsY2pvZ1pISnZjQzF6YUdGa2IzY29MVEUxY0hnZ056VndlQ0F4TlhCNElISm5ZbUVvTVRVeExERTBOU3d4TkRVc01DNHlLU2s3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlhrb0xUSXdjSGdwTzF4dUlDQWdJSDFjYmlBZ0lDQXhNREFsSUh0Y2JpQWdJQ0FnSUMxM1pXSnJhWFF0Wm1sc2RHVnlPaUJrY205d0xYTm9ZV1J2ZHlnd2NIZ2dNalZ3ZUNBeE5TQXdjSGdnY21kaVlTZ3hOVEVzTVRRMUxERTBOU3d3TGpZcEtUdGNiaUFnSUNBZ0lHWnBiSFJsY2pvZ1pISnZjQzF6YUdGa2IzY29OWEI0SURVd2NIZ2dOWEI0SUhKblltRW9NVFV4TERFME5Td3hORFVzTUM0MktTazdYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaWGtvTUhCNEtUdGNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1iWE10ZG1sa1pXOGdlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1ZlZ4dVhHNGdJQzUzY3pFd0xXTXRabTl5YlY5ZmNtRmthVzg2WTJobFkydGxaQ3N1ZDNNeE1DMWpMV1p2Y20xZlgyeGhZbVZzT2pwaFpuUmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekF3TjJNNU1qdGNiaUFnZlZ4dVhHNGdJQzUyWmkxaWIyeGtlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxadlpHRm1iMjVsWENJN1hHNGdJQ0FnYzNKak9pQnNiMk5oYkNoY0lsWnZaR0ZtYjI1bElGSm5JRUp2YkdSY0lpa3NkWEpzS0Z3aWFIUjBjSE02THk5M2QzY3VkbTlrWVdadmJtVXVaWE12WXk5emRHRjBhV056TDJadmJuUnpMM1p2WkdGbWIyNWxjbWRpWkMxM1pXSm1iMjUwTG5kdlptWmNJaWtnWm05eWJXRjBLRndpZDI5bVpsd2lLU3gxY213b1ptOXVkSE12ZG05a1lXWnZibVV0WW05c1pDNTNiMlptS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTzF4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUZ3aWJtOXliV0ZzWENJN1hHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ0lDQm1iMjUwTFdScGMzQnNZWGs2SUhOM1lYQmNiaUFnZlZ4dUlDQXVkbVl0Wm05eWJYdGNiaUFnSUNCd1lXUmthVzVuT2pFd2NIZ2dNQ0F3SURJMGNIZzdYRzRnSUNBZ0psOWZZbTk0ZTF4dUlDQWdJQ0FnZDJsa2RHZzZJR2x1YVhScFlXdzdYRzRnSUNBZ0lDQW1PbVpwY25OMExXTm9hV3hrZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF5TUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDNTJaaTF5WVhSbGMzdGNiaUFnSUNBbVgxOWpiMjUwWVdsdVpYSjdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDbDdYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCemRHRnlkRHRjYmlBZ0lDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklITjBZWEowTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ09UY3djSGdwZTF4dUlDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dabXhsZUMxbGJtUTdYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCbWJHVjRMV1Z1WkR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWRtWXRZbUZ1Ym1WeU5UQjdYRzRnSUNBZ0psOWZhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZZMjl1ZEdGcGJtVnlNWHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDJOdmJuUmhhVzVsY2pKN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVTkRRU3hCUVVORkxHZENRVVJqTEVOQlEyUXNSMEZCUnl4RFFVRkJPMFZCUTBRc1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCU0Vnc1FVRkpSU3huUWtGS1l5eERRVWxrTERoRFFVRTRReXhEUVVGQk8wVkJRelZETEZGQlFWRXNSVUZCUlN4TlFVRk5PME5CUldwQ096dEJRVkJJTEVGQlVVVXNaMEpCVW1Nc1EwRlJaQ3huUWtGQlowSXNRMEZCUVR0RlFVTmtMR05CUVdNc1JVRkJSU3hEUVVGRExFTkJRVUVzVlVGQlZUdERRVU0xUWpzN1FVRldTQ3hCUVdGSkxHZENRV0paTEVOQldXUXNaVUZCWlN4RFFVTllMRVZCUVVVc1EwRkJRenRGUVVOSUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQlowTnFRanM3UVVFNVEwd3NRVUZuUWswc1owSkJhRUpWTEVOQldXUXNaVUZCWlN4RFFVTllMRVZCUVVVc1FVRkhSQ3hYUVVGWExFTkJRVU03UlVGRFdDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVbGtPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnNRak5ETEVGQlowSk5MR2RDUVdoQ1ZTeERRVmxrTEdWQlFXVXNRMEZEV0N4RlFVRkZMRUZCUjBRc1YwRkJWeXhEUVVGRE8wbEJSMVFzVDBGQlR5eEZRVUZGTEV0QlFVczdSMEZGYWtJN096dEJRWEpDVUN4QlFYbENWU3huUWtGNlFrMHNRMEZaWkN4bFFVRmxMRU5CUTFnc1JVRkJSU3hCUVZWRUxGbEJRVmtzUTBGRFZDeERRVUZETEVGQlEwRXNUMEZCVHl4RFFVRkJPMFZCUTA0c1dVRkJXU3hGUVVGRkxGRkJRVkU3UlVGRGRFSXNXVUZCV1N4RlFVRkZMRzFDUVVGdFFqdEZRVU5xUXl4VlFVRlZMRVZCUVVVc2JVSkJRVzFDTzBWQlF5OUNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzUzBGQlN5eEZRVUZGTEUxQlFVMDdSVUZEWWl4TlFVRk5MRVZCUVVVc1RVRkJUVHRGUVVOa0xGTkJRVk1zUlVGQlJTeGxRVUZsTzBWQlF6RkNMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVDBGQlR5eEZRVUZGTEZsQlFWazdSVUZEY2tJc1kwRkJZeXhGUVVGRkxGRkJRVkU3UlVGRGVFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1EwRk5ia0k3TzBGQlNrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRWFJETDBNc1FVRjVRbFVzWjBKQmVrSk5MRU5CV1dRc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGVlJDeFpRVUZaTEVOQlExUXNRMEZCUXl4QlFVTkJMRTlCUVU4c1EwRkJRVHRKUVdOS0xFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlIyaENPenM3UVVFeFExZ3NRVUZuUkVrc1owSkJhRVJaTEVOQlowUllMSEZDUVVGTkxFTkJRVU03UlVGRFRpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRmRCUVZjc1JVRkJSU3hOUVVGTk8wTkJhVUp3UWpzN1FVRm9Ra01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVc1RWVrTXNRVUZ2UkZFc1owSkJjRVJSTEVOQlowUllMSEZDUVVGTkxFRkJTVVlzVFVGQlRTeERRVUZCTzBsQlEwd3NXVUZCV1N4RlFVRkZMRkZCUVZFN1NVRkRkRUlzV1VGQldTeEZRVUZGTEcxQ1FVRnRRanRKUVVOcVF5eFZRVUZWTEVWQlFVVXNiVUpCUVcxQ08wbEJReTlDTEU5QlFVOHNSVUZCUlN4TFFVRkxPMGxCUTJRc1MwRkJTeXhGUVVGRkxFMUJRVTA3U1VGRFlpeE5RVUZOTEVWQlFVVXNUVUZCVFR0SlFVTmtMRk5CUVZNc1JVRkJSU3hoUVVGaE8wbEJRM2hDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMGxCUTFnc1QwRkJUeXhGUVVGRkxGbEJRVms3U1VGRGNrSXNZMEZCWXl4RlFVRkZMRkZCUVZFN1NVRkRlRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSMEZEYmtJN096dEJRV2hGVkN4QlFYTkZSU3huUWtGMFJXTXNRMEZ6UldRc2NVSkJRWEZDTEVOQlFVRTdSVUZEYmtJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFZRVUZWTEVWQlFVVXNTMEZCU3p0RlFVTnFRaXhQUVVGUExFVkJRVU1zUzBGQlN6dERRVTFrT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUV6UlhaRExFRkJjMFZGTEdkQ1FYUkZZeXhEUVhORlpDeHhRa0ZCY1VJc1EwRkJRVHRKUVUxcVFpeFBRVUZQTEVWQlFVTXNTVUZCU1R0SFFVZG1PenM3UVVFdlJVZ3NRVUZuUmtVc1owSkJhRVpqTEVOQlowWmtMR0ZCUVdFc1EwRkJRVHRGUVVOWUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRaRHM3UVVGdVJrZ3NRVUZ2UmtVc1owSkJjRVpqTEVOQmIwWmtMR1ZCUVdVc1EwRkJRVHRGUVVOaUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4SFFVRkhMRVZCUVVVc1MwRkJTenRGUVVOV0xFbEJRVWtzUlVGQlF5eERRVUZETzBWQlEwNHNXVUZCV1N4RlFVRkRMRWxCUVVrN1JVRkRha0lzUzBGQlN5eEZRVUZGTEVOQlFVTTdRMEZWVkRzN1FVRlVReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCTlVaMlF5eEJRVzlHUlN4blFrRndSbU1zUTBGdlJtUXNaVUZCWlN4RFFVRkJPMGxCVTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3U1VGRGJFSXNUMEZCVHl4RlFVRkRMRk5CUVZNN1NVRkRha0lzUjBGQlJ5eEZRVUZGTEVOQlFVTTdTVUZEVGl4SlFVRkpMRVZCUVVVc1EwRkJRenRKUVVOUUxFdEJRVXNzUlVGQlJTeERRVUZETzBsQlExSXNXVUZCV1N4RlFVRkRMRU5CUVVNN1IwRkhha0k3T3p0QlFYSkhTQ3hCUVhWSFJTeG5Ra0YyUjJNc1EwRjFSMlFzVlVGQlZTeERRVUZCTzBWQlExSXNWVUZCVlN4RlFVRkZMR3REUVVGclF5eERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5PMFZCUXk5RUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEZWQlFWVXNSVUZCUlN4TFFVRkxPMFZCUTJwQ0xHRkJRV0VzUlVGQlJTeExRVUZMTzBOQmEwSnlRanM3UVVGcVFrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVGRIZGtNc1FVRjFSMFVzWjBKQmRrZGpMRU5CZFVka0xGVkJRVlVzUTBGQlFUdEpRVTlPTEZWQlFWVXNSVUZCUlN3eVFrRkJNa0lzUTBGQlF5eFRRVUZUTEVOQlFVTXNUVUZCVFR0SlFVTjRSQ3h4UWtGQmNVSXNSVUZCUlN4TFFVRkxPMGxCUXpWQ0xHVkJRV1VzUlVGQlJTeFBRVUZQTzBsQlEzaENMRlZCUVZVc1JVRkJSU3hKUVVGSk8wbEJRMmhDTEdGQlFXRXNSVUZCUlN4TFFVRkxPMGRCV1haQ096czdRVUZTUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmRFaDZReXhCUVhGSVNTeG5Ra0Z5U0Zrc1EwRnhTRmdzYVVKQlFVOHNRMEZCUVR0SlFVVktMR0ZCUVdFc1JVRkJSU3hMUVVGTE8wZEJSWFpDT3pzN1FVRjZTRXdzUVVFeVNFa3NaMEpCTTBoWkxFTkJNa2hZTEhGQ1FVRlhMRU5CUVVFN1JVRkRWaXhSUVVGUkxFVkJRVVVzVVVGQlVUdERRVU51UWpzN1FVRTNTRXdzUVVFclNFVXNaMEpCTDBoakxFTkJLMGhrTEhOQ1FVRnpRaXhEUVVGQk8wVkJRM0JDTEdkQ1FVRm5RaXhGUVVGRExFOUJRVkU3UlVGRGVrSXNWVUZCVlN4RlFVRkZMRFpFUVVFMlJDeERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5PMFZCUXpGR0xHVkJRV1VzUlVGQlF5eExRVUZMTzBWQlEzSkNMRkZCUVZFc1JVRkJReXhSUVVGUk8wVkJRMnBDTEU5QlFVOHNSVUZCUXl4RlFVRkZPMFZCUTFZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVTXNTMEZCU3p0RFFVdGlPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjRTWFpETEVGQkswaEZMR2RDUVM5SVl5eERRU3RJWkN4elFrRkJjMElzUTBGQlFUdEpRVlZzUWl4TlFVRk5MRVZCUVVNc1MwRkJTenRIUVVWbU96czdRVUV6U1Vnc1FVRTBTVVVzWjBKQk5VbGpMRU5CTkVsa0xHdENRVUZyUWl4RFFVRkJPMFZCUTJoQ0xFdEJRVXNzUlVGQlJTeEhRVUZITzBWQlExWXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkxiRUk3T3pzN096czdPenRQUVZOSE8wTkJRMG83TzBGQlpFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRUzlKZGtNc1FVRTBTVVVzWjBKQk5VbGpMRU5CTkVsa0xHdENRVUZyUWl4RFFVRkJPMGxCU1dRc1MwRkJTeXhGUVVGRkxFbEJRVWs3UjBGaFpEczdPMEZCTjBwSUxFRkJPRXBGTEdkQ1FUbEtZeXhEUVRoS1pDeHZRa0ZCYjBJc1EwRkJRVHRGUVVOdVFpeFBRVUZQTEVWQlFVTXNTVUZCU1R0RFFWTmFPenRCUVZCRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnFTM1pETEVGQk9FcEZMR2RDUVRsS1l5eERRVGhLWkN4dlFrRkJiMElzUTBGQlFUdEpRVWxvUWl4UFFVRlBMRVZCUVVNc1MwRkJTenRKUVVOaUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBsQlEyeENMRTFCUVUwc1JVRkJSU3hOUVVGTk8wbEJRMlFzVVVGQlVTeEZRVUZGTEUxQlFVMDdSMEZIYmtJN096dEJRWGhMU0N4QlFUQkxSU3huUWtFeFMyTXNRMEV3UzJRc1pVRkJaU3hEUVVGRE8wVkJSV1FzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVhkR2JrSTdPMEZCY0VaRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnFUSFpETEVGQk1FdEZMR2RDUVRGTFl5eERRVEJMWkN4bFFVRmxMRU5CUVVNN1NVRlJXaXhQUVVGUExFVkJRVU1zU1VGQlNUdEhRVzFHWmpzN08wRkJjbEZJTEVGQmIweEpMR2RDUVhCTVdTeERRVzlNV0N4M1FrRkJVeXhEUVVGQk8wVkJRMUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1VVRkJVU3hGUVVGRkxFMUJRVTA3UTBGRGFrSTdPMEZCZGt4TUxFRkJkMHhKTEdkQ1FYaE1XU3hEUVhkTVdDeHJRa0ZCUnl4RFFVRkJPMFZCUTBZc1QwRkJUeXhGUVVGRExFTkJRVU03UlVGRFZDeFRRVUZUTEVWQlFVVXNOa0pCUVRaQ08wVkJRM2hETEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGUVVGRkxFTkJRVU03UTBGVlZqczdRVUZVUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk4weDZReXhCUVhkTVNTeG5Ra0Y0VEZrc1EwRjNURmdzYTBKQlFVY3NRMEZCUVR0SlFVMUJMRlZCUVZVc1JVRkJReXhEUVVGRE8wbEJRMW9zUzBGQlN5eEZRVUZGTEV0QlFVczdSMEZQWmpzN08wRkJTa2NzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVd4Tk0wTXNRVUZwVFUwc1owSkJhazFWTEVOQmQweFlMR3RDUVVGSExFTkJVMFlzUjBGQlJ5eERRVUZCTzBsQlJVTXNTMEZCU3l4RlFVRkZMRXRCUVVzN1IwRkZaanM3TzBGQmNrMVFMRUZCZFUxSkxHZENRWFpOV1N4RFFYVk5XQ3hyUWtGQlJ5eERRVUZCTzBWQlEwWXNUMEZCVHl4RlFVRkRMRU5CUVVNN1JVRkRWQ3hUUVVGVExFVkJRVVVzSzBKQlFTdENPMFZCUXpGRExFdEJRVXNzUlVGQlJTeEhRVUZITzBWQlExWXNSMEZCUnl4RlFVRkZMRU5CUVVNN1JVRkRUaXhWUVVGVkxFVkJRVVVzU1VGQlNUdERRVU5xUWpzN1FVRTNUVXdzUVVFNFRVa3NaMEpCT1UxWkxFTkJPRTFZTEd0Q1FVRkhMRU5CUVVFN1JVRkRSaXhQUVVGUExFVkJRVU1zUTBGQlF6dEZRVU5VTEZOQlFWTXNSVUZCUlN4bFFVRmxPMFZCUXpGQ0xGTkJRVk1zUlVGQlJTdzJRa0ZCTmtJN1JVRkRlRU1zUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4SFFVRkhMRVZCUVVVc1NVRkJTVHRGUVVOVUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQlEycENPenRCUVhKT1RDeEJRWE5PU1N4blFrRjBUbGtzUTBGelRsZ3NhMEpCUVVjc1EwRkJRVHRGUVVOR0xFOUJRVThzUlVGQlF5eERRVUZETzBWQlExUXNVMEZCVXl4RlFVRkZMR1ZCUVdVN1JVRkRNVUlzVTBGQlV5eEZRVUZGTEN0Q1FVRXJRanRGUVVNeFF5eExRVUZMTEVWQlFVVXNSMEZCUnp0RlFVTldMRWRCUVVjc1JVRkJSU3hEUVVGRE8wVkJRMDRzVlVGQlZTeEZRVUZGTEV0QlFVczdRMEZEYkVJN08wRkJOMDVNTEVGQk9FNUpMR2RDUVRsT1dTeERRVGhPV0N4clFrRkJSeXhEUVVGQk8wVkJRMFlzVDBGQlR5eEZRVUZETEVOQlFVTTdSVUZIVkN4TFFVRkxMRVZCUVVVc1MwRkJTenRGUVVOYUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hIUVVGSExFVkJRVU1zUTBGQlF6dERRVXRPT3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUYyVDNwRExFRkJPRTVKTEdkQ1FUbE9XU3hEUVRoT1dDeHJRa0ZCUnl4RFFVRkJPMGxCVlVFc1MwRkJTeXhGUVVGRkxFZEJRVWM3UjBGRllqczdPMEZCTVU5TUxFRkJNazlKTEdkQ1FUTlBXU3hEUVRKUFdDeHJRa0ZCUnl4RFFVRkJPMFZCUTBZc1QwRkJUeXhGUVVGRExFTkJRVU03UlVGSFZDeExRVUZMTEVWQlFVTXNTMEZCU3p0RlFVTllMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4SFFVRkhMRVZCUVVNc1MwRkJTenRGUVVWVUxGTkJRVk1zUlVGQlF5eGxRVUZoTzBOQlowSjRRanM3UVVGbVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJjbEF4UXl4QlFUSlBTU3huUWtFelQxa3NRMEV5VDFnc2EwSkJRVWNzUTBGQlFUdEpRVmRCTEV0QlFVc3NSVUZCUlN4SFFVRkhPMGRCWTJJN096dEJRVmhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNlVIcERMRUZCTWs5SkxHZENRVE5QV1N4RFFUSlBXQ3hyUWtGQlJ5eERRVUZCTzBsQlpVRXNSMEZCUnl4RlFVRkRMRU5CUVVNN1NVRkRUQ3hMUVVGTExFVkJRVVVzUjBGQlJ6dEhRVk5pT3pzN1FVRktSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYUZFelF5eEJRVGhRVFN4blFrRTVVRlVzUTBFeVQxZ3NhMEpCUVVjc1EwRnRRa1lzUjBGQlJ5eERRVUZCTzBsQlIwTXNTMEZCU3l4RlFVRkRMRXRCUVVzN1IwRkZaRHM3TzBGQlNVd3NWVUZCVlN4RFFVRldMRXRCUVZVN1JVRkRVaXhGUVVGRk8wbEJRMEVzWTBGQll5eEZRVUZGTEhGRVFVRnJSRHRKUVVOc1JTeE5RVUZOTEVWQlFVVXNhMFJCUVN0RE8wbEJRM1pFTEZOQlFWTXNSVUZCUlN4bFFVRmxPenRGUVVVMVFpeEhRVUZITzBsQlEwUXNZMEZCWXl4RlFVRkZMSGRFUVVGelJEdEpRVU4wUlN4TlFVRk5MRVZCUVVVc2NVUkJRV3RFTzBsQlF6RkVMRk5CUVZNc1JVRkJSU3hwUWtGQmFVSTdPMFZCUlRsQ0xFbEJRVWs3U1VGRFJpeGpRVUZqTEVWQlFVVXNjVVJCUVd0RU8wbEJRMnhGTEUxQlFVMHNSVUZCUlN4clJFRkJLME03U1VGRGRrUXNVMEZCVXl4RlFVRkZMR1ZCUVdVN096czdRVUZ5VW1oRExFRkJkMUpGTEdkQ1FYaFNZeXhEUVhkU1pDeFhRVUZYTEVOQlFVTTdSVUZEVml4TFFVRkxMRVZCUVVVc1NVRkJTVHREUVVOa096dEJRVEZTUkN4QlFUUlNSU3huUWtFMVVtTXNRMEUwVW1Rc2JVSkJRVzFDTEVGQlFVRXNVVUZCVVN4SFFVRkRMRzFDUVVGdFFpeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTnlSQ3huUWtGQlowSXNSVUZCUlN4UFFVRlBPME5CUXpGQ096dEJRVGxTU0N4QlFXZFRSU3huUWtGb1UyTXNRMEZuVTJRc1VVRkJVU3hEUVVGQk8wVkJRMDRzVjBGQlZ5eEZRVUZGTEZWQlFWVTdSVUZEZGtJc1IwRkJSeXhGUVVGRkxIbENRVUY1UWl4RlFVRkRMSGRGUVVGM1JTeERRVUZETEdOQlFXTXNSVUZCUXl3MlFrRkJOa0lzUTBGQlF5eGpRVUZqTzBWQlEyNUxMRlZCUVZVc1JVRkJSU3hSUVVGUk8wVkJRM0JDTEZkQlFWY3NSVUZCUlN4SFFVRkhPMFZCUTJoQ0xGbEJRVmtzUlVGQlJTeEpRVU5vUWp0RFFVRkRPenRCUVhSVFNDeEJRWFZUUlN4blFrRjJVMk1zUTBGMVUyUXNVVUZCVVN4RFFVRkJPMFZCUTA0c1QwRkJUeXhGUVVGRExHRkJRV0U3UTBGUGRFSTdPMEZCTDFOSUxFRkJlVk5KTEdkQ1FYcFRXU3hEUVhsVFdDeGhRVUZMTEVOQlFVRTdSVUZEU2l4TFFVRkxMRVZCUVVVc1QwRkJUenREUVVsbU96dEJRVGxUVEN4QlFUSlRUU3huUWtFelUxVXNRMEY1VTFnc1lVRkJTeXhCUVVWSUxGbEJRVmtzUTBGQlFUdEZRVU5ZTEdGQlFXRXNSVUZCUlN4SlFVRkpPME5CUTNCQ096dEJRVTFFTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGdVZIcERMRUZCYTFSSkxHZENRV3hVV1N4RFFXdFVXQ3h2UWtGQlZ5eERRVUZCTzBsQlJWSXNWMEZCVnl4RlFVRkZMRXRCUVVzN1NVRkRiRUlzVjBGQlZ5eEZRVUZGTEV0QlFVczdSMEZOY2tJN096dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGMlZIcERMRUZCYTFSSkxHZENRV3hVV1N4RFFXdFVXQ3h2UWtGQlZ5eERRVUZCTzBsQlRWSXNWMEZCVnl4RlFVRkZMRkZCUVZFN1NVRkRja0lzVjBGQlZ5eEZRVUZGTEZGQlFWRTdSMEZGZUVJN096dEJRVE5VVEN4QlFTdFVTU3huUWtFdlZGa3NRMEVyVkZnc2FVSkJRVXNzUTBGQlFUdEZRVU5LTEZOQlFWTXNSVUZCUlN4SlFVRkpPME5CU1doQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGcVZYcERMRUZCSzFSSkxHZENRUzlVV1N4RFFTdFVXQ3hwUWtGQlN5eERRVUZCTzBsQlIwWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1IwRkZiRUk3T3p0QlFVZERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUYyVlhwRExFRkJjMVZKTEdkQ1FYUlZXU3hEUVhOVldDeDNRa0ZCV1N4RFFVRkJPMGxCUlZRc1MwRkJTeXhGUVVGRkxFTkJRVU03UjBGRldEczdPMEZCUjBNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUZFZla01zUVVFMFZVa3NaMEpCTlZWWkxFTkJORlZZTEhkQ1FVRlpMRU5CUVVFN1NVRkZWQ3hMUVVGTExFVkJRVVVzUTBGQlF6dEhRVVZZSW4wPSAqL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljM1I1YkdWekxtTnpjeUlzSW5OdmRYSmpaWE1pT2xzaWMzUjViR1Z6TG5OamMzTWlMQ0pmYldsamNtOHVjMk56Y3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJCY1hWcElITmxJSEIxWldSbGJpQnBiWEJ2Y25SaGNpQnNhV0p5WlhMRHJXRnpJR1Y0ZEdWeWJtRnpYRzR2THlCbGFqb2dRR2x0Y0c5eWRDQW5MM1J2YjJ4ekwyWjFibU4wYVc5dWN5YzdYRzVjYmtCcGJYQnZjblFnWENKdGFXTnliMXdpT3lJc0lpOHZJRU5UVXlCa1pXd2diV2xqY205emFYUmxYRzR1ZG1abGN5MXRjeTFqYjI1MFpXNTBlMXh1SUNCcGJXZDdYRzRnSUNBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQjlYRzRnSUM1M2N6RXdMV010WTJGeVpITXRaR2x6WTI5MlpYSjVMWE4wWVc1a1lYSmtYMTlwYldGblpTMW9iMnhrWlhKN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmx4dUlDQjlYRzRnSUM1MlptMXpMV0ZrWkc5dWN5MXBiV2Q3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNGdJQzh2SUVKeVpXRmtZM0oxYldKelhHNGdJQzUyWmkxaWNtVmhaR055ZFcxaWMzdGNiaUFnSUNBbUlHeHBJSHRjYmlBZ0lDQWdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYRzVjYmlBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lDWWdZWHRjYmlBZ0lDQWdJQ0FnSUNBbU9tSmxabTl5Wlh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMTNhV1IwYURvZ0xqQTJNalZ5WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklDNHdOakkxY21WdElITnZiR2xrSUNNek16TTdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXVNRFl5TlhKbGJTQnpiMnhwWkNBak16TXpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ0xqYzFjbVZ0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXVOelZ5WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d0TVRNMVpHVm5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDJ4cGJtc2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNsN1hHNGdJQ0FnSUNBZ0lDWTZZV1owWlhKN1hHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYZHBaSFJvT2lBdU1EWXlOWEpsYlR0Y2JpQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtbG5hSFE2SUM0d05qSTFjbVZ0SUhOdmJHbGtJQ016TXpNN1hHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYUnZjRG9nTGpBMk1qVnlaVzBnYzI5c2FXUWdJek16TXp0Y2JpQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ0xqYzFjbVZ0TzF4dUlDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ0xqYzFjbVZ0TzF4dUlDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1R0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQWdJQ0FnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEc0Z0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVJQ0F1ZG1adGN5MTJhV1JsYnkxamIyNTBZV2x1WlhKN1hHNGdJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUcxaGVDMW9aV2xuYUhRNklETTFNSEI0TzF4dUlDQWdJR1JwYzNCc1lYazZZbXh2WTJzN1hHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRwdWIyNWxPMXh1SUNBZ0lIMWNibHh1SUNCOVhHNGdJQzUyWm0xekxXTnZiblJsYm5SN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnZlZ4dUlDQXVkbVp0Y3kxamIyNTBZV2x1WlhKN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSG90YVc1a1pYZzZJRFU3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdkRzl3T2lBeE1EQndlRHRjYmlBZ0lDQnNaV1owT2pBN1hHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9qUXdjSGc3WEc0Z0lDQWdjbWxuYUhRNklEQTdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNk1UQndlQ0F4TUhCNE8xeHVJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2pBN1hHNGdJQ0FnZlZ4dVhHNGdJSDFjYmx4dUlDQXVkbVl0WW1GdWJtVnllMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFZ5YkNnbkxpNHZhVzFuTDJKbkxXSmhibTVsY2kxdGIySnBiR1V1YW5Cbkp5a2dibTh0Y21Wd1pXRjBJR05sYm5SbGNqdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmJuUmhhVzQ3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lHMXBiaTFvWldsbmFIUTZJRFF3TUhCNE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJQzAxTUhCNE8xeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjFjbXdvSnk0dUwybHRaeTlpWnkxaVlXNXVaWEl1Y0c1bkp5a2dibTh0Y21Wd1pXRjBJR05sYm5SbGNqdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNHRlRG9nTkRNd2NIZzdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZiblJoYVc0N1hHNGdJQ0FnSUNCdGFXNHRhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dMVEl3Y0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZmRHbDBiR1Y3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBNU56QndlQ2w3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREV4TUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgyTnZiblJoYVc1bGNudGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1iWE10WW1GdWJtVnlMV052Ym5SaGFXNWxjbnRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pTm1OR1kwWmpRZ08xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklIVnliQ2duYUhSMGNITTZMeTkzZDNjdWRtOWtZV1p2Ym1VdVpYTXZZeTl6ZEdGMGFXTnpMMmx0WVdkbGJpOWlaeTFpWVc1dVpYSXVhbkJuSnlrZ2JtOHRjbVZ3WldGMElHTmxiblJsY2p0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZZMjkyWlhJN1hHNGdJQ0FnY0c5emFYUnBiMjQ2WVdKemIyeDFkR1U3WEc0Z0lDQWdlaTFwYm1SbGVEb3RNVHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNk5EY3djSGc3WEc1Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2pjMk9IQjRLU0I3WEc0Z0lDQWdJQ0JvWldsbmFIUTZORGN3Y0hnN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlptMXpMV0poYm01bGNpMTBhWFJzWlh0Y2JpQWdJQ0IzYVdSMGFEb2dOVEFsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PamMyT0hCNEtTQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaVpmWDJKdmJHOTdYRzRnSUNBZ0lDQjNhV1IwYURveE1EQndlRHRjYmlBZ0lDQWdJR2hsYVdkb2REcGhkWFJ2TzF4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEbzNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5S2k5Y2JpQWdmVnh1SUNBdWRtWnRjMTlmWW1GdWJtVnlMVzF2WW1sc1pYdGNiaUFnSUdScGMzQnNZWGs2Ym05dVpUdGNibHh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9tSnNiMk5yTzF4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJQ0FnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUgxY2JseHVJQ0I5WEc0Z0lDOHZZVzVwYldGMGFXOXVYRzRnSUM1MlptMXpMV0Z1YVcxaGRHbHZiaUI3WEc1Y2JpQWdJQ0IzYVdSMGFEb2dOVEFsTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmx4dVhHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRwdWIyNWxPMXh1SUNBZ0lIMWNiaUFnSUNBbUxTMWxiR1Z0Wlc1MGUxeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTB0TVh0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2TWp0Y2JpQWdJQ0FnSUdGdWFXMWhkR2x2YmpvZ1pteHZZWFFnTm5NZ1pXRnpaUzFwYmkxdmRYUWdhVzVtYVc1cGRHVTdYRzRnSUNBZ0lDQnlhV2RvZERvZ016QndlRHRjYmlBZ0lDQWdJR0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURjMk9YQjRLU0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNk1EdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklDMDRNSEI0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVcxbmUxeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEyTkRCd2VDa2dlMXh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TkRCd2VEdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBbUxTMHllMXh1SUNBZ0lDQWdlaTFwYm1SbGVEb3lPMXh1SUNBZ0lDQWdZVzVwYldGMGFXOXVPaUJtYkc5aGRDQTBMalZ6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURRMUpUdGNiaUFnSUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklEWXdjSGc3WEc0Z0lDQWdmVnh1SUNBZ0lDWXRMVE43WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPakk3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlhrb01IQjRLVHRjYmlBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nWm14dllYUWdOSE1nWldGelpTMXBiaTF2ZFhRZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNCeWFXZG9kRG9nTXpBbE8xeHVJQ0FnSUNBZ2RHOXdPaUF0TVRBbE8xeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNekJ3ZUR0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTB0Tkh0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2TWp0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbGVTZ3djSGdwTzF4dUlDQWdJQ0FnWVc1cGJXRjBhVzl1T2lCbWJHOWhkQ0EwTGpWeklHVmhjMlV0YVc0dGIzVjBJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklEYzRKVHRjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3TUhCNE8xeHVJQ0FnSUgxY2JpQWdJQ0FtTFMwMWUxeHVJQ0FnSUNBZ2VpMXBibVJsZURveU8xeHVJQ0FnSUNBZ0x5OTBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaWGtvTUhCNEtUdGNiaUFnSUNBZ0lDOHZZVzVwYldGMGFXOXVPaUJtYkc5aGRDQTBMalZ6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2QybGtkR2c2SURFd01IQjRPMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQWdJQ0FnY21sbmFIUTZJREV3TUNVN1hHNGdJQ0FnSUNCMGIzQTZNRHRjYmx4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTVjSGdwSUh0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURrNUpUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmkwdE5udGNiaUFnSUNBZ0lIb3RhVzVrWlhnNk1qdGNiaUFnSUNBZ0lDOHZkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1Y1S0RCd2VDazdYRzRnSUNBZ0lDQXZMMkZ1YVcxaGRHbHZiam9nWm14dllYUWdOQzQxY3lCbFlYTmxMV2x1TFc5MWRDQnBibVpwYm1sMFpUdGNiaUFnSUNBZ0lIZHBaSFJvT2pFNU1IQjRPMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQWdJQ0FnY21sbmFIUTZJRFk1SlR0Y2JpQWdJQ0FnSUhSdmNEb3RNekJ3ZUR0Y2JseHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9uTmpZV3hsS0M0NExDQXVPQ2s3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTFjSGdwSUh0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURnMUpUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpZNWNIZ3BJSHRjYmlBZ0lDQWdJQ0FnZEc5d09qQTdYRzRnSUNBZ0lDQWdJSEpwWjJoME9pQTNNQ1U3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdsdFozdGNibHh1SUNBZ0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBM05qbHdlQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lIZHBaSFJvT2pFd01IQjRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUUd0bGVXWnlZVzFsY3lCbWJHOWhkQ0I3WEc0Z0lDQWdNQ1VnZTF4dUlDQWdJQ0FnTFhkbFltdHBkQzFtYVd4MFpYSTZJR1J5YjNBdGMyaGhaRzkzS0RCd2VDQXlOWEI0SURFMUlEQndlQ0J5WjJKaEtERTFNU3d4TkRVc01UUTFMREF1TmlrcE8xeHVJQ0FnSUNBZ1ptbHNkR1Z5T2lCa2NtOXdMWE5vWVdSdmR5ZzFjSGdnTlRCd2VDQTFjSGdnY21kaVlTZ3hOVEVzTVRRMUxERTBOU3d3TGpZcEtUdGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxlU2d3Y0hncE8xeHVJQ0FnSUgxY2JpQWdJQ0ExTUNVZ2UxeHVJQ0FnSUNBZ0xYZGxZbXRwZEMxbWFXeDBaWEk2SUdSeWIzQXRjMmhoWkc5M0tEQndlQ0ExTlhCNElDMHhOWEI0SUNBd2NIZ2djbWRpWVNneE5URXNNVFExTERFME5Td3dMaklwS1R0Y2JpQWdJQ0FnSUdacGJIUmxjam9nWkhKdmNDMXphR0ZrYjNjb0xURTFjSGdnTnpWd2VDQXhOWEI0SUhKblltRW9NVFV4TERFME5Td3hORFVzTUM0eUtTazdYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaWGtvTFRJd2NIZ3BPMXh1SUNBZ0lIMWNiaUFnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQzEzWldKcmFYUXRabWxzZEdWeU9pQmtjbTl3TFhOb1lXUnZkeWd3Y0hnZ01qVndlQ0F4TlNBd2NIZ2djbWRpWVNneE5URXNNVFExTERFME5Td3dMallwS1R0Y2JpQWdJQ0FnSUdacGJIUmxjam9nWkhKdmNDMXphR0ZrYjNjb05YQjRJRFV3Y0hnZ05YQjRJSEpuWW1Fb01UVXhMREUwTlN3eE5EVXNNQzQyS1NrN1hHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpYa29NSEI0S1R0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnTG5abWJYTXRkbWxrWlc4Z2UxeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVmVnh1WEc0Z0lDNTNjekV3TFdNdFptOXliVjlmY21Ga2FXODZZMmhsWTJ0bFpDc3VkM014TUMxakxXWnZjbTFmWDJ4aFltVnNPanBoWm5SbGNpQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdOMk01TWp0Y2JpQWdmVnh1WEc0Z0lDNTJaaTFpYjJ4a2UxeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJbFp2WkdGbWIyNWxYQ0k3WEc0Z0lDQWdjM0pqT2lCc2IyTmhiQ2hjSWxadlpHRm1iMjVsSUZKbklFSnZiR1JjSWlrc2RYSnNLRndpYUhSMGNITTZMeTkzZDNjdWRtOWtZV1p2Ym1VdVpYTXZZeTl6ZEdGMGFXTnpMMlp2Ym5SekwzWnZaR0ZtYjI1bGNtZGlaQzEzWldKbWIyNTBMbmR2Wm1aY0lpa2dabTl5YldGMEtGd2lkMjltWmx3aUtTeDFjbXdvWm05dWRITXZkbTlrWVdadmJtVXRZbTlzWkM1M2IyWm1LU0JtYjNKdFlYUW9YQ0ozYjJabVhDSXBPMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRndpYm05eWJXRnNYQ0k3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnSUNCbWIyNTBMV1JwYzNCc1lYazZJSE4zWVhCY2JpQWdmVnh1SUNBdWRtWXRabTl5Ylh0Y2JpQWdJQ0J3WVdSa2FXNW5PakV3Y0hnZ01DQXdJREkwY0hnN1hHNGdJQ0FnSmw5ZlltOTRlMXh1SUNBZ0lDQWdkMmxrZEdnNklHbHVhWFJwWVd3N1hHNGdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXlNSEI0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM1MlppMXlZWFJsYzN0Y2JpQWdJQ0FtWDE5amIyNTBZV2x1WlhKN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNsN1hHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJ6ZEdGeWREdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUhOMFlYSjBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1pteGxlQzFsYm1RN1hHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJtYkdWNExXVnVaRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0F1ZG1ZdFltRnVibVZ5TlRCN1hHNGdJQ0FnSmw5ZmFXMW5lMXh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncGUxeHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZlkyOXVkR0ZwYm1WeU1YdGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJRzl5WkdWeU9pQXlPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWmZYMk52Ym5SaGFXNWxjako3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBNU56QndlQ2tnZTF4dUlDQWdJQ0FnSUNCdmNtUmxjam9nTVR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmlKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVORFFTeEJRVU5GTEdkQ1FVUmpMRU5CUTJRc1IwRkJSeXhEUVVGQk8wVkJRMFFzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJTRWdzUVVGSlJTeG5Ra0ZLWXl4RFFVbGtMRGhEUVVFNFF5eERRVUZCTzBWQlF6VkRMRkZCUVZFc1JVRkJSU3hOUVVGTk8wTkJSV3BDT3p0QlFWQklMRUZCVVVVc1owSkJVbU1zUTBGUlpDeG5Ra0ZCWjBJc1EwRkJRVHRGUVVOa0xHTkJRV01zUlVGQlJTeERRVUZETEVOQlFVRXNWVUZCVlR0RFFVTTFRanM3UVVGV1NDeEJRV0ZKTEdkQ1FXSlpMRU5CV1dRc1pVRkJaU3hEUVVOWUxFVkJRVVVzUTBGQlF6dEZRVU5JTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CWjBOcVFqczdRVUU1UTB3c1FVRm5RazBzWjBKQmFFSlZMRU5CV1dRc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGSFJDeFhRVUZYTEVOQlFVTTdSVUZEV0N4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVsa096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGc1FqTkRMRUZCWjBKTkxHZENRV2hDVlN4RFFWbGtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJSMFFzVjBGQlZ5eERRVUZETzBsQlIxUXNUMEZCVHl4RlFVRkZMRXRCUVVzN1IwRkZha0k3T3p0QlFYSkNVQ3hCUVhsQ1ZTeG5Ra0Y2UWswc1EwRlpaQ3hsUVVGbExFTkJRMWdzUlVGQlJTeEJRVlZFTEZsQlFWa3NRMEZEVkN4RFFVRkRMRUZCUTBFc1QwRkJUeXhEUVVGQk8wVkJRMDRzV1VGQldTeEZRVUZGTEZGQlFWRTdSVUZEZEVJc1dVRkJXU3hGUVVGRkxHMUNRVUZ0UWp0RlFVTnFReXhWUVVGVkxFVkJRVVVzYlVKQlFXMUNPMFZCUXk5Q0xFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNTMEZCU3l4RlFVRkZMRTFCUVUwN1JVRkRZaXhOUVVGTkxFVkJRVVVzVFVGQlRUdEZRVU5rTEZOQlFWTXNSVUZCUlN4bFFVRmxPMFZCUXpGQ0xFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NUMEZCVHl4RlFVRkZMRmxCUVZrN1JVRkRja0lzWTBGQll5eEZRVUZGTEZGQlFWRTdSVUZEZUVJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGTmJrSTdPMEZCU2tNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYUkRMME1zUVVGNVFsVXNaMEpCZWtKTkxFTkJXV1FzWlVGQlpTeERRVU5ZTEVWQlFVVXNRVUZWUkN4WlFVRlpMRU5CUTFRc1EwRkJReXhCUVVOQkxFOUJRVThzUTBGQlFUdEpRV05LTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUjJoQ096czdRVUV4UTFnc1FVRm5SRWtzWjBKQmFFUlpMRU5CWjBSWUxIRkNRVUZOTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGZEJRVmNzUlVGQlJTeE5RVUZOTzBOQmFVSndRanM3UVVGb1FrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVzVFZWtNc1FVRnZSRkVzWjBKQmNFUlJMRU5CWjBSWUxIRkNRVUZOTEVGQlNVWXNUVUZCVFN4RFFVRkJPMGxCUTB3c1dVRkJXU3hGUVVGRkxGRkJRVkU3U1VGRGRFSXNXVUZCV1N4RlFVRkZMRzFDUVVGdFFqdEpRVU5xUXl4VlFVRlZMRVZCUVVVc2JVSkJRVzFDTzBsQlF5OUNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wbEJRMlFzUzBGQlN5eEZRVUZGTEUxQlFVMDdTVUZEWWl4TlFVRk5MRVZCUVVVc1RVRkJUVHRKUVVOa0xGTkJRVk1zUlVGQlJTeGhRVUZoTzBsQlEzaENMRTlCUVU4c1JVRkJSU3hGUVVGRk8wbEJRMWdzVDBGQlR5eEZRVUZGTEZsQlFWazdTVUZEY2tJc1kwRkJZeXhGUVVGRkxGRkJRVkU3U1VGRGVFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1IwRkRia0k3T3p0QlFXaEZWQ3hCUVhORlJTeG5Ra0YwUldNc1EwRnpSV1FzY1VKQlFYRkNMRU5CUVVFN1JVRkRia0lzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4VlFVRlZMRVZCUVVVc1MwRkJTenRGUVVOcVFpeFBRVUZQTEVWQlFVTXNTMEZCU3p0RFFVMWtPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRXpSWFpETEVGQmMwVkZMR2RDUVhSRll5eERRWE5GWkN4eFFrRkJjVUlzUTBGQlFUdEpRVTFxUWl4UFFVRlBMRVZCUVVNc1NVRkJTVHRIUVVkbU96czdRVUV2UlVnc1FVRm5Sa1VzWjBKQmFFWmpMRU5CWjBaa0xHRkJRV0VzUTBGQlFUdEZRVU5ZTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGRFpEczdRVUZ1Umtnc1FVRnZSa1VzWjBKQmNFWmpMRU5CYjBaa0xHVkJRV1VzUTBGQlFUdEZRVU5pTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hIUVVGSExFVkJRVVVzUzBGQlN6dEZRVU5XTEVsQlFVa3NSVUZCUXl4RFFVRkRPMFZCUTA0c1dVRkJXU3hGUVVGRExFbEJRVWs3UlVGRGFrSXNTMEZCU3l4RlFVRkZMRU5CUVVNN1EwRlZWRHM3UVVGVVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJOVVoyUXl4QlFXOUdSU3huUWtGd1JtTXNRMEZ2Um1Rc1pVRkJaU3hEUVVGQk8wbEJVMWdzVVVGQlVTeEZRVUZGTEZGQlFWRTdTVUZEYkVJc1QwRkJUeXhGUVVGRExGTkJRVk03U1VGRGFrSXNSMEZCUnl4RlFVRkZMRU5CUVVNN1NVRkRUaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEpRVU5RTEV0QlFVc3NSVUZCUlN4RFFVRkRPMGxCUTFJc1dVRkJXU3hGUVVGRExFTkJRVU03UjBGSGFrSTdPenRCUVhKSFNDeEJRWFZIUlN4blFrRjJSMk1zUTBGMVIyUXNWVUZCVlN4RFFVRkJPMFZCUTFJc1ZVRkJWU3hGUVVGRkxHdERRVUZyUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTk8wVkJReTlFTEdWQlFXVXNSVUZCUlN4UFFVRlBPMFZCUTNoQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRlZCUVZVc1JVRkJSU3hMUVVGTE8wVkJRMnBDTEdGQlFXRXNSVUZCUlN4TFFVRkxPME5CYTBKeVFqczdRVUZxUWtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUZEhka01zUVVGMVIwVXNaMEpCZGtkakxFTkJkVWRrTEZWQlFWVXNRMEZCUVR0SlFVOU9MRlZCUVZVc1JVRkJSU3d5UWtGQk1rSXNRMEZCUXl4VFFVRlRMRU5CUVVNc1RVRkJUVHRKUVVONFJDeHhRa0ZCY1VJc1JVRkJSU3hMUVVGTE8wbEJRelZDTEdWQlFXVXNSVUZCUlN4UFFVRlBPMGxCUTNoQ0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBsQlEyaENMR0ZCUVdFc1JVRkJSU3hMUVVGTE8wZEJXWFpDT3pzN1FVRlNSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCZEVoNlF5eEJRWEZJU1N4blFrRnlTRmtzUTBGeFNGZ3NhVUpCUVU4c1EwRkJRVHRKUVVWS0xHRkJRV0VzUlVGQlJTeExRVUZMTzBkQlJYWkNPenM3UVVGNlNFd3NRVUV5U0Vrc1owSkJNMGhaTEVOQk1raFlMSEZDUVVGWExFTkJRVUU3UlVGRFZpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFVTnVRanM3UVVFM1NFd3NRVUVyU0VVc1owSkJMMGhqTEVOQkswaGtMSE5DUVVGelFpeERRVUZCTzBWQlEzQkNMR2RDUVVGblFpeEZRVUZETEU5QlFWRTdSVUZEZWtJc1ZVRkJWU3hGUVVGRkxEWkVRVUUyUkN4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTk8wVkJRekZHTEdWQlFXVXNSVUZCUXl4TFFVRkxPMFZCUTNKQ0xGRkJRVkVzUlVGQlF5eFJRVUZSTzBWQlEycENMRTlCUVU4c1JVRkJReXhGUVVGRk8wVkJRMVlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVNc1MwRkJTenREUVV0aU96dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNFNYWkRMRUZCSzBoRkxHZENRUzlJWXl4RFFTdElaQ3h6UWtGQmMwSXNRMEZCUVR0SlFWVnNRaXhOUVVGTkxFVkJRVU1zUzBGQlN6dEhRVVZtT3pzN1FVRXpTVWdzUVVFMFNVVXNaMEpCTlVsakxFTkJORWxrTEd0Q1FVRnJRaXhEUVVGQk8wVkJRMmhDTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGTGJFSTdPenM3T3pzN096dFBRVk5ITzBOQlEwbzdPMEZCWkVNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFTOUpka01zUVVFMFNVVXNaMEpCTlVsakxFTkJORWxrTEd0Q1FVRnJRaXhEUVVGQk8wbEJTV1FzUzBGQlN5eEZRVUZGTEVsQlFVazdSMEZoWkRzN08wRkJOMHBJTEVGQk9FcEZMR2RDUVRsS1l5eERRVGhLWkN4dlFrRkJiMElzUTBGQlFUdEZRVU51UWl4UFFVRlBMRVZCUVVNc1NVRkJTVHREUVZOYU96dEJRVkJETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGcVMzWkRMRUZCT0VwRkxHZENRVGxLWXl4RFFUaEtaQ3h2UWtGQmIwSXNRMEZCUVR0SlFVbG9RaXhQUVVGUExFVkJRVU1zUzBGQlN6dEpRVU5pTEZWQlFWVXNSVUZCUlN4TlFVRk5PMGxCUTJ4Q0xFMUJRVTBzUlVGQlJTeE5RVUZOTzBsQlEyUXNVVUZCVVN4RlFVRkZMRTFCUVUwN1IwRkhia0k3T3p0QlFYaExTQ3hCUVRCTFJTeG5Ra0V4UzJNc1EwRXdTMlFzWlVGQlpTeERRVUZETzBWQlJXUXNTMEZCU3l4RlFVRkZMRWRCUVVjN1JVRkRWaXhSUVVGUkxFVkJRVVVzVVVGQlVUdERRWGRHYmtJN08wRkJjRVpETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGcVRIWkRMRUZCTUV0RkxHZENRVEZMWXl4RFFUQkxaQ3hsUVVGbExFTkJRVU03U1VGUldpeFBRVUZQTEVWQlFVTXNTVUZCU1R0SFFXMUdaanM3TzBGQmNsRklMRUZCYjB4SkxHZENRWEJNV1N4RFFXOU1XQ3gzUWtGQlV5eERRVUZCTzBWQlExSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVVVGQlVTeEZRVUZGTEUxQlFVMDdRMEZEYWtJN08wRkJka3hNTEVGQmQweEpMR2RDUVhoTVdTeERRWGRNV0N4clFrRkJSeXhEUVVGQk8wVkJRMFlzVDBGQlR5eEZRVUZETEVOQlFVTTdSVUZEVkN4VFFVRlRMRVZCUVVVc05rSkJRVFpDTzBWQlEzaERMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVFVGQlRTeEZRVUZGTEVOQlFVTTdRMEZWVmpzN1FVRlVReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCTjB4NlF5eEJRWGRNU1N4blFrRjRURmtzUTBGM1RGZ3NhMEpCUVVjc1EwRkJRVHRKUVUxQkxGVkJRVlVzUlVGQlF5eERRVUZETzBsQlExb3NTMEZCU3l4RlFVRkZMRXRCUVVzN1IwRlBaanM3TzBGQlNrY3NUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3hOTTBNc1FVRnBUVTBzWjBKQmFrMVZMRU5CZDB4WUxHdENRVUZITEVOQlUwWXNSMEZCUnl4RFFVRkJPMGxCUlVNc1MwRkJTeXhGUVVGRkxFdEJRVXM3UjBGRlpqczdPMEZCY2sxUUxFRkJkVTFKTEdkQ1FYWk5XU3hEUVhWTldDeHJRa0ZCUnl4RFFVRkJPMFZCUTBZc1QwRkJUeXhGUVVGRExFTkJRVU03UlVGRFZDeFRRVUZUTEVWQlFVVXNLMEpCUVN0Q08wVkJRekZETEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1IwRkJSeXhGUVVGRkxFTkJRVU03UlVGRFRpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RFFVTnFRanM3UVVFM1RVd3NRVUU0VFVrc1owSkJPVTFaTEVOQk9FMVlMR3RDUVVGSExFTkJRVUU3UlVGRFJpeFBRVUZQTEVWQlFVTXNRMEZCUXp0RlFVTlVMRk5CUVZNc1JVRkJSU3hsUVVGbE8wVkJRekZDTEZOQlFWTXNSVUZCUlN3MlFrRkJOa0k3UlVGRGVFTXNTMEZCU3l4RlFVRkZMRWRCUVVjN1JVRkRWaXhIUVVGSExFVkJRVVVzU1VGQlNUdEZRVU5VTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CUTJwQ096dEJRWEpPVEN4QlFYTk9TU3huUWtGMFRsa3NRMEZ6VGxnc2EwSkJRVWNzUTBGQlFUdEZRVU5HTEU5QlFVOHNSVUZCUXl4RFFVRkRPMFZCUTFRc1UwRkJVeXhGUVVGRkxHVkJRV1U3UlVGRE1VSXNVMEZCVXl4RlFVRkZMQ3RDUVVFclFqdEZRVU14UXl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNWVUZCVlN4RlFVRkZMRXRCUVVzN1EwRkRiRUk3TzBGQk4wNU1MRUZCT0U1SkxHZENRVGxPV1N4RFFUaE9XQ3hyUWtGQlJ5eERRVUZCTzBWQlEwWXNUMEZCVHl4RlFVRkRMRU5CUVVNN1JVRkhWQ3hMUVVGTExFVkJRVVVzUzBGQlN6dEZRVU5hTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeEhRVUZITEVWQlFVTXNRMEZCUXp0RFFVdE9PenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjJUM3BETEVGQk9FNUpMR2RDUVRsT1dTeERRVGhPV0N4clFrRkJSeXhEUVVGQk8wbEJWVUVzUzBGQlN5eEZRVUZGTEVkQlFVYzdSMEZGWWpzN08wRkJNVTlNTEVGQk1rOUpMR2RDUVROUFdTeERRVEpQV0N4clFrRkJSeXhEUVVGQk8wVkJRMFlzVDBGQlR5eEZRVUZETEVOQlFVTTdSVUZIVkN4TFFVRkxMRVZCUVVNc1MwRkJTenRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NTMEZCU3l4RlFVRkZMRWRCUVVjN1JVRkRWaXhIUVVGSExFVkJRVU1zUzBGQlN6dEZRVVZVTEZOQlFWTXNSVUZCUXl4bFFVRmhPME5CWjBKNFFqczdRVUZtUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmNsQXhReXhCUVRKUFNTeG5Ra0V6VDFrc1EwRXlUMWdzYTBKQlFVY3NRMEZCUVR0SlFWZEJMRXRCUVVzc1JVRkJSU3hIUVVGSE8wZEJZMkk3T3p0QlFWaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUY2VUhwRExFRkJNazlKTEdkQ1FUTlBXU3hEUVRKUFdDeHJRa0ZCUnl4RFFVRkJPMGxCWlVFc1IwRkJSeXhGUVVGRExFTkJRVU03U1VGRFRDeExRVUZMTEVWQlFVVXNSMEZCUnp0SFFWTmlPenM3UVVGS1J5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJhRkV6UXl4QlFUaFFUU3huUWtFNVVGVXNRMEV5VDFnc2EwSkJRVWNzUTBGdFFrWXNSMEZCUnl4RFFVRkJPMGxCUjBNc1MwRkJTeXhGUVVGRExFdEJRVXM3UjBGRlpEczdPMEZCU1V3c1ZVRkJWU3hEUVVGV0xFdEJRVlU3UlVGRFVpeEZRVUZGTzBsQlEwRXNZMEZCWXl4RlFVRkZMSEZFUVVGclJEdEpRVU5zUlN4TlFVRk5MRVZCUVVVc2EwUkJRU3RETzBsQlEzWkVMRk5CUVZNc1JVRkJSU3hsUVVGbE96dEZRVVUxUWl4SFFVRkhPMGxCUTBRc1kwRkJZeXhGUVVGRkxIZEVRVUZ6UkR0SlFVTjBSU3hOUVVGTkxFVkJRVVVzY1VSQlFXdEVPMGxCUXpGRUxGTkJRVk1zUlVGQlJTeHBRa0ZCYVVJN08wVkJSVGxDTEVsQlFVazdTVUZEUml4alFVRmpMRVZCUVVVc2NVUkJRV3RFTzBsQlEyeEZMRTFCUVUwc1JVRkJSU3hyUkVGQkswTTdTVUZEZGtRc1UwRkJVeXhGUVVGRkxHVkJRV1U3T3pzN1FVRnlVbWhETEVGQmQxSkZMR2RDUVhoU1l5eERRWGRTWkN4WFFVRlhMRU5CUVVNN1JVRkRWaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5rT3p0QlFURlNSQ3hCUVRSU1JTeG5Ra0UxVW1Nc1EwRTBVbVFzYlVKQlFXMUNMRUZCUVVFc1VVRkJVU3hIUVVGRExHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOeVJDeG5Ra0ZCWjBJc1JVRkJSU3hQUVVGUE8wTkJRekZDT3p0QlFUbFNTQ3hCUVdkVFJTeG5Ra0ZvVTJNc1EwRm5VMlFzVVVGQlVTeERRVUZCTzBWQlEwNHNWMEZCVnl4RlFVRkZMRlZCUVZVN1JVRkRka0lzUjBGQlJ5eEZRVUZGTEhsQ1FVRjVRaXhGUVVGRExIZEZRVUYzUlN4RFFVRkRMR05CUVdNc1JVRkJReXcyUWtGQk5rSXNRMEZCUXl4alFVRmpPMFZCUTI1TExGVkJRVlVzUlVGQlJTeFJRVUZSTzBWQlEzQkNMRmRCUVZjc1JVRkJSU3hIUVVGSE8wVkJRMmhDTEZsQlFWa3NSVUZCUlN4SlFVTm9RanREUVVGRE96dEJRWFJUU0N4QlFYVlRSU3huUWtGMlUyTXNRMEYxVTJRc1VVRkJVU3hEUVVGQk8wVkJRMDRzVDBGQlR5eEZRVUZETEdGQlFXRTdRMEZQZEVJN08wRkJMMU5JTEVGQmVWTkpMR2RDUVhwVFdTeERRWGxUV0N4aFFVRkxMRU5CUVVFN1JVRkRTaXhMUVVGTExFVkJRVVVzVDBGQlR6dERRVWxtT3p0QlFUbFRUQ3hCUVRKVFRTeG5Ra0V6VTFVc1EwRjVVMWdzWVVGQlN5eEJRVVZJTEZsQlFWa3NRMEZCUVR0RlFVTllMR0ZCUVdFc1JVRkJSU3hKUVVGSk8wTkJRM0JDT3p0QlFVMUVMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZ1VkhwRExFRkJhMVJKTEdkQ1FXeFVXU3hEUVd0VVdDeHZRa0ZCVnl4RFFVRkJPMGxCUlZJc1YwRkJWeXhGUVVGRkxFdEJRVXM3U1VGRGJFSXNWMEZCVnl4RlFVRkZMRXRCUVVzN1IwRk5ja0k3T3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUYyVkhwRExFRkJhMVJKTEdkQ1FXeFVXU3hEUVd0VVdDeHZRa0ZCVnl4RFFVRkJPMGxCVFZJc1YwRkJWeXhGUVVGRkxGRkJRVkU3U1VGRGNrSXNWMEZCVnl4RlFVRkZMRkZCUVZFN1IwRkZlRUk3T3p0QlFUTlVUQ3hCUVN0VVNTeG5Ra0V2VkZrc1EwRXJWRmdzYVVKQlFVc3NRMEZCUVR0RlFVTktMRk5CUVZNc1JVRkJSU3hKUVVGSk8wTkJTV2hDT3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZxVlhwRExFRkJLMVJKTEdkQ1FTOVVXU3hEUVN0VVdDeHBRa0ZCU3l4RFFVRkJPMGxCUjBZc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBGRmJFSTdPenRCUVVkRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjJWWHBETEVGQmMxVkpMR2RDUVhSVldTeERRWE5WV0N4M1FrRkJXU3hEUVVGQk8wbEJSVlFzUzBGQlN5eEZRVUZGTEVOQlFVTTdSMEZGV0RzN08wRkJSME1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRkVmVrTXNRVUUwVlVrc1owSkJOVlZaTEVOQk5GVllMSGRDUVVGWkxFTkJRVUU3U1VGRlZDeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVVllJbjA9ICovXG4iXX0= */
