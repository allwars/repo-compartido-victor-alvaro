/**
 * Vodafone Reboot Framework: Version 2.11.4. Generation Date: 2021-06-08T06:02:46.722Z
 */

.vfes-ms-content .ws10-c-card-rate__product-title span {
  font-family: "VodafoneRegular",Helvetica,Arial,sans-serif;
}

.vfes-ms-content .vfms-addons-img {
  padding-bottom: 0 !important;
}

.vfes-ms-content .vfms-badge--container {
  display: flex;
  justify-content: baseline;
  align-items: flex-start;
}

.vfes-ms-content .vfms-badge1 {
  max-width: 7.5rem;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfms-badge2 {
  max-width: 8.125rem;
  margin-bottom: 0.9375rem;
  background-color: #fecb00;
}

.vfes-ms-content .vfms-velocity-selector__container {
  margin-left: 1.875rem;
  margin-top: 0.625rem;
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:first-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .wfms__legal {
  font-size: 0.875rem;
}

.vfes-ms-content .vfms-link {
  color: #000000;
}

.vfes-ms-content .vfms-link:hover {
  color: #E60000;
}

.vfes-ms-content .vf-banner {
  position: relative;
  background-image:  url('../img/banner/bg-banner-mv.jpg?v=642d184d02d4cfa8e37ff2b0f8000295');
  background-size: cover;
  background-repeat: no-repeat;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/bg-banner-desktop.jpg?v=29ac10aa4505c17828e923a427d6c644');
    background-attachment: fixed;
    background-position-y: -9.375rem;
  }
}

.vfes-ms-content .vf-banner__textcontainer {
  padding-top: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 3.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 6.125rem;
    padding-bottom: 6.125rem;
  }
}

.vfes-ms-content .vf-mobile__animation {
  padding: 1.875rem 0;
  position: relative;
}

.vfes-ms-content .vf-mobile__animation--img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.vfes-ms-content .vf-mobile__apps {
  overflow: hidden;
  min-height: 18.125rem;
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
}

.vfes-ms-content .vf-mobile__apps:before {
  content: "";
  position: absolute;
  max-height: 17.5rem;
  top: 1.25rem;
  left: 0;
  right: -100%;
  bottom: 0;
  -webkit-animation: slide 20s linear infinite;
          animation: slide 20s linear infinite;
  background-size: cover;
  background:  url('../img/section-mobile/appilimitada.png?v=db011756693c8a63d82e4ac48b4ef902') 0 100%;
}

@-webkit-keyframes slide {
  100% {
    transform: translateX(-50%);
  }
}

.vfes-ms-content .vf-form {
  margin-top: 0.625rem;
  padding: 0 0 0 0;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

.vfes-ms-content .vf-fiber__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-fiber__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-terminales__container--text {
  font-size: 0.875rem;
}

.vfes-ms-content .vf-terminales__container .ws10-c-button {
  width: 100%;
}

.vfes-ms-content .vf-terminales__container .ws10-text--underline {
  text-decoration: underline;
}

.vfes-ms-content .vf-terminales img {
  max-width: 4.625rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .ws10-c-carousel__arrow.ws10-c-carousel__arrow--right {
    right: 5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .ws10-c-carousel__arrow.ws10-c-carousel__arrow--right {
    right: 7rem;
  }
}

.vfes-ms-content .vf-superWifi__img {
  max-width: 21.875rem;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__title {
  max-width: initial;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__item {
  min-width: 20%;
}

.vfes-ms-content .vf-ticket {
  position: relative;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-ticket {
    position: absolute;
    right: 1rem;
    padding-top: 0.5rem;
  }
}

.vfes-ms-content .vf-ticket__floating {
  position: sticky;
  width: inherit;
  width: 100%;
  max-width: 25rem;
  padding-top: 0;
}

.vfes-ms-content .vf-ticket__opacity0 {
  opacity: 0;
}

.vfes-ms-content .vf-sticky {
  position: fixed;
  z-index: 100;
  bottom: 0;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-sticky {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
