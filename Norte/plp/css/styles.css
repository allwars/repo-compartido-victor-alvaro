/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2021-06-11T08:41:51.391Z
 */

.vfes-ms-content img {
  max-width: 100%;
}

.vfes-ms-content .ws10-c-cards-discovery-standard__image-holder {
  overflow: hidden;
}

.vfes-ms-content .vfms-addons-img {
  padding-bottom: 0 !important;
}

.vfes-ms-content .vfms-badge--container {
  display: flex;
  justify-content: baseline;
  align-items: flex-start;
}

.vfes-ms-content .vfms-badge1 {
  max-width: 7.5rem;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfms-badge2 {
  max-width: 8.125rem;
  margin-bottom: 0.9375rem;
  background-color: #fecb00;
}

.vfes-ms-content .vfms-badge3 {
  background-color: #A8B400;
}

.vfes-ms-content .vf-table__container {
  position: relative;
  overflow-x: auto;
  border: 0.0625rem solid #ccc;
  border-radius: 0.375rem;
  background-color: #f4f4f4;
  color: #222222;
  text-align: center;
  font-size: 0.875rem;
  z-index: 0;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__container {
    overflow: initial;
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__datalist {
  width: 100%;
}

.vfes-ms-content .vf-table__th {
  background-color: #f4f4f4;
  box-shadow: inset 0 -0.0625rem 0.0625rem #ccc;
  padding: 0.5rem 1rem;
  position: relative;
}

.vfes-ms-content .vf-table__th:first-child {
  border-top-left-radius: 0.375rem;
}

.vfes-ms-content .vf-table__th:last-child {
  border-top-right-radius: 0.375rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__th {
    padding: 1.5rem;
    position: sticky;
    top: 4.375rem;
    z-index: 1;
  }
}

.vfes-ms-content .vf-table__th:not(:last-child):after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td {
  padding: 0.3125rem;
  position: relative;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td {
    padding: 1.25rem 0.625rem;
  }
}

.vfes-ms-content .vf-table__td:not(:last-child):after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td--subheader {
  background-color: #fff;
  padding: 0.3125rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td--subheader {
    padding: 0.625rem;
  }
}

.vfes-ms-content .vf-table__title {
  font-size: 0.875rem;
  white-space: nowrap;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__title--big {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--big {
    font-size: 2.5rem;
  }
}

.vfes-ms-content .vf-table__title--small {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--small {
    font-size: 1.75rem;
  }
}

.vfes-ms-content .vf-table__icon {
  vertical-align: middle;
  /*  &::before{
         content:'';
         font-size: 20px;
     } */
}

.vfes-ms-content .vf-table__icon--tick::before {
  display: block;
  content: url("data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='24' height='18' viewBox='0 0 24 18'> <g fill='none' fill-rule='evenodd'> <path stroke='%23090' stroke-linecap='round' stroke-linejoin='round' d='M21.5 5.375L8.432 18.442 2.625 12.635'/> </g> </svg> ");
}

.vfes-ms-content .vf-table__icon--fault::before {
  content: url("data:image/svg+xml; utf8, <svg width='24' height='18' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <path d='M11.2928932,12 L5.64644661,6.35355339 C5.45118446,6.15829124 5.45118446,5.84170876 5.64644661,5.64644661 C5.84170876,5.45118446 6.15829124,5.45118446 6.35355339,5.64644661 L12,11.2928932 L17.6464466,5.64644661 C17.8417088,5.45118446 18.1582912,5.45118446 18.3535534,5.64644661 C18.5488155,5.84170876 18.5488155,6.15829124 18.3535534,6.35355339 L12.7071068,12 L18.3535534,17.6464466 C18.5488155,17.8417088 18.5488155,18.1582912 18.3535534,18.3535534 C18.1582912,18.5488155 17.8417088,18.5488155 17.6464466,18.3535534 L12,12.7071068 L6.35355339,18.3535534 C6.15829124,18.5488155 5.84170876,18.5488155 5.64644661,18.3535534 C5.45118446,18.1582912 5.45118446,17.8417088 5.64644661,17.6464466 L11.2928932,12 Z' fill='%23E60000'></path> </g> </svg>");
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:first-child a:before {
  border-width: 0.0625rem;
  border-right: 0.0625rem solid #333;
  border-top: 0.0625rem solid #333;
  display: block;
  width: 0.75rem;
  height: 0.75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: 0.0625rem;
    border-right: 0.0625rem solid #333;
    border-top: 0.0625rem solid #333;
    display: block;
    width: 0.75rem;
    height: 0.75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .vfms-video-container {
  height: auto;
  max-height: 21.875rem;
  display: block;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-video-container {
    display: none;
  }
}

.vfes-ms-content .vfms-content {
  width: 100%;
  display: flex;
}

.vfes-ms-content .vfms-container {
  position: absolute;
  z-index: 5;
  width: 100%;
  top: 6.25rem;
  left: 0;
  padding-left: 2.5rem;
  right: 0;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-container {
    position: relative;
    padding: 0.625rem 0.625rem;
    top: 0;
    left: 0;
    right: 0;
    padding-left: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-title-banner {
    font-size: 3.5rem;
  }
}

.vfes-ms-content .vf-banner {
  background-color: #F4F4F4;
  background-size: cover;
  position: relative;
}

.vfes-ms-content .vf-banner__container {
  position: relative;
}

.vfes-ms-content .vfms-banner-container {
  background-color: #f4f4f4;
  background: url("https://www.vodafone.es/c/statics/imagen/bg-banner.jpg") no-repeat center;
  background-size: cover;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 29.375rem;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-container {
    height: 29.375rem;
  }
}

.vfes-ms-content .vfms-banner-title {
  width: 50%;
  position: relative;
  /*&__bolo{
      width:100px;
      height:auto;
      position: absolute;
      right: 0;
      display: none;
      @media screen and (min-width:768px) {
        display: block;
      }
    }*/
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-title {
    width: 100%;
  }
}

.vfes-ms-content .vfms__banner-mobile {
  display: none;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms__banner-mobile {
    display: block;
    text-align: center;
    margin: 0 auto;
    overflow: hidden;
  }
}

.vfes-ms-content .vfms-animation {
  width: 50%;
  position: relative;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-animation {
    display: none;
  }
}

.vfes-ms-content .vfms-animation--element {
  position: absolute;
  overflow: hidden;
}

.vfes-ms-content .vfms-animation--1 {
  z-index: 2;
  -webkit-animation: float 6s ease-in-out infinite;
          animation: float 6s ease-in-out infinite;
  right: 1.875rem;
  bottom: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--1 {
    margin-top: 0;
    right: -5rem;
  }
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vfms-animation--1 img {
    width: 8.75rem;
  }
}

.vfes-ms-content .vfms-animation--2 {
  z-index: 2;
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 45%;
  top: 0;
  margin-top: 3.75rem;
}

.vfes-ms-content .vfms-animation--3 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4s ease-in-out infinite;
          animation: float 4s ease-in-out infinite;
  right: 30%;
  top: -10%;
  margin-top: 1.875rem;
}

.vfes-ms-content .vfms-animation--4 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 78%;
  top: 0;
  margin-top: 6.25rem;
}

.vfes-ms-content .vfms-animation--5 {
  z-index: 2;
  width: 6.25rem;
  height: auto;
  right: 100%;
  top: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--5 {
    right: 99%;
  }
}

.vfes-ms-content .vfms-animation--6 {
  z-index: 2;
  width: 11.875rem;
  height: auto;
  right: 69%;
  top: -1.875rem;
  transform: scale(0.8, 0.8);
}

@media screen and (max-width: 64.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    right: 85%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    top: 0;
    right: 70%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 img {
    width: 6.25rem;
  }
}

@-webkit-keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

@keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

.vfes-ms-content .vfms-video {
  width: 100%;
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .vf-bold {
  font-family: "Vodafone";
  src: local("Vodafone Rg Bold"), url("https://www.vodafone.es/c/statics/fonts/vodafonergbd-webfont.woff") format("woff"), url(fonts/vodafone-bold.woff) format("woff");
  font-style: "normal";
  font-weight: 700;
  font-display: swap;
}

.vfes-ms-content .vf-form {
  padding: 0.625rem 0 0 1.5rem;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: start;
    align-items: start;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: flex-end;
    align-items: flex-end;
  }
}

.vfes-ms-content .vf-rates .vf-button--mobile {
  min-width: 7.5rem;
}

.vfes-ms-content .vf-banner50__img {
  max-width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__img {
    max-width: 100%;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container1 {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container2 {
    order: 1;
  }
}

.vfes-ms-content .vf-flex--container {
  display: flex;
}

.vfes-ms-content .vf-flex--item:nth-of-type(1) {
  order: 2;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-flex--item:nth-of-type(1) {
    order: 1;
  }
}

.vfes-ms-content .vf-flex--item:nth-of-type(2) {
  order: 1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-flex--item:nth-of-type(2) {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-card--offer {
    padding-left: 2rem;
  }
}

.vfes-ms-content .vf-rate--fibra {
  display: block;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-rate--fibra {
    display: flex;
    align-items: center;
  }
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-height-mobile {
    height: 20rem;
  }
}

.vfes-ms-content .vfms-flow-flex {
  flex-flow: row;
  flex-wrap: wrap;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vfms-flow-flex {
    flex-flow: row-reverse;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
