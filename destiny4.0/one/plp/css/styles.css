/**
 * Vodafone Reboot Framework: Version 2.15.0. Generation Date: 2021-06-24T14:01:43.799Z
 */

.vfes-ms-content img {
  max-width: 100%;
}

.vfes-ms-content .ws10-c-cards-discovery-standard__image-holder {
  overflow: hidden;
  display: flex;
}

.vfes-ms-content .vfms-addons-img {
  padding-bottom: 0 !important;
}

.vfes-ms-content .vfms-badge--container {
  display: flex;
  justify-content: baseline;
  align-items: flex-start;
}

.vfes-ms-content .vfms-badge1 {
  max-width: 7.5rem;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfms-badge2 {
  max-width: 8.125rem;
  margin-bottom: 0.9375rem;
  background-color: #fecb00;
}

.vfes-ms-content .vf-table__container {
  position: relative;
  overflow-x: auto;
  border: 0.0625rem solid #ccc;
  border-radius: 0.375rem;
  background-color: #f4f4f4;
  color: #222222;
  text-align: center;
  font-size: 0.875rem;
  z-index: 0;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__container {
    overflow: initial;
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__datalist {
  width: 100%;
}

.vfes-ms-content .vf-table__th {
  background-color: #f4f4f4;
  box-shadow: inset 0 -0.0625rem 0.0625rem #ccc;
  padding: 0.5rem 1rem;
  position: relative;
}

.vfes-ms-content .vf-table__th:first-child {
  border-top-left-radius: 0.375rem;
}

.vfes-ms-content .vf-table__th:last-child {
  border-top-right-radius: 0.375rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__th {
    padding: 1.5rem;
    position: sticky;
    top: 4.375rem;
    z-index: 1;
  }
}

.vfes-ms-content .vf-table__th:not(:last-child):after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td {
  padding: 0.3125rem;
  position: relative;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td {
    padding: 1.25rem 0.625rem;
  }
}

.vfes-ms-content .vf-table__td:not(:last-child):after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td--subheader {
  background-color: #fff;
  padding: 0.3125rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td--subheader {
    padding: 0.625rem;
  }
}

.vfes-ms-content .vf-table__title {
  font-size: 0.875rem;
  white-space: nowrap;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__title--big {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--big {
    font-size: 2.5rem;
  }
}

.vfes-ms-content .vf-table__title--small {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--small {
    font-size: 1.75rem;
  }
}

.vfes-ms-content .vf-table__icon {
  vertical-align: middle;
  /*  &::before{
         content:'';
         font-size: 20px;
     } */
}

.vfes-ms-content .vf-table__icon--tick::before {
  display: block;
  content: url("data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='24' height='18' viewBox='0 0 24 18'> <g fill='none' fill-rule='evenodd'> <path stroke='%23090' stroke-linecap='round' stroke-linejoin='round' d='M21.5 5.375L8.432 18.442 2.625 12.635'/> </g> </svg> ");
}

.vfes-ms-content .vf-table__icon--fault::before {
  content: url("data:image/svg+xml; utf8, <svg width='24' height='18' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <path d='M11.2928932,12 L5.64644661,6.35355339 C5.45118446,6.15829124 5.45118446,5.84170876 5.64644661,5.64644661 C5.84170876,5.45118446 6.15829124,5.45118446 6.35355339,5.64644661 L12,11.2928932 L17.6464466,5.64644661 C17.8417088,5.45118446 18.1582912,5.45118446 18.3535534,5.64644661 C18.5488155,5.84170876 18.5488155,6.15829124 18.3535534,6.35355339 L12.7071068,12 L18.3535534,17.6464466 C18.5488155,17.8417088 18.5488155,18.1582912 18.3535534,18.3535534 C18.1582912,18.5488155 17.8417088,18.5488155 17.6464466,18.3535534 L12,12.7071068 L6.35355339,18.3535534 C6.15829124,18.5488155 5.84170876,18.5488155 5.64644661,18.3535534 C5.45118446,18.1582912 5.45118446,17.8417088 5.64644661,17.6464466 L11.2928932,12 Z' fill='%23E60000'></path> </g> </svg>");
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:first-child a:before {
  border-width: 0.0625rem;
  border-right: 0.0625rem solid #333;
  border-top: 0.0625rem solid #333;
  display: block;
  width: 0.75rem;
  height: 0.75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: 0.0625rem;
    border-right: 0.0625rem solid #333;
    border-top: 0.0625rem solid #333;
    display: block;
    width: 0.75rem;
    height: 0.75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .vfms-video-container {
  height: auto;
  max-height: 21.875rem;
  display: block;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-video-container {
    display: none;
  }
}

.vfes-ms-content .vfms-content {
  width: 100%;
  display: flex;
}

.vfes-ms-content .vfms-container {
  position: absolute;
  z-index: 5;
  width: 100%;
  top: 6.25rem;
  left: 0;
  padding-left: 2.5rem;
  right: 0;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-container {
    position: relative;
    padding: 0.625rem 0.625rem;
    top: 0;
    left: 0;
    right: 0;
    padding-left: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-title-banner {
    font-size: 3.5rem;
  }
}

.vfes-ms-content .vf-banner {
  background-color: #F4F4F4;
  background-size: cover;
  position: relative;
}

.vfes-ms-content .vf-banner__container {
  position: relative;
}

.vfes-ms-content .vfms-banner-container {
  background-color: #f4f4f4;
  background: url("https://www.vodafone.es/c/statics/imagen/bg-banner.jpg") no-repeat center;
  background-size: cover;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 29.375rem;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-container {
    height: 29.375rem;
  }
}

.vfes-ms-content .vfms-banner-title {
  width: 50%;
  position: relative;
  /*&__bolo{
      width:100px;
      height:auto;
      position: absolute;
      right: 0;
      display: none;
      @media screen and (min-width:768px) {
        display: block;
      }
    }*/
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-title {
    width: 100%;
  }
}

.vfes-ms-content .vfms__banner-mobile {
  display: none;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms__banner-mobile {
    display: block;
    text-align: center;
    margin: 0 auto;
    overflow: hidden;
  }
}

.vfes-ms-content .vfms-animation {
  width: 50%;
  position: relative;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-animation {
    display: none;
  }
}

.vfes-ms-content .vfms-animation--element {
  position: absolute;
  overflow: hidden;
}

.vfes-ms-content .vfms-animation--1 {
  z-index: 2;
  -webkit-animation: float 6s ease-in-out infinite;
          animation: float 6s ease-in-out infinite;
  right: 1.875rem;
  bottom: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--1 {
    margin-top: 0;
    right: -5rem;
  }
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vfms-animation--1 img {
    width: 8.75rem;
  }
}

.vfes-ms-content .vfms-animation--2 {
  z-index: 2;
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 45%;
  top: 0;
  margin-top: 3.75rem;
}

.vfes-ms-content .vfms-animation--3 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4s ease-in-out infinite;
          animation: float 4s ease-in-out infinite;
  right: 30%;
  top: -10%;
  margin-top: 1.875rem;
}

.vfes-ms-content .vfms-animation--4 {
  z-index: 2;
  transform: translatey(0rem);
  -webkit-animation: float 4.5s ease-in-out infinite;
          animation: float 4.5s ease-in-out infinite;
  right: 78%;
  top: 0;
  margin-top: 6.25rem;
}

.vfes-ms-content .vfms-animation--5 {
  z-index: 2;
  width: 6.25rem;
  height: auto;
  right: 100%;
  top: 0;
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--5 {
    right: 99%;
  }
}

.vfes-ms-content .vfms-animation--6 {
  z-index: 2;
  width: 11.875rem;
  height: auto;
  right: 69%;
  top: -1.875rem;
  transform: scale(0.8, 0.8);
}

@media screen and (max-width: 64.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    right: 85%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 {
    top: 0;
    right: 70%;
  }
}

@media screen and (max-width: 48.0625rem) {
  .vfes-ms-content .vfms-animation--6 img {
    width: 6.25rem;
  }
}

@-webkit-keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

@keyframes float {
  0% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
  50% {
    filter: drop-shadow(-0.9375rem 4.6875rem 0.9375rem rgba(151, 145, 145, 0.2));
    transform: translatey(-1.25rem);
  }
  100% {
    filter: drop-shadow(0.3125rem 3.125rem 0.3125rem rgba(151, 145, 145, 0.6));
    transform: translatey(0rem);
  }
}

.vfes-ms-content .vfms-video {
  width: 100%;
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .vf-bold {
  font-family: "Vodafone";
  src: local("Vodafone Rg Bold"), url("https://www.vodafone.es/c/statics/fonts/vodafonergbd-webfont.woff") format("woff"), url(fonts/vodafone-bold.woff) format("woff");
  font-style: "normal";
  font-weight: 700;
  font-display: swap;
}

.vfes-ms-content .vf-form {
  padding: 0.625rem 0 0 1.5rem;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: start;
    align-items: start;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-rates__container {
    align-items: flex-end;
    align-items: flex-end;
  }
}

.vfes-ms-content .vf-rates .vf-button--mobile {
  min-width: 7.5rem;
}

.vfes-ms-content .vf-banner50__img {
  max-width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__img {
    max-width: 100%;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container1 {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner50__container2 {
    order: 1;
  }
}

.vfes-ms-content .vf-flex--container {
  display: flex;
}

.vfes-ms-content .vf-flex--item:nth-of-type(1) {
  order: 2;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-flex--item:nth-of-type(1) {
    order: 1;
  }
}

.vfes-ms-content .vf-flex--item:nth-of-type(2) {
  order: 1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-flex--item:nth-of-type(2) {
    order: 2;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-card--offer {
    padding-left: 2rem;
  }
}

.vfes-ms-content .vf-rate--fibra {
  display: block;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-rate--fibra {
    display: flex;
    align-items: center;
  }
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-height-mobile {
    height: 20rem;
  }
}

.vfes-ms-content .vfms-flow-flex {
  flex-flow: row;
  flex-wrap: wrap;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vfms-flow-flex {
    flex-flow: row-reverse;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taWNyby5zY3NzIiwic3R5bGVzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUVJLGVBQWU7QUNMbkI7O0FER0E7RUFLSSxnQkFBZ0I7RUFDaEIsYUFBYTtBQ0pqQjs7QURGQTtFQVNJLDRCQUE0QjtBQ0hoQzs7QUROQTtFQVlJLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsdUJBQXVCO0FDRjNCOztBRFpBO0VBa0JJLGlCQUFnQjtFQUNoQix3QkFBbUI7QUNGdkI7O0FEakJBO0VBdUJJLG1CQUFnQjtFQUNoQix3QkFBbUI7RUFDbkIseUJBQXlCO0FDRjdCOztBRHZCQTtFQStCTSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLDRCQUFzQjtFQUN0Qix1QkFwQ2E7RUFxQ2IseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQWU7RUFDZixVQUFVO0FDSmhCOztBRE1NO0VBekNOO0lBMENRLGlCQUFpQjtJQUNqQixrQkFBZTtFQ0ZyQjtBQUNGOztBRDFDQTtFQStDTSxXQUFXO0FDRGpCOztBRDlDQTtFQXFETSx5QkFBeUI7RUFDekIsNkNBQWlDO0VBQ2pDLG9CQUFpQjtFQUNqQixrQkFBa0I7QUNIeEI7O0FEckRBO0VBMkRRLGdDQUEyQjtBQ0ZuQzs7QUR6REE7RUE4RFEsaUNBQTRCO0FDRHBDOztBRElNO0VBakVOO0lBa0VRLGVBQWE7SUFDYixnQkFBZ0I7SUFDaEIsYUFBUztJQUNULFVBQVU7RUNBaEI7QUFDRjs7QUR0RUE7RUF3RVEsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVM7RUFDVCxnQkFBVTtFQUNWLHNCQUFzQjtBQ0U5Qjs7QURoRkE7RUFtRk0sa0JBQVk7RUFDWixrQkFBa0I7QUNDeEI7O0FEQU07RUFyRk47SUFzRlEseUJBQWtCO0VDSXhCO0FBQ0Y7O0FEM0ZBO0VBMEZRLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsZ0JBQVU7RUFDVixzQkFBc0I7QUNLOUI7O0FEckdBO0VBb0dRLHNCQUFzQjtFQUN0QixrQkFBWTtBQ0twQjs7QURKUTtFQXRHUjtJQXVHVSxpQkFBYTtFQ1FyQjtBQUNGOztBRGhIQTtFQTZHTSxtQkFBZTtFQUNmLG1CQUFtQjtBQ096Qjs7QUROTTtFQS9HTjtJQWdIUSxrQkFBZTtFQ1VyQjtBQUNGOztBRDNIQTtFQW1IUSxlQUFlO0FDWXZCOztBRFhRO0VBcEhSO0lBcUhVLGlCQUFlO0VDZXZCO0FBQ0Y7O0FEcklBO0VBeUhRLGVBQWU7QUNnQnZCOztBRGZRO0VBMUhSO0lBMkhVLGtCQUFlO0VDbUJ2QjtBQUNGOztBRC9JQTtFQWlJTSxzQkFBc0I7RUFDdEI7OztRQ29CRTtBQUNSOztBRHZKQTtFQXlJVSxjQUFjO0VBQ2QsK1JBQStSO0FDa0J6Uzs7QUQ1SkE7RUFnSlUseStCQUF5K0I7QUNnQm4vQjs7QURoS0E7RUF5Sk0sZ0JBQWdCO0FDV3RCOztBRHBLQTtFQTRKUSxhQUFhO0FDWXJCOztBRFhRO0VBN0pSO0lBOEpVLGNBQWM7RUNldEI7QUFDRjs7QUQ5S0E7RUFxS1ksdUJBQXVCO0VBQ3ZCLGtDQUFrQztFQUNsQyxnQ0FBZ0M7RUFDaEMsY0FBYztFQUNkLGNBQWM7RUFDZCxlQUFlO0VBQ2YsMEJBQTBCO0VBQzFCLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIsd0JBQXdCO0VBQ3hCLGtCQUFrQjtBQ2E5Qjs7QURYWTtFQWpMWjtJQWtMYyxhQUFhO0VDZXpCO0FBQ0Y7O0FEbE1BO0VBMExNLGFBQWE7RUFDYixtQkFBbUI7QUNZekI7O0FEWE07RUE1TE47SUE4TFUsdUJBQXVCO0lBQ3ZCLGtDQUFrQztJQUNsQyxnQ0FBZ0M7SUFDaEMsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysd0JBQXdCO0lBQ3hCLFdBQVc7SUFDWCxxQkFBcUI7SUFDckIsd0JBQXdCO0lBQ3hCLGtCQUFrQjtFQ2MxQjtBQUNGOztBRHZOQTtFQThNSSxZQUFZO0VBQ1oscUJBQWlCO0VBQ2pCLGNBQWM7QUNhbEI7O0FEWEk7RUFsTko7SUFtTk0sYUFBYTtFQ2VqQjtBQUNGOztBRG5PQTtFQXVOSSxXQUFXO0VBQ1gsYUFBYTtBQ2dCakI7O0FEeE9BO0VBMk5JLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVU7RUFDVixPQUFPO0VBQ1Asb0JBQWtCO0VBQ2xCLFFBQVE7QUNpQlo7O0FEaEJJO0VBbE9KO0lBbU9NLGtCQUFrQjtJQUNsQiwwQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87SUFDUCxRQUFRO0lBQ1IsZUFBZTtFQ29CbkI7QUFDRjs7QURqQkk7RUE1T0o7SUE2T00saUJBQWU7RUNxQm5CO0FBQ0Y7O0FEblFBO0VBaVBJLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsa0JBQWtCO0FDc0J0Qjs7QUR6UUE7RUFzUE0sa0JBQWtCO0FDdUJ4Qjs7QUQ3UUE7RUEwUEkseUJBQXlCO0VBQ3pCLDBGQUNrQjtFQUNsQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsaUJBQWE7QUNzQmpCOztBRHBCSTtFQW5RSjtJQW9RTSxpQkFBYTtFQ3dCakI7QUFDRjs7QUQ3UkE7RUF3UUksVUFBVTtFQUNWLGtCQUFrQjtFQUtsQjs7Ozs7Ozs7O01DNkJFO0FBQ047O0FEbENJO0VBMVFKO0lBMlFNLFdBQVc7RUNzQ2Y7QUFDRjs7QURsVEE7RUEwUkksYUFBYTtBQzRCakI7O0FEMUJJO0VBNVJKO0lBNlJNLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGdCQUFnQjtFQzhCcEI7QUFDRjs7QUQvVEE7RUFxU0ksVUFBVTtFQUNWLGtCQUFrQjtBQzhCdEI7O0FENUJJO0VBeFNKO0lBeVNNLGFBQWE7RUNnQ2pCO0FBQ0Y7O0FEMVVBO0VBNFNNLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUNrQ3RCOztBRC9VQTtFQWdUTSxVQUFVO0VBQ1YsZ0RBQXdDO1VBQXhDLHdDQUF3QztFQUN4QyxlQUFXO0VBQ1gsU0FBUztBQ21DZjs7QURsQ007RUFwVE47SUFxVFEsYUFBYTtJQUNiLFlBQVk7RUNzQ2xCO0FBQ0Y7O0FEcENRO0VBelRSO0lBMFRVLGNBQVk7RUN3Q3BCO0FBQ0Y7O0FEbldBO0VBK1RNLFVBQVU7RUFDVixrREFBMEM7VUFBMUMsMENBQTBDO0VBQzFDLFVBQVU7RUFDVixNQUFNO0VBQ04sbUJBQWdCO0FDd0N0Qjs7QUQzV0E7RUFzVU0sVUFBVTtFQUNWLDJCQUEwQjtFQUMxQixnREFBd0M7VUFBeEMsd0NBQXdDO0VBQ3hDLFVBQVU7RUFDVixTQUFTO0VBQ1Qsb0JBQWdCO0FDeUN0Qjs7QURwWEE7RUE4VU0sVUFBVTtFQUNWLDJCQUEwQjtFQUMxQixrREFBMEM7VUFBMUMsMENBQTBDO0VBQzFDLFVBQVU7RUFDVixNQUFNO0VBQ04sbUJBQWlCO0FDMEN2Qjs7QUQ3WEE7RUFzVk0sVUFBVTtFQUdWLGNBQVk7RUFDWixZQUFZO0VBQ1osV0FBVztFQUNYLE1BQU07QUN5Q1o7O0FEdkNNO0VBOVZOO0lBK1ZRLFVBQVU7RUMyQ2hCO0FBQ0Y7O0FEM1lBO0VBbVdNLFVBQVU7RUFHVixnQkFBWTtFQUNaLFlBQVk7RUFDWixVQUFVO0VBQ1YsY0FBVTtFQUVWLDBCQUEwQjtBQ3lDaEM7O0FEeENNO0VBNVdOO0lBNldRLFVBQVU7RUM0Q2hCO0FBQ0Y7O0FEMUNNO0VBaFhOO0lBaVhRLE1BQU07SUFDTixVQUFVO0VDOENoQjtBQUNGOztBRDNDUTtFQXRYUjtJQXVYVSxjQUFZO0VDK0NwQjtBQUNGOztBRDFDRTtFQUNFO0lBRUUsMEVBQTBEO0lBQzFELDJCQUEwQjtFQzZDOUI7RUQzQ0U7SUFFRSw0RUFBNkQ7SUFDN0QsK0JBQTRCO0VDNkNoQztFRDNDRTtJQUVFLDBFQUEwRDtJQUMxRCwyQkFBMEI7RUM2QzlCO0FBQ0Y7O0FENURFO0VBQ0U7SUFFRSwwRUFBMEQ7SUFDMUQsMkJBQTBCO0VDNkM5QjtFRDNDRTtJQUVFLDRFQUE2RDtJQUM3RCwrQkFBNEI7RUM2Q2hDO0VEM0NFO0lBRUUsMEVBQTBEO0lBQzFELDJCQUEwQjtFQzZDOUI7QUFDRjs7QUR6YkE7RUErWUksV0FBVztBQzhDZjs7QUQ3YkE7RUFtWkkseUJBQXlCO0FDOEM3Qjs7QURqY0E7RUF1WkksdUJBQXVCO0VBQ3ZCLHFLQUc4QztFQUM5QyxvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQzJDdEI7O0FEemNBO0VBaWFJLDRCQUFzQjtBQzRDMUI7O0FEN2NBO0VBbWFNLGNBQWM7QUM4Q3BCOztBRGpkQTtFQXFhUSxzQkFBbUI7QUNnRDNCOztBRHpDTTtFQTVhTjtJQTZhUSxrQkFBa0I7SUFDbEIsa0JBQWtCO0VDNkN4QjtBQUNGOztBRDVDTTtFQWhiTjtJQWliUSxxQkFBcUI7SUFDckIscUJBQXFCO0VDZ0QzQjtBQUNGOztBRG5lQTtFQXViUSxpQkFBZ0I7QUNnRHhCOztBRHZlQTtFQThiTSxlQUFlO0FDNkNyQjs7QUQ1Q007RUEvYk47SUFnY1EsZUFBZTtFQ2dEckI7QUFDRjs7QUQ1Q007RUFyY047SUFzY1EsUUFBUTtFQ2dEZDtBQUNGOztBRDVDTTtFQTNjTjtJQTRjUSxRQUFRO0VDZ0RkO0FBQ0Y7O0FEN2ZBO0VBa2RNLGFBQWE7QUMrQ25COztBRGpnQkE7RUFzZEksUUFBUTtBQytDWjs7QUQ5Q0k7RUF2ZEo7SUF3ZE0sUUFBUTtFQ2tEWjtBQUNGOztBRDNnQkE7RUE0ZEksUUFBUTtBQ21EWjs7QURsREk7RUE3ZEo7SUE4ZE0sUUFBUTtFQ3NEWjtBQUNGOztBRGxETTtFQW5lTjtJQW9lUSxrQkFBa0I7RUNzRHhCO0FBQ0Y7O0FEM2hCQTtFQTBlTSxjQUFjO0FDcURwQjs7QURwRE07RUEzZU47SUE0ZVEsYUFBYTtJQUNiLG1CQUFtQjtFQ3dEekI7QUFDRjs7QURwREk7RUFsZko7SUFtZk0sYUFBYTtFQ3dEakI7QUFDRjs7QUQ1aUJBO0VBdWZJLGNBQWM7RUFDZCxlQUFlO0FDeURuQjs7QUR4REk7RUF6Zko7SUEwZk0sc0JBQXNCO0VDNEQxQjtBQUNGOztBQUVBLGlpN0JBQWlpN0I7QUFDamk3QixraTdCQUFraTdCIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDU1MgZGVsIG1pY3Jvc2l0ZVxuXG4kZGVza3RvcDogMTAyNHB4O1xuJGJvcmRlci1yYWRpdXM6IDZweDtcblxuLnZmZXMtbXMtY29udGVudCB7XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC53czEwLWMtY2FyZHMtZGlzY292ZXJ5LXN0YW5kYXJkX19pbWFnZS1ob2xkZXIge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuICAudmZtcy1hZGRvbnMtaW1nIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG4gIC52Zm1zLWJhZGdlLS1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBiYXNlbGluZTtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgfVxuXG4gIC52Zm1zLWJhZGdlMSB7XG4gICAgbWF4LXdpZHRoOiAxMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICB9XG5cbiAgLnZmbXMtYmFkZ2UyIHtcbiAgICBtYXgtd2lkdGg6IDEzMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlY2IwMDtcbiAgfVxuXG4gIC8vIFRhYmxlXG4gIC52Zi10YWJsZSB7XG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICAgICAgY29sb3I6ICMyMjIyMjI7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICB6LWluZGV4OiAwO1xuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGVza3RvcCkge1xuICAgICAgICBvdmVyZmxvdzogaW5pdGlhbDtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgfVxuICAgIH1cbiAgICAmX19kYXRhbGlzdCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIC8vbWFyZ2luOiAwO1xuICAgICAgLy9ib3JkZXI6bm9uZTtcbiAgICB9XG5cbiAgICAmX190aCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMXB4IDFweCAjY2NjO1xuICAgICAgcGFkZGluZzogOHB4IDE2cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA2cHg7XG4gICAgICB9XG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4O1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGVza3RvcCkge1xuICAgICAgICBwYWRkaW5nOiAyNHB4O1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDcwcHg7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICB9XG4gICAgICAmOm5vdCg6bGFzdC1jaGlsZCk6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgd2lkdGg6IDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190ZCB7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGVza3RvcCkge1xuICAgICAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gICAgICB9XG5cbiAgICAgICY6bm90KDpsYXN0LWNoaWxkKTphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xuICAgICAgfVxuXG4gICAgICAmLS1zdWJoZWFkZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGVza3RvcCkge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICB9XG4gICAgICAmLS1iaWcge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XG4gICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAmLS1zbWFsbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcbiAgICAgICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAvKiAgJjo6YmVmb3Jle1xuICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgfSAqL1xuXG4gICAgICAmLS10aWNrIHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBjb250ZW50OiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7IHV0ZjgsIDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMTgnIHZpZXdCb3g9JzAgMCAyNCAxOCc+IDxnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+IDxwYXRoIHN0cm9rZT0nJTIzMDkwJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIGQ9J00yMS41IDUuMzc1TDguNDMyIDE4LjQ0MiAyLjYyNSAxMi42MzUnLz4gPC9nPiA8L3N2Zz4gXCIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLWZhdWx0IHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7IHV0ZjgsIDxzdmcgd2lkdGg9JzI0JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMjQgMTgnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+IDxnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPiA8cGF0aCBkPSdNMTEuMjkyODkzMiwxMiBMNS42NDY0NDY2MSw2LjM1MzU1MzM5IEM1LjQ1MTE4NDQ2LDYuMTU4MjkxMjQgNS40NTExODQ0Niw1Ljg0MTcwODc2IDUuNjQ2NDQ2NjEsNS42NDY0NDY2MSBDNS44NDE3MDg3Niw1LjQ1MTE4NDQ2IDYuMTU4MjkxMjQsNS40NTExODQ0NiA2LjM1MzU1MzM5LDUuNjQ2NDQ2NjEgTDEyLDExLjI5Mjg5MzIgTDE3LjY0NjQ0NjYsNS42NDY0NDY2MSBDMTcuODQxNzA4OCw1LjQ1MTE4NDQ2IDE4LjE1ODI5MTIsNS40NTExODQ0NiAxOC4zNTM1NTM0LDUuNjQ2NDQ2NjEgQzE4LjU0ODgxNTUsNS44NDE3MDg3NiAxOC41NDg4MTU1LDYuMTU4MjkxMjQgMTguMzUzNTUzNCw2LjM1MzU1MzM5IEwxMi43MDcxMDY4LDEyIEwxOC4zNTM1NTM0LDE3LjY0NjQ0NjYgQzE4LjU0ODgxNTUsMTcuODQxNzA4OCAxOC41NDg4MTU1LDE4LjE1ODI5MTIgMTguMzUzNTUzNCwxOC4zNTM1NTM0IEMxOC4xNTgyOTEyLDE4LjU0ODgxNTUgMTcuODQxNzA4OCwxOC41NDg4MTU1IDE3LjY0NjQ0NjYsMTguMzUzNTUzNCBMMTIsMTIuNzA3MTA2OCBMNi4zNTM1NTMzOSwxOC4zNTM1NTM0IEM2LjE1ODI5MTI0LDE4LjU0ODgxNTUgNS44NDE3MDg3NiwxOC41NDg4MTU1IDUuNjQ2NDQ2NjEsMTguMzUzNTUzNCBDNS40NTExODQ0NiwxOC4xNTgyOTEyIDUuNDUxMTg0NDYsMTcuODQxNzA4OCA1LjY0NjQ0NjYxLDE3LjY0NjQ0NjYgTDExLjI5Mjg5MzIsMTIgWicgZmlsbD0nJTIzRTYwMDAwJz48L3BhdGg+IDwvZz4gPC9zdmc+XCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQnJlYWRjcnVtYnNcbiAgLnZmLWJyZWFkY3J1bWJzIHtcbiAgICAmIGxpIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICYgYSB7XG4gICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwLjA2MjVyZW07XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAwLjc1cmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAwLjc1cmVtO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTEzNWRlZyk7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX2xpbmsge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICBib3JkZXItd2lkdGg6IDAuMDYyNXJlbTtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgIGJvcmRlci10b3A6IDAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAwLjc1cmVtO1xuICAgICAgICAgIGhlaWdodDogMC43NXJlbTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmZtcy12aWRlby1jb250YWluZXIge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuICAudmZtcy1jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIC52Zm1zLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAxMDBweDtcbiAgICBsZWZ0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogNDBweDtcbiAgICByaWdodDogMDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZzogMTBweCAxMHB4O1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIH1cbiAgfVxuICAudmZtcy10aXRsZS1iYW5uZXIge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICBmb250LXNpemU6IDU2cHg7XG4gICAgfVxuICB9XG4gIC52Zi1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNEY0RjQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmX19jb250YWluZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgfVxuICAudmZtcy1iYW5uZXItY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmctYmFubmVyLmpwZ1wiKVxuICAgICAgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQ3MHB4O1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGhlaWdodDogNDcwcHg7XG4gICAgfVxuICB9XG4gIC52Zm1zLWJhbm5lci10aXRsZSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC8qJl9fYm9sb3tcbiAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjc2OHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH0qL1xuICB9XG4gIC52Zm1zX19iYW5uZXItbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgfVxuICAvL2FuaW1hdGlvblxuICAudmZtcy1hbmltYXRpb24ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICYtLWVsZW1lbnQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgJi0tMSB7XG4gICAgICB6LWluZGV4OiAyO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA2cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMHB4O1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgcmlnaHQ6IC04MHB4O1xuICAgICAgfVxuICAgICAgaW1nIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICB3aWR0aDogMTQwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgJi0tMiB7XG4gICAgICB6LWluZGV4OiAyO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgcmlnaHQ6IDQ1JTtcbiAgICAgIHRvcDogMDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgfVxuICAgICYtLTMge1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgICAgYW5pbWF0aW9uOiBmbG9hdCA0cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiAzMCU7XG4gICAgICB0b3A6IC0xMCU7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIH1cbiAgICAmLS00IHtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIGFuaW1hdGlvbjogZmxvYXQgNC41cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHJpZ2h0OiA3OCU7XG4gICAgICB0b3A6IDA7XG4gICAgICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgICB9XG4gICAgJi0tNSB7XG4gICAgICB6LWluZGV4OiAyO1xuICAgICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgICAgIC8vYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgcmlnaHQ6IDEwMCU7XG4gICAgICB0b3A6IDA7XG5cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gICAgICAgIHJpZ2h0OiA5OSU7XG4gICAgICB9XG4gICAgfVxuICAgICYtLTYge1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gICAgICAvL2FuaW1hdGlvbjogZmxvYXQgNC41cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgICAgIHdpZHRoOiAxOTBweDtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHJpZ2h0OiA2OSU7XG4gICAgICB0b3A6IC0zMHB4O1xuXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCwgMC44KTtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjVweCkge1xuICAgICAgICByaWdodDogODUlO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiA3MCU7XG4gICAgICB9XG5cbiAgICAgIGltZyB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gICAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGtleWZyYW1lcyBmbG9hdCB7XG4gICAgMCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuNikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjYpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgIH1cbiAgICA1MCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCA1NXB4IC0xNXB4IDBweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuMikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygtMTVweCA3NXB4IDE1cHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjIpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgtMjBweCk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAyNXB4IDE1IDBweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuNikpO1xuICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjYpKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICAgIH1cbiAgfVxuICAudmZtcy12aWRlbyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAud3MxMC1jLWZvcm1fX3JhZGlvOmNoZWNrZWQgKyAud3MxMC1jLWZvcm1fX2xhYmVsOjphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2M5MjtcbiAgfVxuXG4gIC52Zi1ib2xkIHtcbiAgICBmb250LWZhbWlseTogXCJWb2RhZm9uZVwiO1xuICAgIHNyYzogbG9jYWwoXCJWb2RhZm9uZSBSZyBCb2xkXCIpLFxuICAgICAgdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ZvbnRzL3ZvZGFmb25lcmdiZC13ZWJmb250LndvZmZcIilcbiAgICAgICAgZm9ybWF0KFwid29mZlwiKSxcbiAgICAgIHVybChmb250cy92b2RhZm9uZS1ib2xkLndvZmYpIGZvcm1hdChcIndvZmZcIik7XG4gICAgZm9udC1zdHlsZTogXCJub3JtYWxcIjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgfVxuICAudmYtZm9ybSB7XG4gICAgcGFkZGluZzogMTBweCAwIDAgMjRweDtcbiAgICAmX19ib3gge1xuICAgICAgd2lkdGg6IGluaXRpYWw7XG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudmYtcmF0ZXMge1xuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICAgIH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgfVxuICAgIH1cbiAgICAudmYtYnV0dG9uIHtcbiAgICAgICYtLW1vYmlsZSB7XG4gICAgICAgIG1pbi13aWR0aDogMTIwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnZmLWJhbm5lcjUwIHtcbiAgICAmX19pbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnRhaW5lcjEge1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgb3JkZXI6IDI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGFpbmVyMiB7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBvcmRlcjogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnZmLWZsZXgge1xuICAgICYtLWNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cbiAgfVxuICAudmYtZmxleC0taXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gICAgb3JkZXI6IDI7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuICAudmYtZmxleC0taXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgb3JkZXI6IDE7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cbiAgfVxuICAudmYtY2FyZCB7XG4gICAgJi0tb2ZmZXIge1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmYtcmF0ZSB7XG4gICAgJi0tZmlicmEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmZtcy1oZWlnaHQtbW9iaWxlIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgaGVpZ2h0OiAyMHJlbTtcbiAgICB9XG4gIH1cbiAgLnZmbXMtZmxvdy1mbGV4e1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZTtcbiAgICB9XG4gIH1cbn1cbiIsIi52ZmVzLW1zLWNvbnRlbnQgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC53czEwLWMtY2FyZHMtZGlzY292ZXJ5LXN0YW5kYXJkX19pbWFnZS1ob2xkZXIge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFkZG9ucy1pbWcge1xuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWJhZGdlLS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGJhc2VsaW5lO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1iYWRnZTEge1xuICBtYXgtd2lkdGg6IDEyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWJhZGdlMiB7XG4gIG1heC13aWR0aDogMTMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWNiMDA7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbiAgY29sb3I6ICMyMjIyMjI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB6LWluZGV4OiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX2NvbnRhaW5lciB7XG4gICAgb3ZlcmZsb3c6IGluaXRpYWw7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX19kYXRhbGlzdCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9fdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICBib3gtc2hhZG93OiBpbnNldCAwIC0xcHggMXB4ICNjY2M7XG4gIHBhZGRpbmc6IDhweCAxNnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX190aDpmaXJzdC1jaGlsZCB7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDZweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RoOmxhc3QtY2hpbGQge1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RoIHtcbiAgICBwYWRkaW5nOiAyNHB4O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA3MHB4O1xuICAgIHotaW5kZXg6IDE7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RoOm5vdCg6bGFzdC1jaGlsZCk6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RkIHtcbiAgcGFkZGluZzogNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9fdGQge1xuICAgIHBhZGRpbmc6IDIwcHggMTBweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9fdGQ6bm90KDpsYXN0LWNoaWxkKTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9fdGQtLXN1YmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDVweDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX190ZC0tc3ViaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX190aXRsZS0tYmlnIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RpdGxlLS1iaWcge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9fdGl0bGUtLXNtYWxsIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX3RpdGxlLS1zbWFsbCB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRhYmxlX19pY29uIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgLyogICY6OmJlZm9yZXtcbiAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgIH0gKi9cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGFibGVfX2ljb24tLXRpY2s6OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7IHV0ZjgsIDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMTgnIHZpZXdCb3g9JzAgMCAyNCAxOCc+IDxnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+IDxwYXRoIHN0cm9rZT0nJTIzMDkwJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIGQ9J00yMS41IDUuMzc1TDguNDMyIDE4LjQ0MiAyLjYyNSAxMi42MzUnLz4gPC9nPiA8L3N2Zz4gXCIpO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10YWJsZV9faWNvbi0tZmF1bHQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDsgdXRmOCwgPHN2ZyB3aWR0aD0nMjQnIGhlaWdodD0nMTgnIHZpZXdCb3g9JzAgMCAyNCAxOCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz4gPGcgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+IDxwYXRoIGQ9J00xMS4yOTI4OTMyLDEyIEw1LjY0NjQ0NjYxLDYuMzUzNTUzMzkgQzUuNDUxMTg0NDYsNi4xNTgyOTEyNCA1LjQ1MTE4NDQ2LDUuODQxNzA4NzYgNS42NDY0NDY2MSw1LjY0NjQ0NjYxIEM1Ljg0MTcwODc2LDUuNDUxMTg0NDYgNi4xNTgyOTEyNCw1LjQ1MTE4NDQ2IDYuMzUzNTUzMzksNS42NDY0NDY2MSBMMTIsMTEuMjkyODkzMiBMMTcuNjQ2NDQ2Niw1LjY0NjQ0NjYxIEMxNy44NDE3MDg4LDUuNDUxMTg0NDYgMTguMTU4MjkxMiw1LjQ1MTE4NDQ2IDE4LjM1MzU1MzQsNS42NDY0NDY2MSBDMTguNTQ4ODE1NSw1Ljg0MTcwODc2IDE4LjU0ODgxNTUsNi4xNTgyOTEyNCAxOC4zNTM1NTM0LDYuMzUzNTUzMzkgTDEyLjcwNzEwNjgsMTIgTDE4LjM1MzU1MzQsMTcuNjQ2NDQ2NiBDMTguNTQ4ODE1NSwxNy44NDE3MDg4IDE4LjU0ODgxNTUsMTguMTU4MjkxMiAxOC4zNTM1NTM0LDE4LjM1MzU1MzQgQzE4LjE1ODI5MTIsMTguNTQ4ODE1NSAxNy44NDE3MDg4LDE4LjU0ODgxNTUgMTcuNjQ2NDQ2NiwxOC4zNTM1NTM0IEwxMiwxMi43MDcxMDY4IEw2LjM1MzU1MzM5LDE4LjM1MzU1MzQgQzYuMTU4MjkxMjQsMTguNTQ4ODE1NSA1Ljg0MTcwODc2LDE4LjU0ODgxNTUgNS42NDY0NDY2MSwxOC4zNTM1NTM0IEM1LjQ1MTE4NDQ2LDE4LjE1ODI5MTIgNS40NTExODQ0NiwxNy44NDE3MDg4IDUuNjQ2NDQ2NjEsMTcuNjQ2NDQ2NiBMMTEuMjkyODkzMiwxMiBaJyBmaWxsPSclMjNFNjAwMDAnPjwvcGF0aD4gPC9nPiA8L3N2Zz5cIik7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnMgbGk6bGFzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmZpcnN0LWNoaWxkIGE6YmVmb3JlIHtcbiAgYm9yZGVyLXdpZHRoOiAwLjA2MjVyZW07XG4gIGJvcmRlci1yaWdodDogMC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gIGJvcmRlci10b3A6IDAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDAuNzVyZW07XG4gIGhlaWdodDogMC43NXJlbTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEzNWRlZyk7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmZpcnN0LWNoaWxkIGE6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzX19saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnNfX2xpbms6YWZ0ZXIge1xuICAgIGJvcmRlci13aWR0aDogMC4wNjI1cmVtO1xuICAgIGJvcmRlci1yaWdodDogMC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgYm9yZGVyLXRvcDogMC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDAuNzVyZW07XG4gICAgaGVpZ2h0OiAwLjc1cmVtO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtdmlkZW8tY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtdmlkZW8tY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogNTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMTAwcHg7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmctbGVmdDogNDBweDtcbiAgcmlnaHQ6IDA7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLXRpdGxlLWJhbm5lciB7XG4gICAgZm9udC1zaXplOiA1NnB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGNEY0RjQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyX19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFubmVyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmctYmFubmVyLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0NzBweDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1iYW5uZXItY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDQ3MHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFubmVyLXRpdGxlIHtcbiAgd2lkdGg6IDUwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAvKiZfX2JvbG97XG4gICAgICB3aWR0aDoxMDBweDtcbiAgICAgIGhlaWdodDphdXRvO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo3NjhweCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9Ki9cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1iYW5uZXItdGl0bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXNfX2Jhbm5lci1tb2JpbGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zX19iYW5uZXItbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbiB7XG4gIHdpZHRoOiA1MCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLWVsZW1lbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS0xIHtcbiAgei1pbmRleDogMjtcbiAgYW5pbWF0aW9uOiBmbG9hdCA2cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbiAgcmlnaHQ6IDMwcHg7XG4gIGJvdHRvbTogMDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTEge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgcmlnaHQ6IC04MHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS0xIGltZyB7XG4gICAgd2lkdGg6IDE0MHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS0yIHtcbiAgei1pbmRleDogMjtcbiAgYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICByaWdodDogNDUlO1xuICB0b3A6IDA7XG4gIG1hcmdpbi10b3A6IDYwcHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS0zIHtcbiAgei1pbmRleDogMjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KDBweCk7XG4gIGFuaW1hdGlvbjogZmxvYXQgNHMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG4gIHJpZ2h0OiAzMCU7XG4gIHRvcDogLTEwJTtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1hbmltYXRpb24tLTQge1xuICB6LWluZGV4OiAyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgYW5pbWF0aW9uOiBmbG9hdCA0LjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICByaWdodDogNzglO1xuICB0b3A6IDA7XG4gIG1hcmdpbi10b3A6IDEwMHB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tNSB7XG4gIHotaW5kZXg6IDI7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICByaWdodDogMTAwJTtcbiAgdG9wOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tNSB7XG4gICAgcmlnaHQ6IDk5JTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tNiB7XG4gIHotaW5kZXg6IDI7XG4gIHdpZHRoOiAxOTBweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICByaWdodDogNjklO1xuICB0b3A6IC0zMHB4O1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuOCwgMC44KTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNXB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS02IHtcbiAgICByaWdodDogODUlO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OXB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYW5pbWF0aW9uLS02IHtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDcwJTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjlweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWFuaW1hdGlvbi0tNiBpbWcge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZsb2F0IHtcbiAgMCUge1xuICAgIC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMjVweCAxNSAwcHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjYpKTtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1MHB4IDVweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuNikpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRleSgwcHgpO1xuICB9XG4gIDUwJSB7XG4gICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCA1NXB4IC0xNXB4IDBweCByZ2JhKDE1MSwgMTQ1LCAxNDUsIDAuMikpO1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coLTE1cHggNzVweCAxNXB4IHJnYmEoMTUxLCAxNDUsIDE0NSwgMC4yKSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV5KC0yMHB4KTtcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDI1cHggMTUgMHB4IHJnYmEoMTUxLCAxNDUsIDE0NSwgMC42KSk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNTBweCA1cHggcmdiYSgxNTEsIDE0NSwgMTQ1LCAwLjYpKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZXkoMHB4KTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLXZpZGVvIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLndzMTAtYy1mb3JtX19yYWRpbzpjaGVja2VkICsgLndzMTAtYy1mb3JtX19sYWJlbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YzkyO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1ib2xkIHtcbiAgZm9udC1mYW1pbHk6IFwiVm9kYWZvbmVcIjtcbiAgc3JjOiBsb2NhbChcIlZvZGFmb25lIFJnIEJvbGRcIiksIHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9mb250cy92b2RhZm9uZXJnYmQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChmb250cy92b2RhZm9uZS1ib2xkLndvZmYpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtc3R5bGU6IFwibm9ybWFsXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZm9ybSB7XG4gIHBhZGRpbmc6IDEwcHggMCAwIDI0cHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWZvcm1fX2JveCB7XG4gIHdpZHRoOiBpbml0aWFsO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1mb3JtX19ib3g6Zmlyc3QtY2hpbGQge1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1yYXRlc19fY29udGFpbmVyIHtcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXJhdGVzX19jb250YWluZXIge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtcmF0ZXMgLnZmLWJ1dHRvbi0tbW9iaWxlIHtcbiAgbWluLXdpZHRoOiAxMjBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyNTBfX2ltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyNTBfX2ltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lcjUwX19jb250YWluZXIxIHtcbiAgICBvcmRlcjogMjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXI1MF9fY29udGFpbmVyMiB7XG4gICAgb3JkZXI6IDE7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZmxleC0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZmxleC0taXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gIG9yZGVyOiAyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1mbGV4LS1pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgICBvcmRlcjogMTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1mbGV4LS1pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgb3JkZXI6IDE7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWZsZXgtLWl0ZW06bnRoLW9mLXR5cGUoMikge1xuICAgIG9yZGVyOiAyO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWNhcmQtLW9mZmVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtcmF0ZS0tZmlicmEge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtcmF0ZS0tZmlicmEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWhlaWdodC1tb2JpbGUge1xuICAgIGhlaWdodDogMjByZW07XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1mbG93LWZsZXgge1xuICBmbGV4LWZsb3c6IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zm1zLWZsb3ctZmxleCB7XG4gICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZTtcbiAgfVxufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzNSNWJHVnpMbU56Y3lJc0luTnZkWEpqWlhNaU9sc2ljM1I1YkdWekxuTmpjM01pTENKZmJXbGpjbTh1YzJOemN5SmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCQmNYVnBJSE5sSUhCMVpXUmxiaUJwYlhCdmNuUmhjaUJzYVdKeVpYTERyV0Z6SUdWNGRHVnlibUZ6WEc0dkx5Qmxham9nUUdsdGNHOXlkQ0FuTDNSdmIyeHpMMloxYm1OMGFXOXVjeWM3WEc1Y2JrQnBiWEJ2Y25RZ1hDSnRhV055YjF3aU95SXNJaTh2SUVOVFV5QmtaV3dnYldsamNtOXphWFJsWEc1Y2JpUmtaWE5yZEc5d09pQXhNREkwY0hnN1hHNGtZbTl5WkdWeUxYSmhaR2wxY3pvZ05uQjRPMXh1WEc0dWRtWmxjeTF0Y3kxamIyNTBaVzUwSUh0Y2JpQWdhVzFuSUh0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUgxY2JpQWdMbmR6TVRBdFl5MWpZWEprY3kxa2FYTmpiM1psY25rdGMzUmhibVJoY21SZlgybHRZV2RsTFdodmJHUmxjaUI3WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCOVhHNGdJQzUyWm0xekxXRmtaRzl1Y3kxcGJXY2dlMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JpQWdMblptYlhNdFltRmtaMlV0TFdOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdKaGMyVnNhVzVsTzF4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCbWJHVjRMWE4wWVhKME8xeHVJQ0I5WEc1Y2JpQWdMblptYlhNdFltRmtaMlV4SUh0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURFeU1IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFMWNIZzdYRzRnSUgxY2JseHVJQ0F1ZG1adGN5MWlZV1JuWlRJZ2UxeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ01UTXdjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01UVndlRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVZqWWpBd08xeHVJQ0I5WEc1Y2JpQWdMeThnVkdGaWJHVmNiaUFnTG5abUxYUmhZbXhsSUh0Y2JpQWdJQ0FtWDE5amIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ2IzWmxjbVpzYjNjdGVEb2dZWFYwYnp0Y2JpQWdJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNOalkyTTdYRzRnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBa1ltOXlaR1Z5TFhKaFpHbDFjenRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTkdZMFpqUTdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0l6SXlNakl5TWp0Y2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UUndlRHRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREE3WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDUmtaWE5yZEc5d0tTQjdYRzRnSUNBZ0lDQWdJRzkyWlhKbWJHOTNPaUJwYm1sMGFXRnNPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJd2NIZzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyUmhkR0ZzYVhOMElIdGNiaUFnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdMeTl0WVhKbmFXNDZJREE3WEc0Z0lDQWdJQ0F2TDJKdmNtUmxjanB1YjI1bE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgzUm9JSHRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTkdZMFpqUTdYRzRnSUNBZ0lDQmliM2d0YzJoaFpHOTNPaUJwYm5ObGRDQXdJQzB4Y0hnZ01YQjRJQ05qWTJNN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBNGNIZ2dNVFp3ZUR0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseHVJQ0FnSUNBZ0pqcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTEwYjNBdGJHVm1kQzF5WVdScGRYTTZJRFp3ZUR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0F0Y21sbmFIUXRjbUZrYVhWek9pQTJjSGc3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDUmtaWE5yZEc5d0tTQjdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREkwY0hnN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnpkR2xqYTNrN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTnpCd2VEdGNiaUFnSUNBZ0lDQWdlaTFwYm1SbGVEb2dNVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJQ1k2Ym05MEtEcHNZWE4wTFdOb2FXeGtLVHBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQnlhV2RvZERvZ01EdGNiaUFnSUNBZ0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNWEI0TzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalkyTmpPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWmZYM1JrSUh0Y2JpQWdJQ0FnSUhCaFpHUnBibWM2SURWd2VEdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJQ1JrWlhOcmRHOXdLU0I3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURJd2NIZ2dNVEJ3ZUR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqcHViM1FvT214aGMzUXRZMmhwYkdRcE9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUF3TzF4dUlDQWdJQ0FnSUNCaWIzUjBiMjA2SURBN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeGNIZzdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05qWTJNN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWXRMWE4xWW1obFlXUmxjaUI3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJRFZ3ZUR0Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dKR1JsYzJ0MGIzQXBJSHRjYmlBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeE1IQjRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKbDlmZEdsMGJHVWdlMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0FnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJQ1JrWlhOcmRHOXdLU0I3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qQndlRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJQ1l0TFdKcFp5QjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnSUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nSkdSbGMydDBiM0FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRFF3Y0hnN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDWXRMWE50WVd4c0lIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUFrWkdWemEzUnZjQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNamh3ZUR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgybGpiMjRnZTF4dUlDQWdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pUdGNiaUFnSUNBZ0lDOHFJQ0FtT2pwaVpXWnZjbVY3WEc0Z0lDQWdJQ0FnSUNCamIyNTBaVzUwT2ljbk8xeHVJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNCOUlDb3ZYRzVjYmlBZ0lDQWdJQ1l0TFhScFkyc2dlMXh1SUNBZ0lDQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklIVnliQ2hjSW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkRzZ2RYUm1PQ3dnUEhOMlp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbklIZHBaSFJvUFNjeU5DY2dhR1ZwWjJoMFBTY3hPQ2NnZG1sbGQwSnZlRDBuTUNBd0lESTBJREU0Sno0Z1BHY2dabWxzYkQwbmJtOXVaU2NnWm1sc2JDMXlkV3hsUFNkbGRtVnViMlJrSno0Z1BIQmhkR2dnYzNSeWIydGxQU2NsTWpNd09UQW5JSE4wY205clpTMXNhVzVsWTJGd1BTZHliM1Z1WkNjZ2MzUnliMnRsTFd4cGJtVnFiMmx1UFNkeWIzVnVaQ2NnWkQwblRUSXhMalVnTlM0ek56Vk1PQzQwTXpJZ01UZ3VORFF5SURJdU5qSTFJREV5TGpZek5TY3ZQaUE4TDJjK0lEd3ZjM1puUGlCY0lpazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmkwdFptRjFiSFFnZTF4dUlDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJSFZ5YkNoY0ltUmhkR0U2YVcxaFoyVXZjM1puSzNodGJEc2dkWFJtT0N3Z1BITjJaeUIzYVdSMGFEMG5NalFuSUdobGFXZG9kRDBuTVRnbklIWnBaWGRDYjNnOUp6QWdNQ0F5TkNBeE9DY2dkbVZ5YzJsdmJqMG5NUzR4SnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuSUhodGJHNXpPbmhzYVc1clBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNoc2FXNXJKejRnUEdjZ2MzUnliMnRsUFNkdWIyNWxKeUJ6ZEhKdmEyVXRkMmxrZEdnOUp6RW5JR1pwYkd3OUoyNXZibVVuSUdacGJHd3RjblZzWlQwblpYWmxibTlrWkNjK0lEeHdZWFJvSUdROUowMHhNUzR5T1RJNE9UTXlMREV5SUV3MUxqWTBOalEwTmpZeExEWXVNelV6TlRVek16a2dRelV1TkRVeE1UZzBORFlzTmk0eE5UZ3lPVEV5TkNBMUxqUTFNVEU0TkRRMkxEVXVPRFF4TnpBNE56WWdOUzQyTkRZME5EWTJNU3cxTGpZME5qUTBOall4SUVNMUxqZzBNVGN3T0RjMkxEVXVORFV4TVRnME5EWWdOaTR4TlRneU9URXlOQ3cxTGpRMU1URTRORFEySURZdU16VXpOVFV6TXprc05TNDJORFkwTkRZMk1TQk1NVElzTVRFdU1qa3lPRGt6TWlCTU1UY3VOalEyTkRRMk5pdzFMalkwTmpRME5qWXhJRU14Tnk0NE5ERTNNRGc0TERVdU5EVXhNVGcwTkRZZ01UZ3VNVFU0TWpreE1pdzFMalExTVRFNE5EUTJJREU0TGpNMU16VTFNelFzTlM0Mk5EWTBORFkyTVNCRE1UZ3VOVFE0T0RFMU5TdzFMamcwTVRjd09EYzJJREU0TGpVME9EZ3hOVFVzTmk0eE5UZ3lPVEV5TkNBeE9DNHpOVE0xTlRNMExEWXVNelV6TlRVek16a2dUREV5TGpjd056RXdOamdzTVRJZ1RERTRMak0xTXpVMU16UXNNVGN1TmpRMk5EUTJOaUJETVRndU5UUTRPREUxTlN3eE55NDROREUzTURnNElERTRMalUwT0RneE5UVXNNVGd1TVRVNE1qa3hNaUF4T0M0ek5UTTFOVE0wTERFNExqTTFNelUxTXpRZ1F6RTRMakUxT0RJNU1USXNNVGd1TlRRNE9ERTFOU0F4Tnk0NE5ERTNNRGc0TERFNExqVTBPRGd4TlRVZ01UY3VOalEyTkRRMk5pd3hPQzR6TlRNMU5UTTBJRXd4TWl3eE1pNDNNRGN4TURZNElFdzJMak0xTXpVMU16TTVMREU0TGpNMU16VTFNelFnUXpZdU1UVTRNamt4TWpRc01UZ3VOVFE0T0RFMU5TQTFMamcwTVRjd09EYzJMREU0TGpVME9EZ3hOVFVnTlM0Mk5EWTBORFkyTVN3eE9DNHpOVE0xTlRNMElFTTFMalExTVRFNE5EUTJMREU0TGpFMU9ESTVNVElnTlM0ME5URXhPRFEwTml3eE55NDROREUzTURnNElEVXVOalEyTkRRMk5qRXNNVGN1TmpRMk5EUTJOaUJNTVRFdU1qa3lPRGt6TWl3eE1pQmFKeUJtYVd4c1BTY2xNak5GTmpBd01EQW5Qand2Y0dGMGFENGdQQzluUGlBOEwzTjJaejVjSWlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXZMeUJDY21WaFpHTnlkVzFpYzF4dUlDQXVkbVl0WW5KbFlXUmpjblZ0WW5NZ2UxeHVJQ0FnSUNZZ2JHa2dlMXh1SUNBZ0lDQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibHh1SUNBZ0lDQWdKanBzWVhOMExXTm9hV3hrSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ09UY3djSGdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQW1PbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdJQ0FnSUNBZ0ppQmhJSHRjYmlBZ0lDQWdJQ0FnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRkMmxrZEdnNklEQXVNRFl5TlhKbGJUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dNQzR3TmpJMWNtVnRJSE52Ykdsa0lDTXpNek03WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPaUF3TGpBMk1qVnlaVzBnYzI5c2FXUWdJek16TXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURBdU56VnlaVzA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RNVE0xWkdWbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ0lDQWdJQ0FnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZmJHbHVheUI3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dNQzR3TmpJMWNtVnRPMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dNQzR3TmpJMWNtVnRJSE52Ykdsa0lDTXpNek03WEc0Z0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNEb2dNQzR3TmpJMWNtVnRJSE52Ykdsa0lDTXpNek03WEc0Z0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURBdU56VnlaVzA3WEc0Z0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBd0xqYzFjbVZ0TzF4dUlDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1R0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQWdJQ0FnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEc0Z0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFhacFpHVnZMV052Ym5SaGFXNWxjaUI3WEc0Z0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQWdJRzFoZUMxb1pXbG5hSFE2SURNMU1IQjRPMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dVhHNGdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFdOdmJuUmxiblFnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJSDFjYmlBZ0xuWm1iWE10WTI5dWRHRnBibVZ5SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdlaTFwYm1SbGVEb2dOVHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQjBiM0E2SURFd01IQjRPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQTBNSEI0TzF4dUlDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXhNSEI0SURFd2NIZzdYRzRnSUNBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnSUNCc1pXWjBPaUF3TzF4dUlDQWdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEQTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFhScGRHeGxMV0poYm01bGNpQjdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dOVFp3ZUR0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnTG5abUxXSmhibTVsY2lCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTBZMFJqUkdORHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmx4dUlDQWdJQ1pmWDJOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlptMXpMV0poYm01bGNpMWpiMjUwWVdsdVpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1OR1kwWmpRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLRndpYUhSMGNITTZMeTkzZDNjdWRtOWtZV1p2Ym1VdVpYTXZZeTl6ZEdGMGFXTnpMMmx0WVdkbGJpOWlaeTFpWVc1dVpYSXVhbkJuWENJcFhHNGdJQ0FnSUNCdWJ5MXlaWEJsWVhRZ1kyVnVkR1Z5TzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSG90YVc1a1pYZzZJQzB4TzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dORGN3Y0hnN1hHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBME56QndlRHRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptYlhNdFltRnVibVZ5TFhScGRHeGxJSHRjYmlBZ0lDQjNhV1IwYURvZ05UQWxPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b21YMTlpYjJ4dmUxeHVJQ0FnSUNBZ2QybGtkR2c2TVRBd2NIZzdYRzRnSUNBZ0lDQm9aV2xuYUhRNllYVjBienRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNk56WTRjSGdwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU292WEc0Z0lIMWNiaUFnTG5abWJYTmZYMkpoYm01bGNpMXRiMkpwYkdVZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDOHZZVzVwYldGMGFXOXVYRzRnSUM1MlptMXpMV0Z1YVcxaGRHbHZiaUI3WEc0Z0lDQWdkMmxrZEdnNklEVXdKVHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTB0Wld4bGJXVnVkQ0I3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lIMWNiaUFnSUNBbUxTMHhJSHRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREk3WEc0Z0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUdac2IyRjBJRFp6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURNd2NIZzdYRzRnSUNBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEzTmpsd2VDa2dlMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQnlhV2RvZERvZ0xUZ3djSGc3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JwYldjZ2UxeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEyTkRCd2VDa2dlMXh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TkRCd2VEdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNBbUxTMHlJSHRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREk3WEc0Z0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUdac2IyRjBJRFF1TlhNZ1pXRnpaUzFwYmkxdmRYUWdhVzVtYVc1cGRHVTdYRzRnSUNBZ0lDQnlhV2RvZERvZ05EVWxPMXh1SUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dOakJ3ZUR0Y2JpQWdJQ0I5WEc0Z0lDQWdKaTB0TXlCN1hHNGdJQ0FnSUNCNkxXbHVaR1Y0T2lBeU8xeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVjVLREJ3ZUNrN1hHNGdJQ0FnSUNCaGJtbHRZWFJwYjI0NklHWnNiMkYwSURSeklHVmhjMlV0YVc0dGIzVjBJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklETXdKVHRjYmlBZ0lDQWdJSFJ2Y0RvZ0xURXdKVHRjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURNd2NIZzdYRzRnSUNBZ2ZWeHVJQ0FnSUNZdExUUWdlMXh1SUNBZ0lDQWdlaTFwYm1SbGVEb2dNanRjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsZVNnd2NIZ3BPMXh1SUNBZ0lDQWdZVzVwYldGMGFXOXVPaUJtYkc5aGRDQTBMalZ6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURjNEpUdGNiaUFnSUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklERXdNSEI0TzF4dUlDQWdJSDFjYmlBZ0lDQW1MUzAxSUh0Y2JpQWdJQ0FnSUhvdGFXNWtaWGc2SURJN1hHNGdJQ0FnSUNBdkwzUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxlU2d3Y0hncE8xeHVJQ0FnSUNBZ0x5OWhibWx0WVhScGIyNDZJR1pzYjJGMElEUXVOWE1nWldGelpTMXBiaTF2ZFhRZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd2NIZzdYRzRnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdJQ0J5YVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0FnSUhSdmNEb2dNRHRjYmx4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ056WTVjSGdwSUh0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURrNUpUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmkwdE5pQjdYRzRnSUNBZ0lDQjZMV2x1WkdWNE9pQXlPMXh1SUNBZ0lDQWdMeTkwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlhrb01IQjRLVHRjYmlBZ0lDQWdJQzh2WVc1cGJXRjBhVzl1T2lCbWJHOWhkQ0EwTGpWeklHVmhjMlV0YVc0dGIzVjBJR2x1Wm1sdWFYUmxPMXh1SUNBZ0lDQWdkMmxrZEdnNklERTVNSEI0TzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUJoZFhSdk8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURZNUpUdGNiaUFnSUNBZ0lIUnZjRG9nTFRNd2NIZzdYRzVjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NQzQ0TENBd0xqZ3BPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRBeU5YQjRLU0I3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUE0TlNVN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT1hCNEtTQjdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklEY3dKVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVcxbklIdGNiaUFnSUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpZNWNIZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd2NIZzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JBYTJWNVpuSmhiV1Z6SUdac2IyRjBJSHRjYmlBZ0lDQXdKU0I3WEc0Z0lDQWdJQ0F0ZDJWaWEybDBMV1pwYkhSbGNqb2daSEp2Y0MxemFHRmtiM2NvTUhCNElESTFjSGdnTVRVZ01IQjRJSEpuWW1Fb01UVXhMQ0F4TkRVc0lERTBOU3dnTUM0MktTazdYRzRnSUNBZ0lDQm1hV3gwWlhJNklHUnliM0F0YzJoaFpHOTNLRFZ3ZUNBMU1IQjRJRFZ3ZUNCeVoySmhLREUxTVN3Z01UUTFMQ0F4TkRVc0lEQXVOaWtwTzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWNUtEQndlQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lEVXdKU0I3WEc0Z0lDQWdJQ0F0ZDJWaWEybDBMV1pwYkhSbGNqb2daSEp2Y0MxemFHRmtiM2NvTUhCNElEVTFjSGdnTFRFMWNIZ2dNSEI0SUhKblltRW9NVFV4TENBeE5EVXNJREUwTlN3Z01DNHlLU2s3WEc0Z0lDQWdJQ0JtYVd4MFpYSTZJR1J5YjNBdGMyaGhaRzkzS0MweE5YQjRJRGMxY0hnZ01UVndlQ0J5WjJKaEtERTFNU3dnTVRRMUxDQXhORFVzSURBdU1pa3BPMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1Y1S0MweU1IQjRLVHRjYmlBZ0lDQjlYRzRnSUNBZ01UQXdKU0I3WEc0Z0lDQWdJQ0F0ZDJWaWEybDBMV1pwYkhSbGNqb2daSEp2Y0MxemFHRmtiM2NvTUhCNElESTFjSGdnTVRVZ01IQjRJSEpuWW1Fb01UVXhMQ0F4TkRVc0lERTBOU3dnTUM0MktTazdYRzRnSUNBZ0lDQm1hV3gwWlhJNklHUnliM0F0YzJoaFpHOTNLRFZ3ZUNBMU1IQjRJRFZ3ZUNCeVoySmhLREUxTVN3Z01UUTFMQ0F4TkRVc0lEQXVOaWtwTzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWNUtEQndlQ2s3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWm0xekxYWnBaR1Z2SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdmVnh1WEc0Z0lDNTNjekV3TFdNdFptOXliVjlmY21Ga2FXODZZMmhsWTJ0bFpDQXJJQzUzY3pFd0xXTXRabTl5YlY5ZmJHRmlaV3c2T21GbWRHVnlJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNREEzWXpreU8xeHVJQ0I5WEc1Y2JpQWdMblptTFdKdmJHUWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxadlpHRm1iMjVsWENJN1hHNGdJQ0FnYzNKak9pQnNiMk5oYkNoY0lsWnZaR0ZtYjI1bElGSm5JRUp2YkdSY0lpa3NYRzRnSUNBZ0lDQjFjbXdvWENKb2RIUndjem92TDNkM2R5NTJiMlJoWm05dVpTNWxjeTlqTDNOMFlYUnBZM012Wm05dWRITXZkbTlrWVdadmJtVnlaMkprTFhkbFltWnZiblF1ZDI5bVpsd2lLVnh1SUNBZ0lDQWdJQ0JtYjNKdFlYUW9YQ0ozYjJabVhDSXBMRnh1SUNBZ0lDQWdkWEpzS0dadmJuUnpMM1p2WkdGbWIyNWxMV0p2YkdRdWQyOW1aaWtnWm05eWJXRjBLRndpZDI5bVpsd2lLVHRjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJjSW01dmNtMWhiRndpTzF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUNBZ1ptOXVkQzFrYVhOd2JHRjVPaUJ6ZDJGd08xeHVJQ0I5WEc0Z0lDNTJaaTFtYjNKdElIdGNiaUFnSUNCd1lXUmthVzVuT2lBeE1IQjRJREFnTUNBeU5IQjRPMXh1SUNBZ0lDWmZYMkp2ZUNCN1hHNGdJQ0FnSUNCM2FXUjBhRG9nYVc1cGRHbGhiRHRjYmlBZ0lDQWdJQ1k2Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBeU1IQjRPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzUyWmkxeVlYUmxjeUI3WEc0Z0lDQWdKbDlmWTI5dWRHRnBibVZ5SUh0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEYzJPSEI0S1NCN1hHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJ6ZEdGeWREdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUhOMFlYSjBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BJSHRjYmlBZ0lDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHWnNaWGd0Wlc1a08xeHVJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWm14bGVDMWxibVE3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lDNTJaaTFpZFhSMGIyNGdlMXh1SUNBZ0lDQWdKaTB0Ylc5aWFXeGxJSHRjYmlBZ0lDQWdJQ0FnYldsdUxYZHBaSFJvT2lBeE1qQndlRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0F1ZG1ZdFltRnVibVZ5TlRBZ2UxeHVJQ0FnSUNaZlgybHRaeUI3WEc0Z0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZZMjl1ZEdGcGJtVnlNU0I3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBNU56QndlQ2tnZTF4dUlDQWdJQ0FnSUNCdmNtUmxjam9nTWp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtWDE5amIyNTBZV2x1WlhJeUlIdGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJRzl5WkdWeU9pQXhPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0Wm14bGVDQjdYRzRnSUNBZ0ppMHRZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMW1iR1Y0TFMxcGRHVnRPbTUwYUMxdlppMTBlWEJsS0RFcElIdGNiaUFnSUNCdmNtUmxjam9nTWp0Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBMk5EQndlQ2tnZTF4dUlDQWdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWJHVjRMUzFwZEdWdE9tNTBhQzF2WmkxMGVYQmxLRElwSUh0Y2JpQWdJQ0J2Y21SbGNqb2dNVHRjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEyTkRCd2VDa2dlMXh1SUNBZ0lDQWdiM0prWlhJNklESTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJaaTFqWVhKa0lIdGNiaUFnSUNBbUxTMXZabVpsY2lCN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURNeWNIZzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJaaTF5WVhSbElIdGNiaUFnSUNBbUxTMW1hV0p5WVNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURZME1IQjRLU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWm0xekxXaGxhV2RvZEMxdGIySnBiR1VnZTF4dUlDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURjMk9IQjRLU0I3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREl3Y21WdE8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBdWRtWnRjeTFtYkc5M0xXWnNaWGg3WEc0Z0lDQWdabXhsZUMxbWJHOTNPaUJ5YjNjN1hHNGdJQ0FnWm14bGVDMTNjbUZ3T2lCM2NtRndPMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQm1iR1Y0TFdac2IzYzZJSEp2ZHkxeVpYWmxjbk5sTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUTB0QkxFRkJRMFVzWjBKQlJHTXNRMEZEWkN4SFFVRkhMRU5CUVVNN1JVRkRSaXhUUVVGVExFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVRklTQ3hCUVVsRkxHZENRVXBqTEVOQlNXUXNPRU5CUVRoRExFTkJRVU03UlVGRE4wTXNVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzVDBGQlR5eEZRVUZGTEVsQlFVazdRMEZEWkRzN1FVRlFTQ3hCUVZGRkxHZENRVkpqTEVOQlVXUXNaMEpCUVdkQ0xFTkJRVU03UlVGRFppeGpRVUZqTEVWQlFVVXNXVUZCV1R0RFFVTTNRanM3UVVGV1NDeEJRVmRGTEdkQ1FWaGpMRU5CVjJRc2MwSkJRWE5DTEVOQlFVTTdSVUZEY2tJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeGxRVUZsTEVWQlFVVXNVVUZCVVR0RlFVTjZRaXhYUVVGWExFVkJRVVVzVlVGQlZUdERRVU40UWpzN1FVRm1TQ3hCUVdsQ1JTeG5Ra0ZxUW1Nc1EwRnBRbVFzV1VGQldTeERRVUZETzBWQlExZ3NVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRkRhRUlzWVVGQllTeEZRVUZGTEVsQlFVazdRMEZEY0VJN08wRkJjRUpJTEVGQmMwSkZMR2RDUVhSQ1l5eERRWE5DWkN4WlFVRlpMRU5CUVVNN1JVRkRXQ3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVU5vUWl4aFFVRmhMRVZCUVVVc1NVRkJTVHRGUVVOdVFpeG5Ra0ZCWjBJc1JVRkJSU3hQUVVGUE8wTkJRekZDT3p0QlFURkNTQ3hCUVRoQ1NTeG5Ra0U1UWxrc1EwRTRRbGdzYjBKQlFWY3NRMEZCUXp0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEZWQlFWVXNSVUZCUlN4SlFVRkpPMFZCUTJoQ0xFMUJRVTBzUlVGQlJTeGpRVUZqTzBWQlEzUkNMR0ZCUVdFc1JVRndRMGdzUjBGQlJ6dEZRWEZEWWl4blFrRkJaMElzUlVGQlJTeFBRVUZQTzBWQlEzcENMRXRCUVVzc1JVRkJSU3hQUVVGUE8wVkJRMlFzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFBRVUZQTEVWQlFVVXNRMEZCUXp0RFFVMVlPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRTFCUVUwN1JVRjZRekZETEVGQk9FSkpMR2RDUVRsQ1dTeERRVGhDV0N4dlFrRkJWeXhEUVVGRE8wbEJXVlFzVVVGQlVTeEZRVUZGTEU5QlFVODdTVUZEYWtJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UjBGRmJFSTdPenRCUVRkRFRDeEJRVGhEU1N4blFrRTVRMWtzUTBFNFExZ3NiVUpCUVZVc1EwRkJRenRGUVVOV0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBOQlIxbzdPMEZCYkVSTUxFRkJiMFJKTEdkQ1FYQkVXU3hEUVc5RVdDeGhRVUZKTEVOQlFVTTdSVUZEU2l4blFrRkJaMElzUlVGQlJTeFBRVUZQTzBWQlEzcENMRlZCUVZVc1JVRkJSU3h4UWtGQmNVSTdSVUZEYWtNc1QwRkJUeXhGUVVGRkxGRkJRVkU3UlVGRGFrSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1EwRjNRbTVDT3p0QlFXaEdUQ3hCUVRCRVRTeG5Ra0V4UkZVc1EwRnZSRmdzWVVGQlNTeEJRVTFHTEZsQlFWa3NRMEZCUXp0RlFVTmFMSE5DUVVGelFpeEZRVUZGTEVkQlFVYzdRMEZETlVJN08wRkJOVVJRTEVGQk5rUk5MR2RDUVRkRVZTeERRVzlFV0N4aFFVRkpMRUZCVTBZc1YwRkJWeXhEUVVGRE8wVkJRMWdzZFVKQlFYVkNMRVZCUVVVc1IwRkJSenREUVVNM1FqczdRVUZGUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQmFrVXhReXhCUVc5RVNTeG5Ra0Z3UkZrc1EwRnZSRmdzWVVGQlNTeERRVUZETzBsQlkwWXNUMEZCVHl4RlFVRkZMRWxCUVVrN1NVRkRZaXhSUVVGUkxFVkJRVVVzVFVGQlRUdEpRVU5vUWl4SFFVRkhMRVZCUVVVc1NVRkJTVHRKUVVOVUxFOUJRVThzUlVGQlJTeERRVUZETzBkQlYySTdPenRCUVdoR1RDeEJRWFZGVFN4blFrRjJSVlVzUTBGdlJGZ3NZVUZCU1N4QlFXMUNSaXhKUVVGTExFTkJRVUVzVjBGQlZ5eERRVUZETEUxQlFVMHNRMEZCUXp0RlFVTjJRaXhQUVVGUExFVkJRVVVzUlVGQlJUdEZRVU5ZTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNTMEZCU3l4RlFVRkZMRU5CUVVNN1JVRkRVaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1owSkJRV2RDTEVWQlFVVXNTVUZCU1R0RFFVTjJRanM3UVVFdlJWQXNRVUZyUmtrc1owSkJiRVpaTEVOQmEwWllMR0ZCUVVrc1EwRkJRenRGUVVOS0xFOUJRVThzUlVGQlJTeEhRVUZITzBWQlExb3NVVUZCVVN4RlFVRkZMRkZCUVZFN1EwRnpRbTVDT3p0QlFYSkNReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCY2tZeFF5eEJRV3RHU1N4blFrRnNSbGtzUTBGclJsZ3NZVUZCU1N4RFFVRkRPMGxCU1VZc1QwRkJUeXhGUVVGRkxGTkJRVk03UjBGdlFuSkNPenM3UVVFeFIwd3NRVUY1Umswc1owSkJla1pWTEVOQmEwWllMR0ZCUVVrc1FVRlBSaXhKUVVGTExFTkJRVUVzVjBGQlZ5eERRVUZETEUxQlFVMHNRMEZCUXp0RlFVTjJRaXhQUVVGUExFVkJRVVVzUlVGQlJUdEZRVU5ZTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNTMEZCU3l4RlFVRkZMRU5CUVVNN1JVRkRVaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1owSkJRV2RDTEVWQlFVVXNTVUZCU1R0RFFVTjJRanM3UVVGcVIxQXNRVUZ0UjAwc1owSkJia2RWTEVOQmJVZFVMSGRDUVVGWExFTkJRVU03UlVGRFdDeG5Ra0ZCWjBJc1JVRkJSU3hKUVVGSk8wVkJRM1JDTEU5QlFVOHNSVUZCUlN4SFFVRkhPME5CU1dJN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVhSSE5VTXNRVUZ0UjAwc1owSkJia2RWTEVOQmJVZFVMSGRDUVVGWExFTkJRVU03U1VGSlZDeFBRVUZQTEVWQlFVVXNTVUZCU1R0SFFVVm9RanM3TzBGQmVrZFFMRUZCTkVkSkxHZENRVFZIV1N4RFFUUkhXQ3huUWtGQlR5eERRVUZETzBWQlExQXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhYUVVGWExFVkJRVVVzVFVGQlRUdERRV2RDY0VJN08wRkJaa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVM5SE1VTXNRVUUwUjBrc1owSkJOVWRaTEVOQk5FZFlMR2RDUVVGUExFTkJRVU03U1VGSlRDeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFXTnNRanM3TzBGQk9VaE1MRUZCYTBoTkxHZENRV3hJVlN4RFFXdElWQ3h4UWtGQlN5eERRVUZETzBWQlEwd3NVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkphRUk3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRWEJJTlVNc1FVRnJTRTBzWjBKQmJFaFZMRU5CYTBoVUxIRkNRVUZMTEVOQlFVTTdTVUZIU0N4VFFVRlRMRVZCUVVVc1NVRkJTVHRIUVVWc1FqczdPMEZCZGtoUUxFRkJkMGhOTEdkQ1FYaElWU3hEUVhkSVZDeDFRa0ZCVHl4RFFVRkRPMFZCUTFBc1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGSmFFSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFURklOVU1zUVVGM1NFMHNaMEpCZUVoVkxFTkJkMGhVTEhWQ1FVRlBMRU5CUVVNN1NVRkhUQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEhRVVZzUWpzN08wRkJOMGhRTEVGQlowbEpMR2RDUVdoSldTeERRV2RKV0N4bFFVRk5MRU5CUVVNN1JVRkRUaXhqUVVGakxFVkJRVVVzVFVGQlRUdEZRVU4wUWpzN08xTkJSMGM3UTBGalNqczdRVUZ1U2t3c1FVRjNTVkVzWjBKQmVFbFJMRU5CZFVsVUxIRkNRVUZOTEVGQlEwb3NVVUZCVVN4RFFVRkRPMFZCUTFJc1QwRkJUeXhGUVVGRkxFdEJRVXM3UlVGRFpDeFBRVUZQTEVWQlFVVXNjMUpCUVhOU08wTkJRMmhUT3p0QlFUTkpWQ3hCUVN0SlVTeG5Ra0V2U1ZFc1EwRTRTVlFzYzBKQlFVOHNRVUZEVEN4UlFVRlJMRU5CUVVNN1JVRkRVaXhQUVVGUExFVkJRVVVzWnl0Q1FVRm5LMEk3UTBGRE1TdENPenRCUVdwS1ZDeEJRWGRLU1N4blFrRjRTbGtzUTBGMVNtUXNaVUZCWlN4RFFVTllMRVZCUVVVc1EwRkJRenRGUVVOSUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQk9FSnFRanM3UVVGMlRFd3NRVUV5U2swc1owSkJNMHBWTEVOQmRVcGtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJSMFFzVjBGQlZ5eERRVUZETzBWQlExZ3NUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkpaRHM3UVVGSVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJOMG96UXl4QlFUSktUU3huUWtFelNsVXNRMEYxU21Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGSFJDeFhRVUZYTEVOQlFVTTdTVUZIVkN4UFFVRlBMRVZCUVVVc1MwRkJTenRIUVVWcVFqczdPMEZCYUV0UUxFRkJiMHRWTEdkQ1FYQkxUU3hEUVhWS1pDeGxRVUZsTEVOQlExZ3NSVUZCUlN4QlFWVkVMRmxCUVZrc1EwRkRWQ3hEUVVGRExFRkJRMEVzVDBGQlR5eERRVUZETzBWQlExQXNXVUZCV1N4RlFVRkZMRk5CUVZNN1JVRkRka0lzV1VGQldTeEZRVUZGTEc5Q1FVRnZRanRGUVVOc1F5eFZRVUZWTEVWQlFVVXNiMEpCUVc5Q08wVkJRMmhETEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1MwRkJTeXhGUVVGRkxFOUJRVTg3UlVGRFpDeE5RVUZOTEVWQlFVVXNUMEZCVHp0RlFVTm1MRk5CUVZNc1JVRkJSU3hsUVVGbE8wVkJRekZDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNZMEZCWXl4RlFVRkZMRkZCUVZFN1JVRkRlRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZMYmtJN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVdwTUwwTXNRVUZ2UzFVc1owSkJjRXROTEVOQmRVcGtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJWVVFzV1VGQldTeERRVU5VTEVOQlFVTXNRVUZEUVN4UFFVRlBMRU5CUVVNN1NVRmpUQ3hQUVVGUExFVkJRVVVzU1VGQlNUdEhRVVZvUWpzN08wRkJjRXhZTEVGQmVVeEpMR2RDUVhwTVdTeERRWGxNV0N4eFFrRkJUU3hEUVVGRE8wVkJRMDRzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4WFFVRlhMRVZCUVVVc1RVRkJUVHREUVdkQ2NFSTdPMEZCWmtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUVk1la01zUVVFMlRGRXNaMEpCTjB4UkxFTkJlVXhZTEhGQ1FVRk5MRUZCU1VZc1RVRkJUU3hEUVVGRE8wbEJRMDRzV1VGQldTeEZRVUZGTEZOQlFWTTdTVUZEZGtJc1dVRkJXU3hGUVVGRkxHOUNRVUZ2UWp0SlFVTnNReXhWUVVGVkxFVkJRVVVzYjBKQlFXOUNPMGxCUTJoRExFOUJRVThzUlVGQlJTeExRVUZMTzBsQlEyUXNTMEZCU3l4RlFVRkZMRTlCUVU4N1NVRkRaQ3hOUVVGTkxFVkJRVVVzVDBGQlR6dEpRVU5tTEZOQlFWTXNSVUZCUlN4aFFVRmhPMGxCUTNoQ0xFOUJRVThzUlVGQlJTeEZRVUZGTzBsQlExZ3NUMEZCVHl4RlFVRkZMRmxCUVZrN1NVRkRja0lzWTBGQll5eEZRVUZGTEZGQlFWRTdTVUZEZUVJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UjBGRGJrSTdPenRCUVhwTlZDeEJRVFpOUlN4blFrRTNUV01zUTBFMlRXUXNjVUpCUVhGQ0xFTkJRVU03UlVGRGNFSXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhWUVVGVkxFVkJRVVVzUzBGQlN6dEZRVU5xUWl4UFFVRlBMRVZCUVVVc1MwRkJTenREUVV0bU96dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGc1RuWkRMRUZCTmsxRkxHZENRVGROWXl4RFFUWk5aQ3h4UWtGQmNVSXNRMEZCUXp0SlFVMXNRaXhQUVVGUExFVkJRVVVzU1VGQlNUdEhRVVZvUWpzN08wRkJjazVJTEVGQmMwNUZMR2RDUVhST1l5eERRWE5PWkN4aFFVRmhMRU5CUVVNN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJlazVJTEVGQk1FNUZMR2RDUVRGT1l5eERRVEJPWkN4bFFVRmxMRU5CUVVNN1JVRkRaQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NSMEZCUnl4RlFVRkZMRXRCUVVzN1JVRkRWaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEZsQlFWa3NSVUZCUlN4SlFVRkpPMFZCUTJ4Q0xFdEJRVXNzUlVGQlJTeERRVUZETzBOQlUxUTdPMEZCVWtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFXeFBka01zUVVFd1RrVXNaMEpCTVU1akxFTkJNRTVrTEdWQlFXVXNRMEZCUXp0SlFWTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wbEJRMnhDTEU5QlFVOHNSVUZCUlN4VFFVRlRPMGxCUTJ4Q0xFZEJRVWNzUlVGQlJTeERRVUZETzBsQlEwNHNTVUZCU1N4RlFVRkZMRU5CUVVNN1NVRkRVQ3hMUVVGTExFVkJRVVVzUTBGQlF6dEpRVU5TTEZsQlFWa3NSVUZCUlN4RFFVRkRPMGRCUld4Q096czdRVUZGUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk5VOTJReXhCUVRKUFJTeG5Ra0V6VDJNc1EwRXlUMlFzYTBKQlFXdENMRU5CUVVNN1NVRkZaaXhUUVVGVExFVkJRVVVzU1VGQlNUdEhRVVZzUWpzN08wRkJMMDlJTEVGQloxQkZMR2RDUVdoUVl5eERRV2RRWkN4VlFVRlZMRU5CUVVNN1JVRkRWQ3huUWtGQlowSXNSVUZCUlN4UFFVRlBPMFZCUTNwQ0xHVkJRV1VzUlVGQlJTeExRVUZMTzBWQlEzUkNMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJTMjVDT3p0QlFYaFFTQ3hCUVhGUVNTeG5Ra0Z5VUZrc1EwRnhVRmdzY1VKQlFWY3NRMEZCUXp0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTkJRMjVDT3p0QlFYWlFUQ3hCUVhsUVJTeG5Ra0Y2VUdNc1EwRjVVR1FzYzBKQlFYTkNMRU5CUVVNN1JVRkRja0lzWjBKQlFXZENMRVZCUVVVc1QwRkJUenRGUVVONlFpeFZRVUZWTEVWQlFVVXNOa1JCUVRaRUxFTkJRM1pGTEZOQlFWTXNRMEZCUXl4TlFVRk5PMFZCUTJ4Q0xHVkJRV1VzUlVGQlJTeExRVUZMTzBWQlEzUkNMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNTMEZCU3p0RFFVdGtPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnVVWFpETEVGQmVWQkZMR2RDUVhwUVl5eERRWGxRWkN4elFrRkJjMElzUTBGQlF6dEpRVmR1UWl4TlFVRk5MRVZCUVVVc1MwRkJTenRIUVVWb1FqczdPMEZCZEZGSUxFRkJkVkZGTEdkQ1FYWlJZeXhEUVhWUlpDeHJRa0ZCYTBJc1EwRkJRenRGUVVOcVFpeExRVUZMTEVWQlFVVXNSMEZCUnp0RlFVTldMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJTMnhDT3pzN096czdPenM3VDBGVFJ6dERRVU5LT3p0QlFXUkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUV4VVhaRExFRkJkVkZGTEdkQ1FYWlJZeXhEUVhWUlpDeHJRa0ZCYTBJc1EwRkJRenRKUVVsbUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBkQllXUTdPenRCUVhoU1NDeEJRWGxTUlN4blFrRjZVbU1zUTBGNVVtUXNiMEpCUVc5Q0xFTkJRVU03UlVGRGJrSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRlJaRHM3UVVGT1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJOVkoyUXl4QlFYbFNSU3huUWtGNlVtTXNRMEY1VW1Rc2IwSkJRVzlDTEVOQlFVTTdTVUZKYWtJc1QwRkJUeXhGUVVGRkxFdEJRVXM3U1VGRFpDeFZRVUZWTEVWQlFVVXNUVUZCVFR0SlFVTnNRaXhOUVVGTkxFVkJRVVVzVFVGQlRUdEpRVU5rTEZGQlFWRXNSVUZCUlN4TlFVRk5PMGRCUlc1Q096czdRVUZzVTBnc1FVRnZVMFVzWjBKQmNGTmpMRU5CYjFOa0xHVkJRV1VzUTBGQlF6dEZRVU5rTEV0QlFVc3NSVUZCUlN4SFFVRkhPMFZCUTFZc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGeFJtNUNPenRCUVc1R1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJlRk4yUXl4QlFXOVRSU3huUWtGd1UyTXNRMEZ2VTJRc1pVRkJaU3hEUVVGRE8wbEJTMW9zVDBGQlR5eEZRVUZGTEVsQlFVazdSMEZyUm1oQ096czdRVUV6V0Vnc1FVRXlVMGtzWjBKQk0xTlpMRU5CTWxOWUxIZENRVUZUTEVOQlFVTTdSVUZEVkN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeFJRVUZSTEVWQlFVVXNUVUZCVFR0RFFVTnFRanM3UVVFNVUwd3NRVUVyVTBrc1owSkJMMU5aTEVOQksxTllMR3RDUVVGSExFTkJRVU03UlVGRFNDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRk5CUVZNc1JVRkJSU3cyUWtGQk5rSTdSVUZEZUVNc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWQlFVVXNRMEZCUXp0RFFWVldPenRCUVZSRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRndWSHBETEVGQksxTkpMR2RDUVM5VFdTeERRU3RUV0N4clFrRkJSeXhEUVVGRE8wbEJUVVFzVlVGQlZTeEZRVUZGTEVOQlFVTTdTVUZEWWl4TFFVRkxMRVZCUVVVc1MwRkJTenRIUVU5bU96czdRVUZLUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmVsUXpReXhCUVhkVVRTeG5Ra0Y0VkZVc1EwRXJVMWdzYTBKQlFVY3NRMEZUUml4SFFVRkhMRU5CUVVNN1NVRkZRU3hMUVVGTExFVkJRVVVzUzBGQlN6dEhRVVZtT3pzN1FVRTFWRkFzUVVFNFZFa3NaMEpCT1ZSWkxFTkJPRlJZTEd0Q1FVRkhMRU5CUVVNN1JVRkRTQ3hQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEZOQlFWTXNSVUZCUlN3clFrRkJLMEk3UlVGRE1VTXNTMEZCU3l4RlFVRkZMRWRCUVVjN1JVRkRWaXhIUVVGSExFVkJRVVVzUTBGQlF6dEZRVU5PTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CUTJwQ096dEJRWEJWVEN4QlFYRlZTU3huUWtGeVZWa3NRMEZ4VlZnc2EwSkJRVWNzUTBGQlF6dEZRVU5JTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUTFZc1UwRkJVeXhGUVVGRkxHVkJRV1U3UlVGRE1VSXNVMEZCVXl4RlFVRkZMRFpDUVVFMlFqdEZRVU40UXl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFZEJRVWNzUlVGQlJTeEpRVUZKTzBWQlExUXNWVUZCVlN4RlFVRkZMRWxCUVVrN1EwRkRha0k3TzBGQk5WVk1MRUZCTmxWSkxHZENRVGRWV1N4RFFUWlZXQ3hyUWtGQlJ5eERRVUZETzBWQlEwZ3NUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhUUVVGVExFVkJRVVVzWlVGQlpUdEZRVU14UWl4VFFVRlRMRVZCUVVVc0swSkJRU3RDTzBWQlF6RkRMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSVUZEVGl4VlFVRlZMRVZCUVVVc1MwRkJTenREUVVOc1FqczdRVUZ3Vmt3c1FVRnhWa2tzWjBKQmNsWlpMRU5CY1ZaWUxHdENRVUZITEVOQlFVTTdSVUZEU0N4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVkV0xFdEJRVXNzUlVGQlJTeExRVUZMTzBWQlExb3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEVkQlFVY3NSVUZCUlN4RFFVRkRPME5CUzFBN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsV2VrTXNRVUZ4Vmtrc1owSkJjbFpaTEVOQmNWWllMR3RDUVVGSExFTkJRVU03U1VGVlJDeExRVUZMTEVWQlFVVXNSMEZCUnp0SFFVVmlPenM3UVVGcVYwd3NRVUZyVjBrc1owSkJiRmRaTEVOQmExZFlMR3RDUVVGSExFTkJRVU03UlVGRFNDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVZFdMRXRCUVVzc1JVRkJSU3hMUVVGTE8wVkJRMW9zVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xFZEJRVWNzUlVGQlJTeExRVUZMTzBWQlJWWXNVMEZCVXl4RlFVRkZMR1ZCUVdVN1EwRmxNMEk3TzBGQlpFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRVFZYTVVNc1FVRnJWMGtzWjBKQmJGZFpMRU5CYTFkWUxHdENRVUZITEVOQlFVTTdTVUZYUkN4TFFVRkxMRVZCUVVVc1IwRkJSenRIUVdGaU96czdRVUZXUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmFGaDZReXhCUVd0WFNTeG5Ra0ZzVjFrc1EwRnJWMWdzYTBKQlFVY3NRMEZCUXp0SlFXVkVMRWRCUVVjc1JVRkJSU3hEUVVGRE8wbEJRMDRzUzBGQlN5eEZRVUZGTEVkQlFVYzdSMEZSWWpzN08wRkJTa2NzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhSWU0wTXNRVUZ4V0Uwc1owSkJjbGhWTEVOQmExZFlMR3RDUVVGSExFTkJiVUpHTEVkQlFVY3NRMEZCUXp0SlFVVkJMRXRCUVVzc1JVRkJSU3hMUVVGTE8wZEJSV1k3T3p0QlFVbE1MRlZCUVZVc1EwRkJWaXhMUVVGVk8wVkJRMUlzUlVGQlJUdEpRVU5CTEdOQlFXTXNSVUZCUlN4eFJFRkJjVVE3U1VGRGNrVXNUVUZCVFN4RlFVRkZMR3RFUVVGclJEdEpRVU14UkN4VFFVRlRMRVZCUVVVc1pVRkJaVHM3UlVGRk5VSXNSMEZCUnp0SlFVTkVMR05CUVdNc1JVRkJSU3gzUkVGQmQwUTdTVUZEZUVVc1RVRkJUU3hGUVVGRkxIRkVRVUZ4UkR0SlFVTTNSQ3hUUVVGVExFVkJRVVVzYVVKQlFXbENPenRGUVVVNVFpeEpRVUZKTzBsQlEwWXNZMEZCWXl4RlFVRkZMSEZFUVVGeFJEdEpRVU55UlN4TlFVRk5MRVZCUVVVc2EwUkJRV3RFTzBsQlF6RkVMRk5CUVZNc1JVRkJSU3hsUVVGbE96czdPMEZCTTFsb1F5eEJRVGhaUlN4blFrRTVXV01zUTBFNFdXUXNWMEZCVnl4RFFVRkRPMFZCUTFZc1MwRkJTeXhGUVVGRkxFbEJRVWs3UTBGRFdqczdRVUZvV2tnc1FVRnJXa1VzWjBKQmJGcGpMRU5CYTFwa0xHMUNRVUZ0UWl4QlFVRkJMRkZCUVZFc1IwRkJSeXh0UWtGQmJVSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRka1FzWjBKQlFXZENMRVZCUVVVc1QwRkJUenREUVVNeFFqczdRVUZ3V2tnc1FVRnpXa1VzWjBKQmRGcGpMRU5CYzFwa0xGRkJRVkVzUTBGQlF6dEZRVU5RTEZkQlFWY3NSVUZCUlN4VlFVRlZPMFZCUTNaQ0xFZEJRVWNzUlVGQlJTeDVRa0ZCZVVJc1JVRkROVUlzZDBWQlFYZEZMRU5CUTNSRkxHTkJRV01zUlVGRGFFSXNOa0pCUVRaQ0xFTkJRVU1zWTBGQll6dEZRVU01UXl4VlFVRlZMRVZCUVVVc1VVRkJVVHRGUVVOd1FpeFhRVUZYTEVWQlFVVXNSMEZCUnp0RlFVTm9RaXhaUVVGWkxFVkJRVVVzU1VGQlNUdERRVU51UWpzN1FVRXZXa2dzUVVGbllVVXNaMEpCYUdGakxFTkJaMkZrTEZGQlFWRXNRMEZCUXp0RlFVTlFMRTlCUVU4c1JVRkJSU3hoUVVGaE8wTkJUM1pDT3p0QlFYaGhTQ3hCUVd0aFNTeG5Ra0ZzWVZrc1EwRnJZVmdzWVVGQlN5eERRVUZETzBWQlEwd3NTMEZCU3l4RlFVRkZMRTlCUVU4N1EwRkpaanM3UVVGMllVd3NRVUZ2WVUwc1owSkJjR0ZWTEVOQmEyRllMR0ZCUVVzc1FVRkZTQ3haUVVGWkxFTkJRVU03UlVGRFdpeGhRVUZoTEVWQlFVVXNTVUZCU1R0RFFVTndRanM3UVVGTlJDeE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJOV0Y2UXl4QlFUSmhTU3huUWtFellWa3NRMEV5WVZnc2IwSkJRVmNzUTBGQlF6dEpRVVZVTEZkQlFWY3NSVUZCUlN4TFFVRkxPMGxCUTJ4Q0xGZEJRVmNzUlVGQlJTeExRVUZMTzBkQlRYSkNPenM3UVVGS1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJhR0o2UXl4QlFUSmhTU3huUWtFellWa3NRMEV5WVZnc2IwSkJRVmNzUTBGQlF6dEpRVTFVTEZkQlFWY3NSVUZCUlN4UlFVRlJPMGxCUTNKQ0xGZEJRVmNzUlVGQlJTeFJRVUZSTzBkQlJYaENPenM3UVVGd1lrd3NRVUZ6WWswc1owSkJkR0pWTEVOQk1HRmtMRk5CUVZNc1EwRlpTaXhyUWtGQlVTeERRVUZETzBWQlExSXNVMEZCVXl4RlFVRkZMRXRCUVVzN1EwRkRha0k3TzBGQmVHSlFMRUZCTm1KSkxHZENRVGRpV1N4RFFUWmlXQ3hwUWtGQlN5eERRVUZETzBWQlEwd3NVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkphRUk3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRUzlpZWtNc1FVRTJZa2tzWjBKQk4ySlpMRU5CTm1KWUxHbENRVUZMTEVOQlFVTTdTVUZIU0N4VFFVRlRMRVZCUVVVc1NVRkJTVHRIUVVWc1FqczdPMEZCUjBNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYSmpla01zUVVGdlkwa3NaMEpCY0dOWkxFTkJiMk5ZTEhkQ1FVRlpMRU5CUVVNN1NVRkZWaXhMUVVGTExFVkJRVVVzUTBGQlF6dEhRVVZZT3pzN1FVRkhReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCTTJONlF5eEJRVEJqU1N4blFrRXhZMWtzUTBFd1kxZ3NkMEpCUVZrc1EwRkJRenRKUVVWV0xFdEJRVXNzUlVGQlJTeERRVUZETzBkQlJWZzdPenRCUVRsalRDeEJRV2xrU1N4blFrRnFaRmtzUTBGcFpGZ3NiVUpCUVZjc1EwRkJRenRGUVVOWUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEyUTdPMEZCYm1STUxFRkJjV1JGTEdkQ1FYSmtZeXhEUVhGa1pDeGpRVUZqTEVGQlFVRXNXVUZCWVN4RFFVRkJMRU5CUVVNc1JVRkJSVHRGUVVNMVFpeExRVUZMTEVWQlFVVXNRMEZCUXp0RFFVbFVPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjJaSFpETEVGQmNXUkZMR2RDUVhKa1l5eERRWEZrWkN4alFVRmpMRUZCUVVFc1dVRkJZU3hEUVVGQkxFTkJRVU1zUlVGQlJUdEpRVWN4UWl4TFFVRkxMRVZCUVVVc1EwRkJRenRIUVVWWU96czdRVUV4WkVnc1FVRXlaRVVzWjBKQk0yUmpMRU5CTW1Sa0xHTkJRV01zUVVGQlFTeFpRVUZoTEVOQlFVRXNRMEZCUXl4RlFVRkZPMFZCUXpWQ0xFdEJRVXNzUlVGQlJTeERRVUZETzBOQlNWUTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUZGtka01zUVVFeVpFVXNaMEpCTTJSakxFTkJNbVJrTEdOQlFXTXNRVUZCUVN4WlFVRmhMRU5CUVVFc1EwRkJReXhGUVVGRk8wbEJSekZDTEV0QlFVc3NSVUZCUlN4RFFVRkRPMGRCUlZnN096dEJRVWRITEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGdVpYcERMRUZCYTJWSkxHZENRV3hsV1N4RFFXdGxXQ3hsUVVGUExFTkJRVU03U1VGRlRDeFpRVUZaTEVWQlFVVXNTVUZCU1R0SFFVVnlRanM3TzBGQmRHVk1MRUZCZVdWSkxHZENRWHBsV1N4RFFYbGxXQ3hsUVVGUExFTkJRVU03UlVGRFVDeFBRVUZQTEVWQlFVVXNTMEZCU3p0RFFVdG1PenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRXpaWHBETEVGQmVXVkpMR2RDUVhwbFdTeERRWGxsV0N4bFFVRlBMRU5CUVVNN1NVRkhUQ3hQUVVGUExFVkJRVVVzU1VGQlNUdEpRVU5pTEZkQlFWY3NSVUZCUlN4TlFVRk5PMGRCUlhSQ096czdRVUZIUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmJHWjJReXhCUVdsbVJTeG5Ra0ZxWm1Nc1EwRnBabVFzYlVKQlFXMUNMRU5CUVVNN1NVRkZhRUlzVFVGQlRTeEZRVUZGTEV0QlFVczdSMEZGYUVJN096dEJRWEptU0N4QlFYTm1SU3huUWtGMFptTXNRMEZ6Wm1Rc1pVRkJaU3hEUVVGQk8wVkJRMklzVTBGQlV5eEZRVUZGTEVkQlFVYzdSVUZEWkN4VFFVRlRMRVZCUVVVc1NVRkJTVHREUVVsb1FqczdRVUZJUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmVtWjJReXhCUVhObVJTeG5Ra0YwWm1Nc1EwRnpabVFzWlVGQlpTeERRVUZCTzBsQlNWZ3NVMEZCVXl4RlFVRkZMRmRCUVZjN1IwRkZla0lpZlE9PSAqL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljM1I1YkdWekxtTnpjeUlzSW5OdmRYSmpaWE1pT2xzaWMzUjViR1Z6TG5OamMzTWlMQ0pmYldsamNtOHVjMk56Y3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJCY1hWcElITmxJSEIxWldSbGJpQnBiWEJ2Y25SaGNpQnNhV0p5WlhMRHJXRnpJR1Y0ZEdWeWJtRnpYRzR2THlCbGFqb2dRR2x0Y0c5eWRDQW5MM1J2YjJ4ekwyWjFibU4wYVc5dWN5YzdYRzVjYmtCcGJYQnZjblFnWENKdGFXTnliMXdpT3lJc0lpOHZJRU5UVXlCa1pXd2diV2xqY205emFYUmxYRzVjYmlSa1pYTnJkRzl3T2lBeE1ESTBjSGc3WEc0a1ltOXlaR1Z5TFhKaFpHbDFjem9nTm5CNE8xeHVYRzR1ZG1abGN5MXRjeTFqYjI1MFpXNTBJSHRjYmlBZ2FXMW5JSHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJSDFjYmlBZ0xuZHpNVEF0WXkxallYSmtjeTFrYVhOamIzWmxjbmt0YzNSaGJtUmhjbVJmWDJsdFlXZGxMV2h2YkdSbGNpQjdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0I5WEc0Z0lDNTJabTF6TFdGa1pHOXVjeTFwYldjZ2UxeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmlBZ0xuWm1iWE10WW1Ga1oyVXRMV052Ym5SaGFXNWxjaUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR0poYzJWc2FXNWxPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJtYkdWNExYTjBZWEowTzF4dUlDQjlYRzVjYmlBZ0xuWm1iWE10WW1Ga1oyVXhJSHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJREV5TUhCNE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREUxY0hnN1hHNGdJSDFjYmx4dUlDQXVkbVp0Y3kxaVlXUm5aVElnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nTVRNd2NIZzdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRWd2VEdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptVmpZakF3TzF4dUlDQjlYRzVjYmlBZ0x5OGdWR0ZpYkdWY2JpQWdMblptTFhSaFlteGxJSHRjYmlBZ0lDQW1YMTlqYjI1MFlXbHVaWElnZTF4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnYjNabGNtWnNiM2N0ZURvZ1lYVjBienRjYmlBZ0lDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05qWTJNN1hHNGdJQ0FnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWW05eVpHVnlMWEpoWkdsMWN6dGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1OR1kwWmpRN1hHNGdJQ0FnSUNCamIyeHZjam9nSXpJeU1qSXlNanRjYmlBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNklEQTdYRzVjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SUNSa1pYTnJkRzl3S1NCN1hHNGdJQ0FnSUNBZ0lHOTJaWEptYkc5M09pQnBibWwwYVdGc08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJQ1pmWDJSaGRHRnNhWE4wSUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0x5OXRZWEpuYVc0NklEQTdYRzRnSUNBZ0lDQXZMMkp2Y21SbGNqcHViMjVsTzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDNSb0lIdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1OR1kwWmpRN1hHNGdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd0lDMHhjSGdnTVhCNElDTmpZMk03WEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUE0Y0hnZ01UWndlRHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmx4dUlDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0F0YkdWbWRDMXlZV1JwZFhNNklEWndlRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxMGIzQXRjbWxuYUhRdGNtRmthWFZ6T2lBMmNIZzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SUNSa1pYTnJkRzl3S1NCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklESTBjSGc3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCemRHbGphM2s3WEc0Z0lDQWdJQ0FnSUhSdmNEb2dOekJ3ZUR0Y2JpQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ01UdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDWTZibTkwS0Rwc1lYTjBMV05vYVd4a0tUcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnSUNCeWFXZG9kRG9nTUR0Y2JpQWdJQ0FnSUNBZ1ltOTBkRzl0T2lBd08xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01YQjRPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWTJOak8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZlgzUmtJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJRFZ3ZUR0Y2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDUmtaWE5yZEc5d0tTQjdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREl3Y0hnZ01UQndlRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwdWIzUW9PbXhoYzNRdFkyaHBiR1FwT21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ0lDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdJQ0JpYjNSMGIyMDZJREE3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4Y0hnN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTmpZMk03WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZdExYTjFZbWhsWVdSbGNpQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEVndlRHRjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ0pHUmxjMnQwYjNBcElIdGNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF4TUhCNE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZkR2wwYkdVZ2UxeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhOSEI0TzF4dUlDQWdJQ0FnZDJocGRHVXRjM0JoWTJVNklHNXZkM0poY0R0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDUmtaWE5yZEc5d0tTQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDWXRMV0pwWnlCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dKR1JsYzJ0MGIzQXBJSHRjYmlBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEUXdjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUNZdExYTnRZV3hzSUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQWdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQWtaR1Z6YTNSdmNDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qaHdlRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDJsamIyNGdlMXh1SUNBZ0lDQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHMXBaR1JzWlR0Y2JpQWdJQ0FnSUM4cUlDQW1PanBpWldadmNtVjdYRzRnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaWNuTzF4dUlDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQWdJQ0I5SUNvdlhHNWNiaUFnSUNBZ0lDWXRMWFJwWTJzZ2UxeHVJQ0FnSUNBZ0lDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiRHNnZFhSbU9Dd2dQSE4yWnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuSUhkcFpIUm9QU2N5TkNjZ2FHVnBaMmgwUFNjeE9DY2dkbWxsZDBKdmVEMG5NQ0F3SURJMElERTRKejRnUEdjZ1ptbHNiRDBuYm05dVpTY2dabWxzYkMxeWRXeGxQU2RsZG1WdWIyUmtKejRnUEhCaGRHZ2djM1J5YjJ0bFBTY2xNak13T1RBbklITjBjbTlyWlMxc2FXNWxZMkZ3UFNkeWIzVnVaQ2NnYzNSeWIydGxMV3hwYm1WcWIybHVQU2R5YjNWdVpDY2daRDBuVFRJeExqVWdOUzR6TnpWTU9DNDBNeklnTVRndU5EUXlJREl1TmpJMUlERXlMall6TlNjdlBpQThMMmMrSUR3dmMzWm5QaUJjSWlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKaTB0Wm1GMWJIUWdlMXh1SUNBZ0lDQWdJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklIVnliQ2hjSW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkRzZ2RYUm1PQ3dnUEhOMlp5QjNhV1IwYUQwbk1qUW5JR2hsYVdkb2REMG5NVGduSUhacFpYZENiM2c5SnpBZ01DQXlOQ0F4T0NjZ2RtVnljMmx2Ymowbk1TNHhKeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSGh0Ykc1ek9uaHNhVzVyUFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMM2hzYVc1ckp6NGdQR2NnYzNSeWIydGxQU2R1YjI1bEp5QnpkSEp2YTJVdGQybGtkR2c5SnpFbklHWnBiR3c5SjI1dmJtVW5JR1pwYkd3dGNuVnNaVDBuWlhabGJtOWtaQ2MrSUR4d1lYUm9JR1E5SjAweE1TNHlPVEk0T1RNeUxERXlJRXcxTGpZME5qUTBOall4TERZdU16VXpOVFV6TXprZ1F6VXVORFV4TVRnME5EWXNOaTR4TlRneU9URXlOQ0ExTGpRMU1URTRORFEyTERVdU9EUXhOekE0TnpZZ05TNDJORFkwTkRZMk1TdzFMalkwTmpRME5qWXhJRU0xTGpnME1UY3dPRGMyTERVdU5EVXhNVGcwTkRZZ05pNHhOVGd5T1RFeU5DdzFMalExTVRFNE5EUTJJRFl1TXpVek5UVXpNemtzTlM0Mk5EWTBORFkyTVNCTU1USXNNVEV1TWpreU9Ea3pNaUJNTVRjdU5qUTJORFEyTml3MUxqWTBOalEwTmpZeElFTXhOeTQ0TkRFM01EZzRMRFV1TkRVeE1UZzBORFlnTVRndU1UVTRNamt4TWl3MUxqUTFNVEU0TkRRMklERTRMak0xTXpVMU16UXNOUzQyTkRZME5EWTJNU0JETVRndU5UUTRPREUxTlN3MUxqZzBNVGN3T0RjMklERTRMalUwT0RneE5UVXNOaTR4TlRneU9URXlOQ0F4T0M0ek5UTTFOVE0wTERZdU16VXpOVFV6TXprZ1RERXlMamN3TnpFd05qZ3NNVElnVERFNExqTTFNelUxTXpRc01UY3VOalEyTkRRMk5pQkRNVGd1TlRRNE9ERTFOU3d4Tnk0NE5ERTNNRGc0SURFNExqVTBPRGd4TlRVc01UZ3VNVFU0TWpreE1pQXhPQzR6TlRNMU5UTTBMREU0TGpNMU16VTFNelFnUXpFNExqRTFPREk1TVRJc01UZ3VOVFE0T0RFMU5TQXhOeTQ0TkRFM01EZzRMREU0TGpVME9EZ3hOVFVnTVRjdU5qUTJORFEyTml3eE9DNHpOVE0xTlRNMElFd3hNaXd4TWk0M01EY3hNRFk0SUV3MkxqTTFNelUxTXpNNUxERTRMak0xTXpVMU16UWdRell1TVRVNE1qa3hNalFzTVRndU5UUTRPREUxTlNBMUxqZzBNVGN3T0RjMkxERTRMalUwT0RneE5UVWdOUzQyTkRZME5EWTJNU3d4T0M0ek5UTTFOVE0wSUVNMUxqUTFNVEU0TkRRMkxERTRMakUxT0RJNU1USWdOUzQwTlRFeE9EUTBOaXd4Tnk0NE5ERTNNRGc0SURVdU5qUTJORFEyTmpFc01UY3VOalEyTkRRMk5pQk1NVEV1TWpreU9Ea3pNaXd4TWlCYUp5Qm1hV3hzUFNjbE1qTkZOakF3TURBblBqd3ZjR0YwYUQ0Z1BDOW5QaUE4TDNOMlp6NWNJaWs3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdkx5QkNjbVZoWkdOeWRXMWljMXh1SUNBdWRtWXRZbkpsWVdSamNuVnRZbk1nZTF4dUlDQWdJQ1lnYkdrZ2UxeHVJQ0FnSUNBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2JseHVJQ0FnSUNBZ0pqcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnSmlCaElIdGNiaUFnSUNBZ0lDQWdJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGQybGtkR2c2SURBdU1EWXlOWEpsYlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01DNHdOakkxY21WdElITnZiR2xrSUNNek16TTdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXdMakEyTWpWeVpXMGdjMjlzYVdRZ0l6TXpNenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEQXVOelZ5WlcwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE1UTTFaR1ZuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKbDlmYkdsdWF5QjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMTNhV1IwYURvZ01DNHdOakkxY21WdE8xeHVJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01DNHdOakkxY21WdElITnZiR2xrSUNNek16TTdYRzRnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ01DNHdOakkxY21WdElITnZiR2xrSUNNek16TTdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF3TGpjMWNtVnRPMXh1SUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVHRjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzRnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlptMXpMWFpwWkdWdkxXTnZiblJoYVc1bGNpQjdYRzRnSUNBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNBZ0lHMWhlQzFvWldsbmFIUTZJRE0xTUhCNE8xeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpZNGNIZ3BJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlptMXpMV052Ym5SbGJuUWdlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lIMWNiaUFnTG5abWJYTXRZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2VpMXBibVJsZURvZ05UdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCMGIzQTZJREV3TUhCNE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBME1IQjRPMXh1SUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklEYzJPSEI0S1NCN1hHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeE1IQjRJREV3Y0hnN1hHNGdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdjbWxuYUhRNklEQTdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURBN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlptMXpMWFJwZEd4bExXSmhibTVsY2lCN1hHNGdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ09UY3djSGdwSUh0Y2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ05UWndlRHRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptTFdKaGJtNWxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMFkwUmpSR05EdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmRtVnlPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHh1SUNBZ0lDWmZYMk52Ym5SaGFXNWxjaUI3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWm0xekxXSmhibTVsY2kxamIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObU5HWTBaalE3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lhSFIwY0hNNkx5OTNkM2N1ZG05a1lXWnZibVV1WlhNdll5OXpkR0YwYVdOekwybHRZV2RsYmk5aVp5MWlZVzV1WlhJdWFuQm5YQ0lwWEc0Z0lDQWdJQ0J1YnkxeVpYQmxZWFFnWTJWdWRHVnlPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1kyOTJaWEk3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIb3RhVzVrWlhnNklDMHhPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ05EY3djSGc3WEc1Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnYUdWcFoyaDBPaUEwTnpCd2VEdGNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1iWE10WW1GdWJtVnlMWFJwZEd4bElIdGNiaUFnSUNCM2FXUjBhRG9nTlRBbE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvbVgxOWliMnh2ZTF4dUlDQWdJQ0FnZDJsa2RHZzZNVEF3Y0hnN1hHNGdJQ0FnSUNCb1pXbG5hSFE2WVhWMGJ6dGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TnpZNGNIZ3BJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTb3ZYRzRnSUgxY2JpQWdMblptYlhOZlgySmhibTVsY2kxdGIySnBiR1VnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnSUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM4dllXNXBiV0YwYVc5dVhHNGdJQzUyWm0xekxXRnVhVzFoZEdsdmJpQjdYRzRnSUNBZ2QybGtkR2c2SURVd0pUdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzRnSUNBZ0ppMHRaV3hsYldWdWRDQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUgxY2JpQWdJQ0FtTFMweElIdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNklESTdYRzRnSUNBZ0lDQmhibWx0WVhScGIyNDZJR1pzYjJGMElEWnpJR1ZoYzJVdGFXNHRiM1YwSUdsdVptbHVhWFJsTzF4dUlDQWdJQ0FnY21sbmFIUTZJRE13Y0hnN1hHNGdJQ0FnSUNCaWIzUjBiMjA2SURBN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTNOamx3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3TzF4dUlDQWdJQ0FnSUNCeWFXZG9kRG9nTFRnd2NIZzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnBiV2NnZTF4dUlDQWdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTJOREJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhOREJ3ZUR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0FtTFMweUlIdGNiaUFnSUNBZ0lIb3RhVzVrWlhnNklESTdYRzRnSUNBZ0lDQmhibWx0WVhScGIyNDZJR1pzYjJGMElEUXVOWE1nWldGelpTMXBiaTF2ZFhRZ2FXNW1hVzVwZEdVN1hHNGdJQ0FnSUNCeWFXZG9kRG9nTkRVbE8xeHVJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ05qQndlRHRjYmlBZ0lDQjlYRzRnSUNBZ0ppMHRNeUI3WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPaUF5TzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWNUtEQndlQ2s3WEc0Z0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUdac2IyRjBJRFJ6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURNd0pUdGNiaUFnSUNBZ0lIUnZjRG9nTFRFd0pUdGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRE13Y0hnN1hHNGdJQ0FnZlZ4dUlDQWdJQ1l0TFRRZ2UxeHVJQ0FnSUNBZ2VpMXBibVJsZURvZ01qdGNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxlU2d3Y0hncE8xeHVJQ0FnSUNBZ1lXNXBiV0YwYVc5dU9pQm1iRzloZENBMExqVnpJR1ZoYzJVdGFXNHRiM1YwSUdsdVptbHVhWFJsTzF4dUlDQWdJQ0FnY21sbmFIUTZJRGM0SlR0Y2JpQWdJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURFd01IQjRPMXh1SUNBZ0lIMWNiaUFnSUNBbUxTMDFJSHRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJREk3WEc0Z0lDQWdJQ0F2TDNSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbGVTZ3djSGdwTzF4dUlDQWdJQ0FnTHk5aGJtbHRZWFJwYjI0NklHWnNiMkYwSURRdU5YTWdaV0Z6WlMxcGJpMXZkWFFnYVc1bWFXNXBkR1U3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3Y0hnN1hHNGdJQ0FnSUNCb1pXbG5hSFE2SUdGMWRHODdYRzRnSUNBZ0lDQnlhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNibHh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTnpZNWNIZ3BJSHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJRGs1SlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdKaTB0TmlCN1hHNGdJQ0FnSUNCNkxXbHVaR1Y0T2lBeU8xeHVJQ0FnSUNBZ0x5OTBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaWGtvTUhCNEtUdGNiaUFnSUNBZ0lDOHZZVzVwYldGMGFXOXVPaUJtYkc5aGRDQTBMalZ6SUdWaGMyVXRhVzR0YjNWMElHbHVabWx1YVhSbE8xeHVJQ0FnSUNBZ2QybGtkR2c2SURFNU1IQjRPMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQWdJQ0FnY21sbmFIUTZJRFk1SlR0Y2JpQWdJQ0FnSUhSdmNEb2dMVE13Y0hnN1hHNWNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01DNDRMQ0F3TGpncE8xeHVJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEF5TlhCNEtTQjdYRzRnSUNBZ0lDQWdJSEpwWjJoME9pQTROU1U3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklEYzJPWEI0S1NCN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURjd0pUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dOelk1Y0hncElIdGNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3Y0hnN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFhMlY1Wm5KaGJXVnpJR1pzYjJGMElIdGNiaUFnSUNBd0pTQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXWnBiSFJsY2pvZ1pISnZjQzF6YUdGa2IzY29NSEI0SURJMWNIZ2dNVFVnTUhCNElISm5ZbUVvTVRVeExDQXhORFVzSURFME5Td2dNQzQyS1NrN1hHNGdJQ0FnSUNCbWFXeDBaWEk2SUdSeWIzQXRjMmhoWkc5M0tEVndlQ0ExTUhCNElEVndlQ0J5WjJKaEtERTFNU3dnTVRRMUxDQXhORFVzSURBdU5pa3BPMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1Y1S0RCd2VDazdYRzRnSUNBZ2ZWeHVJQ0FnSURVd0pTQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXWnBiSFJsY2pvZ1pISnZjQzF6YUdGa2IzY29NSEI0SURVMWNIZ2dMVEUxY0hnZ01IQjRJSEpuWW1Fb01UVXhMQ0F4TkRVc0lERTBOU3dnTUM0eUtTazdYRzRnSUNBZ0lDQm1hV3gwWlhJNklHUnliM0F0YzJoaFpHOTNLQzB4TlhCNElEYzFjSGdnTVRWd2VDQnlaMkpoS0RFMU1Td2dNVFExTENBeE5EVXNJREF1TWlrcE8xeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVjVLQzB5TUhCNEtUdGNiaUFnSUNCOVhHNGdJQ0FnTVRBd0pTQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXWnBiSFJsY2pvZ1pISnZjQzF6YUdGa2IzY29NSEI0SURJMWNIZ2dNVFVnTUhCNElISm5ZbUVvTVRVeExDQXhORFVzSURFME5Td2dNQzQyS1NrN1hHNGdJQ0FnSUNCbWFXeDBaWEk2SUdSeWIzQXRjMmhoWkc5M0tEVndlQ0ExTUhCNElEVndlQ0J5WjJKaEtERTFNU3dnTVRRMUxDQXhORFVzSURBdU5pa3BPMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1Y1S0RCd2VDazdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFhacFpHVnZJSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2ZWeHVYRzRnSUM1M2N6RXdMV010Wm05eWJWOWZjbUZrYVc4NlkyaGxZMnRsWkNBcklDNTNjekV3TFdNdFptOXliVjlmYkdGaVpXdzZPbUZtZEdWeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1EQTNZemt5TzF4dUlDQjlYRzVjYmlBZ0xuWm1MV0p2YkdRZ2UxeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJbFp2WkdGbWIyNWxYQ0k3WEc0Z0lDQWdjM0pqT2lCc2IyTmhiQ2hjSWxadlpHRm1iMjVsSUZKbklFSnZiR1JjSWlrc1hHNGdJQ0FnSUNCMWNtd29YQ0pvZEhSd2N6b3ZMM2QzZHk1MmIyUmhabTl1WlM1bGN5OWpMM04wWVhScFkzTXZabTl1ZEhNdmRtOWtZV1p2Ym1WeVoySmtMWGRsWW1admJuUXVkMjltWmx3aUtWeHVJQ0FnSUNBZ0lDQm1iM0p0WVhRb1hDSjNiMlptWENJcExGeHVJQ0FnSUNBZ2RYSnNLR1p2Ym5SekwzWnZaR0ZtYjI1bExXSnZiR1F1ZDI5bVppa2dabTl5YldGMEtGd2lkMjltWmx3aUtUdGNiaUFnSUNCbWIyNTBMWE4wZVd4bE9pQmNJbTV2Y20xaGJGd2lPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJQ0FnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4dUlDQjlYRzRnSUM1MlppMW1iM0p0SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4TUhCNElEQWdNQ0F5TkhCNE8xeHVJQ0FnSUNaZlgySnZlQ0I3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dhVzVwZEdsaGJEdGNiaUFnSUNBZ0lDWTZabWx5YzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF5TUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDNTJaaTF5WVhSbGN5QjdYRzRnSUNBZ0psOWZZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0I3WEc0Z0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQnpkR0Z5ZER0Y2JpQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJSE4wWVhKME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdac1pYZ3RaVzVrTzF4dUlDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dabXhsZUMxbGJtUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUM1MlppMWlkWFIwYjI0Z2UxeHVJQ0FnSUNBZ0ppMHRiVzlpYVd4bElIdGNiaUFnSUNBZ0lDQWdiV2x1TFhkcFpIUm9PaUF4TWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVkbVl0WW1GdWJtVnlOVEFnZTF4dUlDQWdJQ1pmWDJsdFp5QjdYRzRnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZlkyOXVkR0ZwYm1WeU1TQjdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdJQ0J2Y21SbGNqb2dNanRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1YMTlqYjI1MFlXbHVaWEl5SUh0Y2JpQWdJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNBZ0lHOXlaR1Z5T2lBeE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1SUNBdWRtWXRabXhsZUNCN1hHNGdJQ0FnSmkwdFkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWJHVjRMUzFwZEdWdE9tNTBhQzF2WmkxMGVYQmxLREVwSUh0Y2JpQWdJQ0J2Y21SbGNqb2dNanRjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEyTkRCd2VDa2dlMXh1SUNBZ0lDQWdiM0prWlhJNklERTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJaaTFtYkdWNExTMXBkR1Z0T201MGFDMXZaaTEwZVhCbEtESXBJSHRjYmlBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTJOREJ3ZUNrZ2UxeHVJQ0FnSUNBZ2IzSmtaWEk2SURJN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMWpZWEprSUh0Y2JpQWdJQ0FtTFMxdlptWmxjaUI3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBNU56QndlQ2tnZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJRE15Y0hnN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMXlZWFJsSUh0Y2JpQWdJQ0FtTFMxbWFXSnlZU0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRFkwTUhCNEtTQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNTJabTF6TFdobGFXZG9kQzF0YjJKcGJHVWdlMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQm9aV2xuYUhRNklESXdjbVZ0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVJQ0F1ZG1adGN5MW1iRzkzTFdac1pYaDdYRzRnSUNBZ1pteGxlQzFtYkc5M09pQnliM2M3WEc0Z0lDQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEYzJPSEI0S1NCN1hHNGdJQ0FnSUNCbWJHVjRMV1pzYjNjNklISnZkeTF5WlhabGNuTmxPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRMHRCTEVGQlEwVXNaMEpCUkdNc1EwRkRaQ3hIUVVGSExFTkJRVU03UlVGRFJpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RFFVTm9RanM3UVVGSVNDeEJRVWxGTEdkQ1FVcGpMRU5CU1dRc09FTkJRVGhETEVOQlFVTTdSVUZETjBNc1VVRkJVU3hGUVVGRkxFMUJRVTA3UlVGRGFFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRaRHM3UVVGUVNDeEJRVkZGTEdkQ1FWSmpMRU5CVVdRc1owSkJRV2RDTEVOQlFVTTdSVUZEWml4alFVRmpMRVZCUVVVc1dVRkJXVHREUVVNM1FqczdRVUZXU0N4QlFWZEZMR2RDUVZoakxFTkJWMlFzYzBKQlFYTkNMRU5CUVVNN1JVRkRja0lzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4bFFVRmxMRVZCUVVVc1VVRkJVVHRGUVVONlFpeFhRVUZYTEVWQlFVVXNWVUZCVlR0RFFVTjRRanM3UVVGbVNDeEJRV2xDUlN4blFrRnFRbU1zUTBGcFFtUXNXVUZCV1N4RFFVRkRPMFZCUTFnc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRGFFSXNZVUZCWVN4RlFVRkZMRWxCUVVrN1EwRkRjRUk3TzBGQmNFSklMRUZCYzBKRkxHZENRWFJDWXl4RFFYTkNaQ3haUVVGWkxFTkJRVU03UlVGRFdDeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFVTm9RaXhoUVVGaExFVkJRVVVzU1VGQlNUdEZRVU51UWl4blFrRkJaMElzUlVGQlJTeFBRVUZQTzBOQlF6RkNPenRCUVRGQ1NDeEJRVGhDU1N4blFrRTVRbGtzUTBFNFFsZ3NiMEpCUVZjc1EwRkJRenRGUVVOWUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRlZCUVZVc1JVRkJSU3hKUVVGSk8wVkJRMmhDTEUxQlFVMHNSVUZCUlN4alFVRmpPMFZCUTNSQ0xHRkJRV0VzUlVGd1EwZ3NSMEZCUnp0RlFYRkRZaXhuUWtGQlowSXNSVUZCUlN4UFFVRlBPMFZCUTNwQ0xFdEJRVXNzUlVGQlJTeFBRVUZQTzBWQlEyUXNWVUZCVlN4RlFVRkZMRTFCUVUwN1JVRkRiRUlzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4UFFVRlBMRVZCUVVVc1EwRkJRenREUVUxWU96dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGNlF6RkRMRUZCT0VKSkxHZENRVGxDV1N4RFFUaENXQ3h2UWtGQlZ5eERRVUZETzBsQldWUXNVVUZCVVN4RlFVRkZMRTlCUVU4N1NVRkRha0lzVTBGQlV5eEZRVUZGTEVsQlFVazdSMEZGYkVJN096dEJRVGREVEN4QlFUaERTU3huUWtFNVExa3NRMEU0UTFnc2JVSkJRVlVzUTBGQlF6dEZRVU5XTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CUjFvN08wRkJiRVJNTEVGQmIwUkpMR2RDUVhCRVdTeERRVzlFV0N4aFFVRkpMRU5CUVVNN1JVRkRTaXhuUWtGQlowSXNSVUZCUlN4UFFVRlBPMFZCUTNwQ0xGVkJRVlVzUlVGQlJTeHhRa0ZCY1VJN1JVRkRha01zVDBGQlR5eEZRVUZGTEZGQlFWRTdSVUZEYWtJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGM1FtNUNPenRCUVdoR1RDeEJRVEJFVFN4blFrRXhSRlVzUTBGdlJGZ3NZVUZCU1N4QlFVMUdMRmxCUVZrc1EwRkJRenRGUVVOYUxITkNRVUZ6UWl4RlFVRkZMRWRCUVVjN1EwRkROVUk3TzBGQk5VUlFMRUZCTmtSTkxHZENRVGRFVlN4RFFXOUVXQ3hoUVVGSkxFRkJVMFlzVjBGQlZ5eERRVUZETzBWQlExZ3NkVUpCUVhWQ0xFVkJRVVVzUjBGQlJ6dERRVU0zUWpzN1FVRkZSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TlFVRk5PMFZCYWtVeFF5eEJRVzlFU1N4blFrRndSRmtzUTBGdlJGZ3NZVUZCU1N4RFFVRkRPMGxCWTBZc1QwRkJUeXhGUVVGRkxFbEJRVWs3U1VGRFlpeFJRVUZSTEVWQlFVVXNUVUZCVFR0SlFVTm9RaXhIUVVGSExFVkJRVVVzU1VGQlNUdEpRVU5VTEU5QlFVOHNSVUZCUlN4RFFVRkRPMGRCVjJJN096dEJRV2hHVEN4QlFYVkZUU3huUWtGMlJWVXNRMEZ2UkZnc1lVRkJTU3hCUVcxQ1JpeEpRVUZMTEVOQlFVRXNWMEZCVnl4RFFVRkRMRTFCUVUwc1EwRkJRenRGUVVOMlFpeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4RFFVRkRPMFZCUTA0c1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzWjBKQlFXZENMRVZCUVVVc1NVRkJTVHREUVVOMlFqczdRVUV2UlZBc1FVRnJSa2tzWjBKQmJFWlpMRU5CYTBaWUxHRkJRVWtzUTBGQlF6dEZRVU5LTEU5QlFVOHNSVUZCUlN4SFFVRkhPMFZCUTFvc1VVRkJVU3hGUVVGRkxGRkJRVkU3UTBGelFtNUNPenRCUVhKQ1F5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJja1l4UXl4QlFXdEdTU3huUWtGc1Jsa3NRMEZyUmxnc1lVRkJTU3hEUVVGRE8wbEJTVVlzVDBGQlR5eEZRVUZGTEZOQlFWTTdSMEZ2UW5KQ096czdRVUV4UjB3c1FVRjVSazBzWjBKQmVrWlZMRU5CYTBaWUxHRkJRVWtzUVVGUFJpeEpRVUZMTEVOQlFVRXNWMEZCVnl4RFFVRkRMRTFCUVUwc1EwRkJRenRGUVVOMlFpeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4RFFVRkRPMFZCUTA0c1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzWjBKQlFXZENMRVZCUVVVc1NVRkJTVHREUVVOMlFqczdRVUZxUjFBc1FVRnRSMDBzWjBKQmJrZFZMRU5CYlVkVUxIZENRVUZYTEVOQlFVTTdSVUZEV0N4blFrRkJaMElzUlVGQlJTeEpRVUZKTzBWQlEzUkNMRTlCUVU4c1JVRkJSU3hIUVVGSE8wTkJTV0k3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRWFJITlVNc1FVRnRSMDBzWjBKQmJrZFZMRU5CYlVkVUxIZENRVUZYTEVOQlFVTTdTVUZKVkN4UFFVRlBMRVZCUVVVc1NVRkJTVHRIUVVWb1FqczdPMEZCZWtkUUxFRkJORWRKTEdkQ1FUVkhXU3hEUVRSSFdDeG5Ra0ZCVHl4RFFVRkRPMFZCUTFBc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFhRVUZYTEVWQlFVVXNUVUZCVFR0RFFXZENjRUk3TzBGQlprTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRUzlITVVNc1FVRTBSMGtzWjBKQk5VZFpMRU5CTkVkWUxHZENRVUZQTEVOQlFVTTdTVUZKVEN4VFFVRlRMRVZCUVVVc1NVRkJTVHRIUVdOc1FqczdPMEZCT1VoTUxFRkJhMGhOTEdkQ1FXeElWU3hEUVd0SVZDeHhRa0ZCU3l4RFFVRkRPMFZCUTB3c1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGSmFFSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFYQklOVU1zUVVGclNFMHNaMEpCYkVoVkxFTkJhMGhVTEhGQ1FVRkxMRU5CUVVNN1NVRkhTQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEhRVVZzUWpzN08wRkJka2hRTEVGQmQwaE5MR2RDUVhoSVZTeERRWGRJVkN4MVFrRkJUeXhEUVVGRE8wVkJRMUFzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZKYUVJN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVRGSU5VTXNRVUYzU0Uwc1owSkJlRWhWTEVOQmQwaFVMSFZDUVVGUExFTkJRVU03U1VGSFRDeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFVVnNRanM3TzBGQk4waFFMRUZCWjBsSkxHZENRV2hKV1N4RFFXZEpXQ3hsUVVGTkxFTkJRVU03UlVGRFRpeGpRVUZqTEVWQlFVVXNUVUZCVFR0RlFVTjBRanM3TzFOQlIwYzdRMEZqU2pzN1FVRnVTa3dzUVVGM1NWRXNaMEpCZUVsUkxFTkJkVWxVTEhGQ1FVRk5MRUZCUTBvc1VVRkJVU3hEUVVGRE8wVkJRMUlzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4UFFVRlBMRVZCUVVVc2MxSkJRWE5TTzBOQlEyaFRPenRCUVROSlZDeEJRU3RKVVN4blFrRXZTVkVzUTBFNFNWUXNjMEpCUVU4c1FVRkRUQ3hSUVVGUkxFTkJRVU03UlVGRFVpeFBRVUZQTEVWQlFVVXNaeXRDUVVGbkswSTdRMEZETVN0Q096dEJRV3BLVkN4QlFYZEtTU3huUWtGNFNsa3NRMEYxU21Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUTBGQlF6dEZRVU5JTEZWQlFWVXNSVUZCUlN4SlFVRkpPME5CT0VKcVFqczdRVUYyVEV3c1FVRXlTazBzWjBKQk0wcFZMRU5CZFVwa0xHVkJRV1VzUTBGRFdDeEZRVUZGTEVGQlIwUXNWMEZCVnl4RFFVRkRPMFZCUTFnc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGSlpEczdRVUZJUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk4wb3pReXhCUVRKS1RTeG5Ra0V6U2xVc1EwRjFTbVFzWlVGQlpTeERRVU5ZTEVWQlFVVXNRVUZIUkN4WFFVRlhMRU5CUVVNN1NVRkhWQ3hQUVVGUExFVkJRVVVzUzBGQlN6dEhRVVZxUWpzN08wRkJhRXRRTEVGQmIwdFZMR2RDUVhCTFRTeERRWFZLWkN4bFFVRmxMRU5CUTFnc1JVRkJSU3hCUVZWRUxGbEJRVmtzUTBGRFZDeERRVUZETEVGQlEwRXNUMEZCVHl4RFFVRkRPMFZCUTFBc1dVRkJXU3hGUVVGRkxGTkJRVk03UlVGRGRrSXNXVUZCV1N4RlFVRkZMRzlDUVVGdlFqdEZRVU5zUXl4VlFVRlZMRVZCUVVVc2IwSkJRVzlDTzBWQlEyaERMRTlCUVU4c1JVRkJSU3hMUVVGTE8wVkJRMlFzUzBGQlN5eEZRVUZGTEU5QlFVODdSVUZEWkN4TlFVRk5MRVZCUVVVc1QwRkJUenRGUVVObUxGTkJRVk1zUlVGQlJTeGxRVUZsTzBWQlF6RkNMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVDBGQlR5eEZRVUZGTEZsQlFWazdSVUZEY2tJc1kwRkJZeXhGUVVGRkxGRkJRVkU3UlVGRGVFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1EwRkxia0k3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3BNTDBNc1FVRnZTMVVzWjBKQmNFdE5MRU5CZFVwa0xHVkJRV1VzUTBGRFdDeEZRVUZGTEVGQlZVUXNXVUZCV1N4RFFVTlVMRU5CUVVNc1FVRkRRU3hQUVVGUExFTkJRVU03U1VGalRDeFBRVUZQTEVWQlFVVXNTVUZCU1R0SFFVVm9RanM3TzBGQmNFeFlMRUZCZVV4SkxHZENRWHBNV1N4RFFYbE1XQ3h4UWtGQlRTeERRVUZETzBWQlEwNHNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhYUVVGWExFVkJRVVVzVFVGQlRUdERRV2RDY0VJN08wRkJaa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRWTWVrTXNRVUUyVEZFc1owSkJOMHhSTEVOQmVVeFlMSEZDUVVGTkxFRkJTVVlzVFVGQlRTeERRVUZETzBsQlEwNHNXVUZCV1N4RlFVRkZMRk5CUVZNN1NVRkRka0lzV1VGQldTeEZRVUZGTEc5Q1FVRnZRanRKUVVOc1F5eFZRVUZWTEVWQlFVVXNiMEpCUVc5Q08wbEJRMmhETEU5QlFVOHNSVUZCUlN4TFFVRkxPMGxCUTJRc1MwRkJTeXhGUVVGRkxFOUJRVTg3U1VGRFpDeE5RVUZOTEVWQlFVVXNUMEZCVHp0SlFVTm1MRk5CUVZNc1JVRkJSU3hoUVVGaE8wbEJRM2hDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMGxCUTFnc1QwRkJUeXhGUVVGRkxGbEJRVms3U1VGRGNrSXNZMEZCWXl4RlFVRkZMRkZCUVZFN1NVRkRlRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdSMEZEYmtJN096dEJRWHBOVkN4QlFUWk5SU3huUWtFM1RXTXNRMEUyVFdRc2NVSkJRWEZDTEVOQlFVTTdSVUZEY0VJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeFZRVUZWTEVWQlFVVXNTMEZCU3p0RlFVTnFRaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVXRtT3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZzVG5aRExFRkJOazFGTEdkQ1FUZE5ZeXhEUVRaTlpDeHhRa0ZCY1VJc1EwRkJRenRKUVUxc1FpeFBRVUZQTEVWQlFVVXNTVUZCU1R0SFFVVm9RanM3TzBGQmNrNUlMRUZCYzA1RkxHZENRWFJPWXl4RFFYTk9aQ3hoUVVGaExFTkJRVU03UlVGRFdpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMlE3TzBGQmVrNUlMRUZCTUU1RkxHZENRVEZPWXl4RFFUQk9aQ3hsUVVGbExFTkJRVU03UlVGRFpDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1IwRkJSeXhGUVVGRkxFdEJRVXM3UlVGRFZpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRmxCUVZrc1JVRkJSU3hKUVVGSk8wVkJRMnhDTEV0QlFVc3NSVUZCUlN4RFFVRkRPME5CVTFRN08wRkJVa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVd4UGRrTXNRVUV3VGtVc1owSkJNVTVqTEVOQk1FNWtMR1ZCUVdVc1EwRkJRenRKUVZOYUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBsQlEyeENMRTlCUVU4c1JVRkJSU3hUUVVGVE8wbEJRMnhDTEVkQlFVY3NSVUZCUlN4RFFVRkRPMGxCUTA0c1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRFVDeExRVUZMTEVWQlFVVXNRMEZCUXp0SlFVTlNMRmxCUVZrc1JVRkJSU3hEUVVGRE8wZEJSV3hDT3pzN1FVRkZReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCTlU5MlF5eEJRVEpQUlN4blFrRXpUMk1zUTBFeVQyUXNhMEpCUVd0Q0xFTkJRVU03U1VGRlppeFRRVUZUTEVWQlFVVXNTVUZCU1R0SFFVVnNRanM3TzBGQkwwOUlMRUZCWjFCRkxHZENRV2hRWXl4RFFXZFFaQ3hWUVVGVkxFTkJRVU03UlVGRFZDeG5Ra0ZCWjBJc1JVRkJSU3hQUVVGUE8wVkJRM3BDTEdWQlFXVXNSVUZCUlN4TFFVRkxPMFZCUTNSQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBOQlMyNUNPenRCUVhoUVNDeEJRWEZRU1N4blFrRnlVRmtzUTBGeFVGZ3NjVUpCUVZjc1EwRkJRenRGUVVOWUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBOQlEyNUNPenRCUVhaUVRDeEJRWGxRUlN4blFrRjZVR01zUTBGNVVHUXNjMEpCUVhOQ0xFTkJRVU03UlVGRGNrSXNaMEpCUVdkQ0xFVkJRVVVzVDBGQlR6dEZRVU42UWl4VlFVRlZMRVZCUVVVc05rUkJRVFpFTEVOQlEzWkZMRk5CUVZNc1EwRkJReXhOUVVGTk8wVkJRMnhDTEdWQlFXVXNSVUZCUlN4TFFVRkxPMFZCUTNSQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1MwRkJTenREUVV0a096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGdVVYWkRMRUZCZVZCRkxHZENRWHBRWXl4RFFYbFFaQ3h6UWtGQmMwSXNRMEZCUXp0SlFWZHVRaXhOUVVGTkxFVkJRVVVzUzBGQlN6dEhRVVZvUWpzN08wRkJkRkZJTEVGQmRWRkZMR2RDUVhaUll5eERRWFZSWkN4clFrRkJhMElzUTBGQlF6dEZRVU5xUWl4TFFVRkxMRVZCUVVVc1IwRkJSenRGUVVOV0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlMyeENPenM3T3pzN096czdUMEZUUnp0RFFVTktPenRCUVdSRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRXhVWFpETEVGQmRWRkZMR2RDUVhaUll5eERRWFZSWkN4clFrRkJhMElzUTBGQlF6dEpRVWxtTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGRCWVdRN096dEJRWGhTU0N4QlFYbFNSU3huUWtGNlVtTXNRMEY1VW1Rc2IwSkJRVzlDTEVOQlFVTTdSVUZEYmtJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UTBGUlpEczdRVUZPUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk5WSjJReXhCUVhsU1JTeG5Ra0Y2VW1Nc1EwRjVVbVFzYjBKQlFXOUNMRU5CUVVNN1NVRkpha0lzVDBGQlR5eEZRVUZGTEV0QlFVczdTVUZEWkN4VlFVRlZMRVZCUVVVc1RVRkJUVHRKUVVOc1FpeE5RVUZOTEVWQlFVVXNUVUZCVFR0SlFVTmtMRkZCUVZFc1JVRkJSU3hOUVVGTk8wZEJSVzVDT3pzN1FVRnNVMGdzUVVGdlUwVXNaMEpCY0ZOakxFTkJiMU5rTEdWQlFXVXNRMEZCUXp0RlFVTmtMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZ4Um01Q096dEJRVzVHUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmVGTjJReXhCUVc5VFJTeG5Ra0Z3VTJNc1EwRnZVMlFzWlVGQlpTeERRVUZETzBsQlMxb3NUMEZCVHl4RlFVRkZMRWxCUVVrN1IwRnJSbWhDT3pzN1FVRXpXRWdzUVVFeVUwa3NaMEpCTTFOWkxFTkJNbE5ZTEhkQ1FVRlRMRU5CUVVNN1JVRkRWQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UlFVRlJMRVZCUVVVc1RVRkJUVHREUVVOcVFqczdRVUU1VTB3c1FVRXJVMGtzWjBKQkwxTlpMRU5CSzFOWUxHdENRVUZITEVOQlFVTTdSVUZEU0N4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xGTkJRVk1zUlVGQlJTdzJRa0ZCTmtJN1JVRkRlRU1zUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1EwRkJRenREUVZWV096dEJRVlJETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGd1ZIcERMRUZCSzFOSkxHZENRUzlUV1N4RFFTdFRXQ3hyUWtGQlJ5eERRVUZETzBsQlRVUXNWVUZCVlN4RlFVRkZMRU5CUVVNN1NVRkRZaXhMUVVGTExFVkJRVVVzUzBGQlN6dEhRVTltT3pzN1FVRktSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCZWxRelF5eEJRWGRVVFN4blFrRjRWRlVzUTBFclUxZ3NhMEpCUVVjc1EwRlRSaXhIUVVGSExFTkJRVU03U1VGRlFTeExRVUZMTEVWQlFVVXNTMEZCU3p0SFFVVm1PenM3UVVFMVZGQXNRVUU0VkVrc1owSkJPVlJaTEVOQk9GUllMR3RDUVVGSExFTkJRVU03UlVGRFNDeFBRVUZQTEVWQlFVVXNRMEZCUXp0RlFVTldMRk5CUVZNc1JVRkJSU3dyUWtGQkswSTdSVUZETVVNc1MwRkJTeXhGUVVGRkxFZEJRVWM3UlVGRFZpeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRlZCUVZVc1JVRkJSU3hKUVVGSk8wTkJRMnBDT3p0QlFYQlZUQ3hCUVhGVlNTeG5Ra0Z5VlZrc1EwRnhWVmdzYTBKQlFVY3NRMEZCUXp0RlFVTklMRTlCUVU4c1JVRkJSU3hEUVVGRE8wVkJRMVlzVTBGQlV5eEZRVUZGTEdWQlFXVTdSVUZETVVJc1UwRkJVeXhGUVVGRkxEWkNRVUUyUWp0RlFVTjRReXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEVkQlFVY3NSVUZCUlN4SlFVRkpPMFZCUTFRc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UTBGRGFrSTdPMEZCTlZWTUxFRkJObFZKTEdkQ1FUZFZXU3hEUVRaVldDeHJRa0ZCUnl4RFFVRkRPMFZCUTBnc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeFRRVUZUTEVWQlFVVXNaVUZCWlR0RlFVTXhRaXhUUVVGVExFVkJRVVVzSzBKQlFTdENPMFZCUXpGRExFdEJRVXNzUlVGQlJTeEhRVUZITzBWQlExWXNSMEZCUnl4RlFVRkZMRU5CUVVNN1JVRkRUaXhWUVVGVkxFVkJRVVVzUzBGQlN6dERRVU5zUWpzN1FVRndWa3dzUVVGeFZra3NaMEpCY2xaWkxFTkJjVlpZTEd0Q1FVRkhMRU5CUVVNN1JVRkRTQ3hQUVVGUExFVkJRVVVzUTBGQlF6dEZRVWRXTEV0QlFVc3NSVUZCUlN4TFFVRkxPMFZCUTFvc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRWRCUVVjc1JVRkJSU3hEUVVGRE8wTkJTMUE3TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVGxXZWtNc1FVRnhWa2tzWjBKQmNsWlpMRU5CY1ZaWUxHdENRVUZITEVOQlFVTTdTVUZWUkN4TFFVRkxMRVZCUVVVc1IwRkJSenRIUVVWaU96czdRVUZxVjB3c1FVRnJWMGtzWjBKQmJGZFpMRU5CYTFkWUxHdENRVUZITEVOQlFVTTdSVUZEU0N4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVkV0xFdEJRVXNzUlVGQlJTeExRVUZMTzBWQlExb3NUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEVkQlFVY3NSVUZCUlN4TFFVRkxPMFZCUlZZc1UwRkJVeXhGUVVGRkxHVkJRV1U3UTBGbE0wSTdPMEZCWkVNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFUVlhNVU1zUVVGclYwa3NaMEpCYkZkWkxFTkJhMWRZTEd0Q1FVRkhMRU5CUVVNN1NVRlhSQ3hMUVVGTExFVkJRVVVzUjBGQlJ6dEhRV0ZpT3pzN1FVRldReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYUZoNlF5eEJRV3RYU1N4blFrRnNWMWtzUTBGclYxZ3NhMEpCUVVjc1EwRkJRenRKUVdWRUxFZEJRVWNzUlVGQlJTeERRVUZETzBsQlEwNHNTMEZCU3l4RlFVRkZMRWRCUVVjN1IwRlJZanM3TzBGQlNrY3NUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRWFJZTTBNc1FVRnhXRTBzWjBKQmNsaFZMRU5CYTFkWUxHdENRVUZITEVOQmJVSkdMRWRCUVVjc1EwRkJRenRKUVVWQkxFdEJRVXNzUlVGQlJTeExRVUZMTzBkQlJXWTdPenRCUVVsTUxGVkJRVlVzUTBGQlZpeExRVUZWTzBWQlExSXNSVUZCUlR0SlFVTkJMR05CUVdNc1JVRkJSU3h4UkVGQmNVUTdTVUZEY2tVc1RVRkJUU3hGUVVGRkxHdEVRVUZyUkR0SlFVTXhSQ3hUUVVGVExFVkJRVVVzWlVGQlpUczdSVUZGTlVJc1IwRkJSenRKUVVORUxHTkJRV01zUlVGQlJTeDNSRUZCZDBRN1NVRkRlRVVzVFVGQlRTeEZRVUZGTEhGRVFVRnhSRHRKUVVNM1JDeFRRVUZUTEVWQlFVVXNhVUpCUVdsQ096dEZRVVU1UWl4SlFVRkpPMGxCUTBZc1kwRkJZeXhGUVVGRkxIRkVRVUZ4UkR0SlFVTnlSU3hOUVVGTkxFVkJRVVVzYTBSQlFXdEVPMGxCUXpGRUxGTkJRVk1zUlVGQlJTeGxRVUZsT3pzN08wRkJNMWxvUXl4QlFUaFpSU3huUWtFNVdXTXNRMEU0V1dRc1YwRkJWeXhEUVVGRE8wVkJRMVlzUzBGQlN5eEZRVUZGTEVsQlFVazdRMEZEV2pzN1FVRm9Xa2dzUVVGcldrVXNaMEpCYkZwakxFTkJhMXBrTEcxQ1FVRnRRaXhCUVVGQkxGRkJRVkVzUjBGQlJ5eHRRa0ZCYlVJc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRGRrUXNaMEpCUVdkQ0xFVkJRVVVzVDBGQlR6dERRVU14UWpzN1FVRndXa2dzUVVGeldrVXNaMEpCZEZwakxFTkJjMXBrTEZGQlFWRXNRMEZCUXp0RlFVTlFMRmRCUVZjc1JVRkJSU3hWUVVGVk8wVkJRM1pDTEVkQlFVY3NSVUZCUlN4NVFrRkJlVUlzUlVGRE5VSXNkMFZCUVhkRkxFTkJRM1JGTEdOQlFXTXNSVUZEYUVJc05rSkJRVFpDTEVOQlFVTXNZMEZCWXp0RlFVTTVReXhWUVVGVkxFVkJRVVVzVVVGQlVUdEZRVU53UWl4WFFVRlhMRVZCUVVVc1IwRkJSenRGUVVOb1FpeFpRVUZaTEVWQlFVVXNTVUZCU1R0RFFVTnVRanM3UVVFdldrZ3NRVUZuWVVVc1owSkJhR0ZqTEVOQloyRmtMRkZCUVZFc1EwRkJRenRGUVVOUUxFOUJRVThzUlVGQlJTeGhRVUZoTzBOQlQzWkNPenRCUVhoaFNDeEJRV3RoU1N4blFrRnNZVmtzUTBGcllWZ3NZVUZCU3l4RFFVRkRPMFZCUTB3c1MwRkJTeXhGUVVGRkxFOUJRVTg3UTBGSlpqczdRVUYyWVV3c1FVRnZZVTBzWjBKQmNHRlZMRU5CYTJGWUxHRkJRVXNzUVVGRlNDeFpRVUZaTEVOQlFVTTdSVUZEV2l4aFFVRmhMRVZCUVVVc1NVRkJTVHREUVVOd1FqczdRVUZOUkN4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk5XRjZReXhCUVRKaFNTeG5Ra0V6WVZrc1EwRXlZVmdzYjBKQlFWY3NRMEZCUXp0SlFVVlVMRmRCUVZjc1JVRkJSU3hMUVVGTE8wbEJRMnhDTEZkQlFWY3NSVUZCUlN4TFFVRkxPMGRCVFhKQ096czdRVUZLUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmFHSjZReXhCUVRKaFNTeG5Ra0V6WVZrc1EwRXlZVmdzYjBKQlFWY3NRMEZCUXp0SlFVMVVMRmRCUVZjc1JVRkJSU3hSUVVGUk8wbEJRM0pDTEZkQlFWY3NSVUZCUlN4UlFVRlJPMGRCUlhoQ096czdRVUZ3WWt3c1FVRnpZazBzWjBKQmRHSlZMRU5CTUdGa0xGTkJRVk1zUTBGWlNpeHJRa0ZCVVN4RFFVRkRPMFZCUTFJc1UwRkJVeXhGUVVGRkxFdEJRVXM3UTBGRGFrSTdPMEZCZUdKUUxFRkJObUpKTEdkQ1FUZGlXU3hEUVRaaVdDeHBRa0ZCU3l4RFFVRkRPMFZCUTB3c1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGSmFFSTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFTOWlla01zUVVFMllra3NaMEpCTjJKWkxFTkJObUpZTEdsQ1FVRkxMRU5CUVVNN1NVRkhTQ3hUUVVGVExFVkJRVVVzU1VGQlNUdEhRVVZzUWpzN08wRkJSME1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhKamVrTXNRVUZ2WTBrc1owSkJjR05aTEVOQmIyTllMSGRDUVVGWkxFTkJRVU03U1VGRlZpeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVVllPenM3UVVGSFF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJNMk42UXl4QlFUQmpTU3huUWtFeFkxa3NRMEV3WTFnc2QwSkJRVmtzUTBGQlF6dEpRVVZXTEV0QlFVc3NSVUZCUlN4RFFVRkRPMGRCUlZnN096dEJRVGxqVEN4QlFXbGtTU3huUWtGcVpGa3NRMEZwWkZnc2JVSkJRVmNzUTBGQlF6dEZRVU5ZTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJibVJNTEVGQmNXUkZMR2RDUVhKa1l5eERRWEZrWkN4alFVRmpMRUZCUVVFc1dVRkJZU3hEUVVGQkxFTkJRVU1zUlVGQlJUdEZRVU0xUWl4TFFVRkxMRVZCUVVVc1EwRkJRenREUVVsVU96dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGMlpIWkRMRUZCY1dSRkxHZENRWEprWXl4RFFYRmtaQ3hqUVVGakxFRkJRVUVzV1VGQllTeERRVUZCTEVOQlFVTXNSVUZCUlR0SlFVY3hRaXhMUVVGTExFVkJRVVVzUTBGQlF6dEhRVVZZT3pzN1FVRXhaRWdzUVVFeVpFVXNaMEpCTTJSakxFTkJNbVJrTEdOQlFXTXNRVUZCUVN4WlFVRmhMRU5CUVVFc1EwRkJReXhGUVVGRk8wVkJRelZDTEV0QlFVc3NSVUZCUlN4RFFVRkRPME5CU1ZRN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRka2RrTXNRVUV5WkVVc1owSkJNMlJqTEVOQk1tUmtMR05CUVdNc1FVRkJRU3haUVVGaExFTkJRVUVzUTBGQlF5eEZRVUZGTzBsQlJ6RkNMRXRCUVVzc1JVRkJSU3hEUVVGRE8wZEJSVmc3T3p0QlFVZEhMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZ1WlhwRExFRkJhMlZKTEdkQ1FXeGxXU3hEUVd0bFdDeGxRVUZQTEVOQlFVTTdTVUZGVEN4WlFVRlpMRVZCUVVVc1NVRkJTVHRIUVVWeVFqczdPMEZCZEdWTUxFRkJlV1ZKTEdkQ1FYcGxXU3hEUVhsbFdDeGxRVUZQTEVOQlFVTTdSVUZEVUN4UFFVRlBMRVZCUVVVc1MwRkJTenREUVV0bU96dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFelpYcERMRUZCZVdWSkxHZENRWHBsV1N4RFFYbGxXQ3hsUVVGUExFTkJRVU03U1VGSFRDeFBRVUZQTEVWQlFVVXNTVUZCU1R0SlFVTmlMRmRCUVZjc1JVRkJSU3hOUVVGTk8wZEJSWFJDT3pzN1FVRkhSQ3hOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYkdaMlF5eEJRV2xtUlN4blFrRnFabU1zUTBGcFptUXNiVUpCUVcxQ0xFTkJRVU03U1VGRmFFSXNUVUZCVFN4RlFVRkZMRXRCUVVzN1IwRkZhRUk3T3p0QlFYSm1TQ3hCUVhObVJTeG5Ra0YwWm1Nc1EwRnpabVFzWlVGQlpTeERRVUZCTzBWQlEySXNVMEZCVXl4RlFVRkZMRWRCUVVjN1JVRkRaQ3hUUVVGVExFVkJRVVVzU1VGQlNUdERRVWxvUWpzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCZW1aMlF5eEJRWE5tUlN4blFrRjBabU1zUTBGelptUXNaVUZCWlN4RFFVRkJPMGxCU1Znc1UwRkJVeXhGUVVGRkxGZEJRVmM3UjBGRmVrSWlmUT09ICovXG4iXX0= */
