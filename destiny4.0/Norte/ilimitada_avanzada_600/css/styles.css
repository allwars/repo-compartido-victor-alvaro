/**
 * Vodafone Reboot Framework: Version 2.15.0. Generation Date: 2021-06-30T10:43:33.026Z
 */

.vfes-ms-content .ws10-c-card-rate__product-title span {
  font-family: "VodafoneRegular",Helvetica,Arial,sans-serif;
}

.vfes-ms-content .vfms-badge--container {
  display: flex;
  justify-content: baseline;
  align-items: flex-start;
}

.vfes-ms-content .vfms-badge1 {
  max-width: 7.5rem;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfms-badge2 {
  max-width: 8.125rem;
  margin-bottom: 0.9375rem;
  background-color: #fecb00;
}

.vfes-ms-content .vfms-badge3 {
  background-color: #A8B400;
}

.vfes-ms-content .vfms-velocity-selector__container {
  margin-left: 1.875rem;
  margin-top: 0.625rem;
}

.vfes-ms-content .vfms-position-relative {
  position: relative;
}

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:first-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .wfms__legal {
  font-size: 0.875rem;
}

.vfes-ms-content .vfms-link {
  color: #000000;
}

.vfes-ms-content .vfms-link:hover {
  color: #E60000;
}

.vfes-ms-content .vfms__banner-terminal {
  display: flex;
}

.vfes-ms-content .vf-banner {
  position: relative;
  background-image:  url('../img/banner/bg-banner-mv.jpg?v=27798610299b2b08e7337b28f7a10027');
  background-size: contain;
  background-repeat: no-repeat;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/bg-banner-desktop.jpg?v=e9812771cf2a3b02ecd7d53a5b3d3a27');
    background-attachment: fixed;
    background-position-y: -9.375rem;
  }
}

.vfes-ms-content .vf-banner__textcontainer {
  padding-top: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 3.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 6.125rem;
    padding-bottom: 6.125rem;
  }
}

.vfes-ms-content .vf-terminales__container--text {
  font-size: 0.875rem;
}

.vfes-ms-content .vf-terminales__container .ws10-c-button {
  width: 100%;
}

.vfes-ms-content .vf-terminales__container .ws10-text--underline {
  text-decoration: underline;
}

.vfes-ms-content .vf-terminales img {
  max-width: 4.625rem;
}

.vfes-ms-content .vf-mobile__animation {
  padding: 1.875rem 0;
  position: relative;
}

.vfes-ms-content .vf-mobile__animation--img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.vfes-ms-content .vf-mobile__apps {
  overflow: hidden;
  min-height: 18.125rem;
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
}

.vfes-ms-content .vf-mobile__apps:before {
  content: "";
  position: absolute;
  max-height: 17.5rem;
  top: 1.25rem;
  left: 0;
  right: -100%;
  bottom: 0;
  -webkit-animation: slide 20s linear infinite;
          animation: slide 20s linear infinite;
  background-size: cover;
  background:  url('../img/section-mobile/appilimitada.png?v=3fb073c22c3f299848a03129eb4d224d') 0 100%;
}

@-webkit-keyframes slide {
  100% {
    transform: translateX(-50%);
  }
}

.vfes-ms-content .vf-terminal {
  border-radius: 0.375rem;
  overflow: hidden;
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-terminal__content {
  order: 2;
  text-align: center;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__content {
    order: 1;
    text-align: left;
  }
}

.vfes-ms-content .vf-terminal__imgdesktop {
  display: none;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgdesktop {
    display: block;
    order: 2;
  }
}

.vfes-ms-content .vf-terminal__imgmobile {
  order: 1;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgmobile {
    display: none;
  }
}

.vfes-ms-content .vf-tv__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-tv__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-fiber__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-fiber__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-superWifi__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superWifi__flexdirection {
    flex-direction: row-reverse;
  }
}

.vfes-ms-content .vf-superWifi__img {
  max-width: 18.75rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superWifi__img {
    max-width: 28.125rem;
  }
}

.vfes-ms-content .vf-form {
  margin-top: 0.625rem;
  padding: 0 0 0 0;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__title {
  max-width: initial;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__item {
  min-width: 20%;
}

.vfes-ms-content .vf-ticket {
  position: relative;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-ticket {
    position: absolute;
    right: 1rem;
    padding-top: 1rem;
  }
}

.vfes-ms-content .vf-ticket__floating {
  position: sticky;
  width: inherit;
  width: 100%;
  max-width: 25rem;
  padding-top: 0.5rem;
}

.vfes-ms-content .vf-ticket__opacity0 {
  opacity: 0;
}

.vfes-ms-content .vf-sticky {
  position: fixed;
  z-index: 1;
  bottom: 0;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-sticky {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taWNyby5zY3NzIiwic3R5bGVzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVJLHlEQUF5RDtBQ0Q3RDs7QUREQTtFQUtJLGFBQWE7RUFDYix5QkFBd0I7RUFDeEIsdUJBQXNCO0FDQTFCOztBRFBBO0VBVUksaUJBQWU7RUFDZix3QkFBa0I7QUNDdEI7O0FEWkE7RUFjSSxtQkFBZTtFQUNmLHdCQUFrQjtFQUNsQix5QkFBeUI7QUNFN0I7O0FEbEJBO0VBbUJJLHlCQUF5QjtBQ0c3Qjs7QUR0QkE7RUFzQkkscUJBQWdCO0VBQ2hCLG9CQUFlO0FDSW5COztBRDNCQTtFQTBCSSxrQkFBa0I7QUNLdEI7O0FEL0JBO0VBK0JNLGdCQUFnQjtBQ0l0Qjs7QURuQ0E7RUFrQ1EsYUFBYTtBQ0tyQjs7QURKUTtFQW5DUjtJQW9DVSxjQUFjO0VDUXRCO0FBQ0Y7O0FEN0NBO0VBeUNRLGFBQWE7QUNRckI7O0FEUFE7RUExQ1I7SUEyQ1UsY0FBYztFQ1d0QjtBQUNGOztBRHZEQTtFQWtEWSxzQkFBc0I7RUFDdEIsaUNBQWlDO0VBQ2pDLCtCQUErQjtFQUMvQixjQUFjO0VBQ2QsYUFBYTtFQUNiLGNBQWM7RUFDZCwwQkFBMEI7RUFDMUIsV0FBVztFQUNYLHFCQUFxQjtFQUNyQix3QkFBd0I7RUFDeEIsa0JBQWtCO0FDUzlCOztBRFBZO0VBOURaO0lBK0RjLGFBQWE7RUNXekI7QUFDRjs7QUQzRUE7RUF5RU0sYUFBYTtFQUNiLG1CQUFtQjtBQ016Qjs7QURMTTtFQTNFTjtJQTZFVSxzQkFBc0I7SUFDdEIsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixjQUFjO0lBQ2QsYUFBYTtJQUNiLGNBQWM7SUFDZCx3QkFBd0I7SUFDeEIsV0FBVztJQUNYLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsa0JBQWtCO0VDUTFCO0FBQ0Y7O0FEaEdBO0VBaUdJLHlCQUF5QjtBQ0c3Qjs7QURwR0E7RUFvR0ksbUJBQWU7QUNJbkI7O0FEeEdBO0VBdUdJLGNBQWE7QUNLakI7O0FENUdBO0VBeUdNLGNBQWE7QUNPbkI7O0FEaEhBO0VBOEdJLGFBQWE7QUNNakI7O0FEcEhBO0VBb0hJLGtCQUFrQjtFQUNsQiwyRkFBdUQ7RUFDdkQsd0JBQXdCO0VBQ3hCLDRCQUE0QjtBQ0loQzs7QURISTtFQXhISjtJQXlITSxnR0FBNEQ7SUFDNUQsNEJBQTRCO0lBQzVCLGdDQUE2QjtFQ09qQztBQUNGOztBRG5JQTtFQThITSxvQkFBaUI7QUNTdkI7O0FEUlE7RUEvSFI7SUFnSVUscUJBQWlCO0VDWXpCO0FBQ0Y7O0FEWFE7RUFsSVI7SUFtSVEscUJBQWlCO0lBQ2pCLHdCQUFvQjtFQ2UxQjtBQUNGOztBRHBKQTtFQTRJUSxtQkFBZTtBQ1l2Qjs7QUR4SkE7RUErSVEsV0FBVztBQ2FuQjs7QUQ1SkE7RUFrSlEsMEJBQTBCO0FDY2xDOztBRGhLQTtFQXNKTSxtQkFBZTtBQ2NyQjs7QURwS0E7RUE2Sk0sbUJBQWU7RUFDZixrQkFBa0I7QUNXeEI7O0FEektBO0VBZ0tRLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtBQ2FwQjs7QURsTEE7RUF5S00sZ0JBQWdCO0VBQ2hCLHFCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixzQkFBc0I7QUNhNUI7O0FEM0xBO0VBZ0xRLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsbUJBQWlCO0VBQ2pCLFlBQVM7RUFDVCxPQUFPO0VBQ1AsWUFBWTtFQUNaLFNBQVM7RUFDVCw0Q0FBb0M7VUFBcEMsb0NBQW9DO0VBQ3BDLHNCQUFzQjtFQUN0QixvR0FBZ0U7QUNleEU7O0FEWk07RUFDRTtJQUNFLDJCQUEyQjtFQ2VuQztBQUNGOztBRDlNQTtFQXFNSSx1QkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQ2ExQjs7QURaSTtFQXhNSjtJQXlNTSxtQkFBbUI7RUNnQnZCO0FBQ0Y7O0FEMU5BO0VBNE1NLFFBQVE7RUFDUixrQkFBa0I7QUNrQnhCOztBRGpCTTtFQTlNTjtJQStNUSxRQUFRO0lBQ1IsZ0JBQWdCO0VDcUJ0QjtBQUNGOztBRHRPQTtFQW9OTSxhQUFhO0FDc0JuQjs7QURyQk07RUFyTk47SUFzTlEsY0FBYztJQUNkLFFBQVE7RUN5QmQ7QUFDRjs7QURqUEE7RUEyTk0sUUFBUTtBQzBCZDs7QUR6Qk07RUE1Tk47SUE2TlEsYUFBYTtFQzZCbkI7QUFDRjs7QUQzUEE7RUFtT00sc0JBQXNCO0FDNEI1Qjs7QUQzQk07RUFwT047SUFxT1EsbUJBQW1CO0VDK0J6QjtBQUNGOztBRHJRQTtFQTRPTSxzQkFBc0I7QUM2QjVCOztBRDVCTTtFQTdPTjtJQThPUSxtQkFBbUI7RUNnQ3pCO0FBQ0Y7O0FEL1FBO0VBcVBNLHNCQUFzQjtBQzhCNUI7O0FEN0JNO0VBdFBOO0lBdVBRLDJCQUEyQjtFQ2lDakM7QUFDRjs7QUR6UkE7RUEyUE0sbUJBQWdCO0FDa0N0Qjs7QURqQ007RUE1UE47SUE2UFEsb0JBQWdCO0VDcUN0QjtBQUNGOztBRG5TQTtFQWtRSSxvQkFBZ0I7RUFDaEIsZ0JBQWU7QUNxQ25COztBRHhTQTtFQXFRTSxjQUFjO0FDdUNwQjs7QUQ1U0E7RUF1UVEsc0JBQW1CO0FDeUMzQjs7QURoVEE7RUE2UU0sa0JBQWtCO0FDdUN4Qjs7QURwVEE7RUFnUk0sY0FBYztBQ3dDcEI7O0FEeFRBO0VBb1JJLGtCQUFrQjtBQ3dDdEI7O0FEdENJO0VBdFJKO0lBdVJNLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsaUJBQWlCO0VDMENyQjtBQUNGOztBRHBVQTtFQTZSTSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsbUJBQWdCO0FDMkN0Qjs7QUQ1VUE7RUFxU00sVUFBVTtBQzJDaEI7O0FEaFZBO0VBMFNJLGVBQWU7RUFDZixVQUFVO0VBQ1YsU0FBUztFQUNULFdBQVc7QUMwQ2Y7O0FEekNJO0VBOVNKO0lBK1NNLGFBQWE7RUM2Q2pCO0FBQ0Y7O0FBRUEsNi9oQkFBNi9oQjtBQUM3L2hCLDgvaEJBQTgvaEIiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAud3MxMC1jLWNhcmQtcmF0ZV9fcHJvZHVjdC10aXRsZSBzcGFue1xuICAgIGZvbnQtZmFtaWx5OiBcIlZvZGFmb25lUmVndWxhclwiLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO1xuICB9XG4gIC52Zm1zLWJhZGdlLS1jb250YWluZXJ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6YmFzZWxpbmU7XG4gICAgYWxpZ24taXRlbXM6ZmxleC1zdGFydDtcbiAgfVxuICAudmZtcy1iYWRnZTF7XG4gICAgbWF4LXdpZHRoOjEyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206MTVweDtcbiAgfVxuICAudmZtcy1iYWRnZTJ7XG4gICAgbWF4LXdpZHRoOjEzMHB4O1xuICAgIG1hcmdpbi1ib3R0b206MTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVjYjAwO1xuICB9XG4gIC52Zm1zLWJhZGdlM3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQThCNDAwO1xuICB9XG4gIC52Zm1zLXZlbG9jaXR5LXNlbGVjdG9yX19jb250YWluZXJ7XG4gICAgbWFyZ2luLWxlZnQ6MzBweDtcbiAgICBtYXJnaW4tdG9wOjEwcHg7XG4gIH1cbiAgLnZmbXMtcG9zaXRpb24tcmVsYXRpdmV7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC8vIEJyZWFkY3J1bWJzXG4gIC52Zi1icmVhZGNydW1ic3tcbiAgICAmIGxpIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgICAgJiBhe1xuICAgICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICAgIGJvcmRlci10b3A6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgICBoZWlnaHQ6IC43NXJlbTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgJjphZnRlcntcbiAgICAgICAgICBib3JkZXItd2lkdGg6IC4wNjI1cmVtO1xuICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cblxuICB9XG4gIC8vIGNsYXNlIGdlbsOpcmljYSBhcnJlZ2xvIHJhZGlvIGJ1dHRvbnNcblxuICAud3MxMC1jLWZvcm1fX3JhZGlvOmNoZWNrZWQrLndzMTAtYy1mb3JtX19sYWJlbDo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdjOTI7XG4gIH1cbiAgLndmbXNfX2xlZ2Fse1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAudmZtcy1saW5re1xuICAgIGNvbG9yOiMwMDAwMDA7XG4gICAgJjpob3ZlcntcbiAgICAgIGNvbG9yOiNFNjAwMDA7XG4gICAgfVxuICB9XG4gIC8vYmFubmVyIHRlcm1pbmFsXG4gIC52Zm1zX19iYW5uZXItdGVybWluYWx7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC8vIGNsYXNlIGdlbsOpcmljYVxuXG4gIC52Zi1iYW5uZXJ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvYmctYmFubmVyLW12LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2Jhbm5lci9iZy1iYW5uZXItZGVza3RvcC5qcGdcIik7XG4gICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiAtMTUwcHg7XG4gICAgfVxuICAgICZfX3RleHRjb250YWluZXIge1xuICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDk4cHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA5OHB4O1xuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnZmLXRlcm1pbmFsZXN7XG4gICAgJl9fY29udGFpbmVye1xuICAgICAgJi0tdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgfVxuICAgICAgLndzMTAtYy1idXR0b257XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgICAgLndzMTAtdGV4dC0tdW5kZXJsaW5le1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaW1ne1xuICAgICAgbWF4LXdpZHRoOiA3NHB4O1xuICAgIH1cbiAgfVxuXG5cbiAgLnZmLW1vYmlsZXtcbiAgICAmX19hbmltYXRpb257XG4gICAgICBwYWRkaW5nOiAzMHB4IDA7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAmLS1pbWd7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICB9XG4gICAgfVxuICAgICZfX2FwcHN7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgbWluLWhlaWdodDogMjkwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbWF4LWhlaWdodDogMjgwcHg7XG4gICAgICAgIHRvcDogMjBweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IC0xMDAlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGUgMjBzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3NlY3Rpb24tbW9iaWxlL2FwcGlsaW1pdGFkYS5wbmdcIikgMCAxMDAlO1xuICAgICAgfVxuXG4gICAgICBALXdlYmtpdC1rZXlmcmFtZXMgc2xpZGUge1xuICAgICAgICAxMDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cbiAgfVxuICAudmYtdGVybWluYWwge1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuICAgICZfX2NvbnRlbnQge1xuICAgICAgb3JkZXI6IDI7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIH1cbiAgICB9XG4gICAgJl9faW1nZGVza3RvcCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cbiAgICAmX19pbWdtb2JpbGUge1xuICAgICAgb3JkZXI6IDE7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmYtdHZ7XG4gICAgJl9fZmxleGRpcmVjdGlvbntcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB9XG5cbiAgICB9XG4gIH1cbiAgLnZmLWZpYmVye1xuICAgICZfX2ZsZXhkaXJlY3Rpb257XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgfVxuXG4gICAgfVxuICB9XG4gIC52Zi1zdXBlcldpZml7XG4gICAgJl9fZmxleGRpcmVjdGlvbntcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgJl9faW1ne1xuICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC52Zi1mb3Jte1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgcGFkZGluZzowIDAgMCAwO1xuICAgICZfX2JveHtcbiAgICAgIHdpZHRoOiBpbml0aWFsO1xuICAgICAgJjpmaXJzdC1jaGlsZHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnZmLXRpbWVsaW5le1xuICAgIC53czEwLWMtdGltZWxpbmUtc3RlcHNfX3RpdGxle1xuICAgICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIH1cbiAgICAud3MxMC1jLXRpbWVsaW5lLXN0ZXBzX19pdGVte1xuICAgICAgbWluLXdpZHRoOiAyMCU7XG4gICAgfVxuICB9XG4gIC52Zi10aWNrZXR7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDFyZW07XG4gICAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgICB9XG5cbiAgICAmX19mbG9hdGluZ3tcbiAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICB3aWR0aDogaW5oZXJpdDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgIHBhZGRpbmctdG9wOiA4cHg7XG4gICAgfVxuXG4gICAgJl9fb3BhY2l0eTB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICB9XG4gIC52Zi1zdGlja3kge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiIsIi52ZmVzLW1zLWNvbnRlbnQgLndzMTAtYy1jYXJkLXJhdGVfX3Byb2R1Y3QtdGl0bGUgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIlZvZGFmb25lUmVndWxhclwiLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWJhZGdlLS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGJhc2VsaW5lO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1iYWRnZTEge1xuICBtYXgtd2lkdGg6IDEyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWJhZGdlMiB7XG4gIG1heC13aWR0aDogMTMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWNiMDA7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFkZ2UzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0E4QjQwMDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy12ZWxvY2l0eS1zZWxlY3Rvcl9fY29udGFpbmVyIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtcG9zaXRpb24tcmVsYXRpdmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnMgbGk6Zmlyc3QtY2hpbGQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1icmVhZGNydW1icyBsaTpmaXJzdC1jaGlsZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnMgbGk6bGFzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOm50aC1jaGlsZCgybikgYTpiZWZvcmUge1xuICBib3JkZXItd2lkdGg6IC4wNjI1cmVtO1xuICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gIGJvcmRlci10b3A6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogLjc1cmVtO1xuICBoZWlnaHQ6IC43NXJlbTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEzNWRlZyk7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJyZWFkY3J1bWJzIGxpOm50aC1jaGlsZCgybikgYTpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYnJlYWRjcnVtYnNfX2xpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1icmVhZGNydW1ic19fbGluazphZnRlciB7XG4gICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICBib3JkZXItcmlnaHQ6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgYm9yZGVyLXRvcDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogLjc1cmVtO1xuICAgIGhlaWdodDogLjc1cmVtO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLndzMTAtYy1mb3JtX19yYWRpbzpjaGVja2VkICsgLndzMTAtYy1mb3JtX19sYWJlbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YzkyO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC53Zm1zX19sZWdhbCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1saW5rIHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRTYwMDAwO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zX19iYW5uZXItdGVybWluYWwge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvYmctYmFubmVyLW12LmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvYmctYmFubmVyLWRlc2t0b3AuanBnXCIpO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiAtMTUwcHg7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyX190ZXh0Y29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lcl9fdGV4dGNvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyX190ZXh0Y29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogOThweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogOThweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbGVzX19jb250YWluZXItLXRleHQge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsZXNfX2NvbnRhaW5lciAud3MxMC1jLWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbGVzX19jb250YWluZXIgLndzMTAtdGV4dC0tdW5kZXJsaW5lIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsZXMgaW1nIHtcbiAgbWF4LXdpZHRoOiA3NHB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1tb2JpbGVfX2FuaW1hdGlvbiB7XG4gIHBhZGRpbmc6IDMwcHggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1tb2JpbGVfX2FuaW1hdGlvbi0taW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtbW9iaWxlX19hcHBzIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWluLWhlaWdodDogMjkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtbW9iaWxlX19hcHBzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWF4LWhlaWdodDogMjgwcHg7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IC0xMDAlO1xuICBib3R0b206IDA7XG4gIGFuaW1hdGlvbjogc2xpZGUgMjBzIGxpbmVhciBpbmZpbml0ZTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3NlY3Rpb24tbW9iaWxlL2FwcGlsaW1pdGFkYS5wbmdcIikgMCAxMDAlO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2xpZGUge1xuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWwge1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsX19jb250ZW50IHtcbiAgb3JkZXI6IDI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2NvbnRlbnQge1xuICAgIG9yZGVyOiAxO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2ltZ2Rlc2t0b3Age1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbF9faW1nZGVza3RvcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2ltZ21vYmlsZSB7XG4gIG9yZGVyOiAxO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbF9faW1nbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXR2X19mbGV4ZGlyZWN0aW9uIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdHZfX2ZsZXhkaXJlY3Rpb24ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZmliZXJfX2ZsZXhkaXJlY3Rpb24ge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1maWJlcl9fZmxleGRpcmVjdGlvbiB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcldpZmlfX2ZsZXhkaXJlY3Rpb24ge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcldpZmlfX2ZsZXhkaXJlY3Rpb24ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcldpZmlfX2ltZyB7XG4gIG1heC13aWR0aDogMzAwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXN1cGVyV2lmaV9faW1nIHtcbiAgICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWZvcm0ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBwYWRkaW5nOiAwIDAgMCAwO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1mb3JtX19ib3gge1xuICB3aWR0aDogaW5pdGlhbDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZm9ybV9fYm94OmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGltZWxpbmUgLndzMTAtYy10aW1lbGluZS1zdGVwc19fdGl0bGUge1xuICBtYXgtd2lkdGg6IGluaXRpYWw7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRpbWVsaW5lIC53czEwLWMtdGltZWxpbmUtc3RlcHNfX2l0ZW0ge1xuICBtaW4td2lkdGg6IDIwJTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGlja2V0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10aWNrZXQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMXJlbTtcbiAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10aWNrZXRfX2Zsb2F0aW5nIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBwYWRkaW5nLXRvcDogOHB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10aWNrZXRfX29wYWNpdHkwIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtc3RpY2t5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1zdGlja3kge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1Z6TG1OemN5SXNJbk52ZFhKalpYTWlPbHNpYzNSNWJHVnpMbk5qYzNNaUxDSmZiV2xqY204dWMyTnpjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkJjWFZwSUhObElIQjFaV1JsYmlCcGJYQnZjblJoY2lCc2FXSnlaWExEcldGeklHVjRkR1Z5Ym1GelhHNHZMeUJsYWpvZ1FHbHRjRzl5ZENBbkwzUnZiMnh6TDJaMWJtTjBhVzl1Y3ljN1hHNWNia0JwYlhCdmNuUWdYQ0p0YVdOeWIxd2lPeUlzSWk4dklFTlRVeUJrWld3Z2JXbGpjbTl6YVhSbFhHNHVkbVpsY3kxdGN5MWpiMjUwWlc1MGUxeHVJQ0F1ZDNNeE1DMWpMV05oY21RdGNtRjBaVjlmY0hKdlpIVmpkQzEwYVhSc1pTQnpjR0Z1ZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsWnZaR0ZtYjI1bFVtVm5kV3hoY2x3aUxFaGxiSFpsZEdsallTeEJjbWxoYkN4ellXNXpMWE5sY21sbU8xeHVJQ0I5WEc0Z0lDNTJabTF6TFdKaFpHZGxMUzFqYjI1MFlXbHVaWEo3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZZbUZ6Wld4cGJtVTdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZabXhsZUMxemRHRnlkRHRjYmlBZ2ZWeHVJQ0F1ZG1adGN5MWlZV1JuWlRGN1hHNGdJQ0FnYldGNExYZHBaSFJvT2pFeU1IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2TVRWd2VEdGNiaUFnZlZ4dUlDQXVkbVp0Y3kxaVlXUm5aVEo3WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PakV6TUhCNE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZNVFZ3ZUR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1WallqQXdPMXh1SUNCOVhHNGdJQzUyWm0xekxXSmhaR2RsTTN0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUVRoQ05EQXdPMXh1SUNCOVhHNGdJQzUyWm0xekxYWmxiRzlqYVhSNUxYTmxiR1ZqZEc5eVgxOWpiMjUwWVdsdVpYSjdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZNekJ3ZUR0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2pFd2NIZzdYRzRnSUgxY2JpQWdMblptYlhNdGNHOXphWFJwYjI0dGNtVnNZWFJwZG1WN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjlYRzRnSUM4dklFSnlaV0ZrWTNKMWJXSnpYRzRnSUM1MlppMWljbVZoWkdOeWRXMWljM3RjYmlBZ0lDQW1JR3hwSUh0Y2JpQWdJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1Y2JpQWdJQ0FnSUNZNlptbHljM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwdWRHZ3RZMmhwYkdRb01tNHBJSHRjYmlBZ0lDQWdJQ0FnSmlCaGUxeHVJQ0FnSUNBZ0lDQWdJQ1k2WW1WbWIzSmxlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhkcFpIUm9PaUF1TURZeU5YSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeWFXZG9kRG9nTGpBMk1qVnlaVzBnYzI5c2FXUWdJek16TXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SUM0d05qSTFjbVZ0SUhOdmJHbGtJQ016TXpNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUM0M05YSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtDMHhNelZrWldjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZiR2x1YXlCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLWHRjYmlBZ0lDQWdJQ0FnSmpwaFpuUmxjbnRjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZDJsa2RHZzZJQzR3TmpJMWNtVnRPMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dMakEyTWpWeVpXMGdjMjlzYVdRZ0l6TXpNenRjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXVNRFl5TlhKbGJTQnpiMnhwWkNBak16TXpPMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BPMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmlZWE5sYkdsdVpUdGNiaUFnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUgxY2JseHVJQ0I5WEc0Z0lDOHZJR05zWVhObElHZGxic09wY21sallTQmhjbkpsWjJ4dklISmhaR2x2SUdKMWRIUnZibk5jYmx4dUlDQXVkM014TUMxakxXWnZjbTFmWDNKaFpHbHZPbU5vWldOclpXUXJMbmR6TVRBdFl5MW1iM0p0WDE5c1lXSmxiRG82WVdaMFpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNRGRqT1RJN1hHNGdJSDFjYmlBZ0xuZG1iWE5mWDJ4bFoyRnNlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2JpQWdmVnh1SUNBdWRtWnRjeTFzYVc1cmUxeHVJQ0FnSUdOdmJHOXlPaU13TURBd01EQTdYRzRnSUNBZ0pqcG9iM1psY250Y2JpQWdJQ0FnSUdOdmJHOXlPaU5GTmpBd01EQTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDOHZZbUZ1Ym1WeUlIUmxjbTFwYm1Gc1hHNGdJQzUyWm0xelgxOWlZVzV1WlhJdGRHVnliV2x1WVd4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnZlZ4dVhHNGdJQzh2SUdOc1lYTmxJR2RsYnNPcGNtbGpZVnh1WEc0Z0lDNTJaaTFpWVc1dVpYSjdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1TDJsdFp5OWlZVzV1WlhJdlltY3RZbUZ1Ym1WeUxXMTJMbXB3WjF3aUtUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmJuUmhhVzQ3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUxpNHZhVzFuTDJKaGJtNWxjaTlpWnkxaVlXNXVaWEl0WkdWemEzUnZjQzVxY0dkY0lpazdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV0YwZEdGamFHMWxiblE2SUdacGVHVmtPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiaTE1T2lBdE1UVXdjSGc3WEc0Z0lDQWdmVnh1SUNBZ0lDWmZYM1JsZUhSamIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREl3Y0hnN1hHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEVXdjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURrNGNIZzdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTVPSEI0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xuWm1MWFJsY20xcGJtRnNaWE43WEc0Z0lDQWdKbDlmWTI5dWRHRnBibVZ5ZTF4dUlDQWdJQ0FnSmkwdGRHVjRkSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5IQjRPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMbmR6TVRBdFl5MWlkWFIwYjI1N1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMbmR6TVRBdGRHVjRkQzB0ZFc1a1pYSnNhVzVsZTF4dUlDQWdJQ0FnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBM05IQjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNWNiaUFnTG5abUxXMXZZbWxzWlh0Y2JpQWdJQ0FtWDE5aGJtbHRZWFJwYjI1N1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBek1IQjRJREE3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FtTFMxcGJXZDdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNRHRjYmlBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SUdGMWRHODdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyRndjSE43WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lDQWdiV2x1TFdobGFXZG9kRG9nTWprd2NIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTWpnd2NIZzdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzB4TURBbE8xeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nYzJ4cFpHVWdNakJ6SUd4cGJtVmhjaUJwYm1acGJtbDBaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lMaTR2YVcxbkwzTmxZM1JwYjI0dGJXOWlhV3hsTDJGd2NHbHNhVzFwZEdGa1lTNXdibWRjSWlrZ01DQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2MyeHBaR1VnZTF4dUlDQWdJQ0FnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29MVFV3SlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEdWeWJXbHVZV3dnZTF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEWndlRHRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyTnZiblJsYm5RZ2UxeHVJQ0FnSUNBZ2IzSmtaWEk2SURJN1hHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYkdWbWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw5ZmFXMW5aR1Z6YTNSdmNDQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1YMTlwYldkdGIySnBiR1VnZTF4dUlDQWdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEhaN1hHNGdJQ0FnSmw5ZlpteGxlR1JwY21WamRHbHZibnRjYmlBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNsN1hHNGdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptTFdacFltVnllMXh1SUNBZ0lDWmZYMlpzWlhoa2FYSmxZM1JwYjI1N1hHNGdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMXpkWEJsY2xkcFptbDdYRzRnSUNBZ0psOWZabXhsZUdScGNtVmpkR2x2Ym50Y2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDbDdYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2N0Y21WMlpYSnpaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0psOWZhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05EVXdjSGc3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWIzSnRlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem93SURBZ01DQXdPMXh1SUNBZ0lDWmZYMkp2ZUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1MWFJwYldWc2FXNWxlMXh1SUNBZ0lDNTNjekV3TFdNdGRHbHRaV3hwYm1VdGMzUmxjSE5mWDNScGRHeGxlMXh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lIMWNiaUFnSUNBdWQzTXhNQzFqTFhScGJXVnNhVzVsTFhOMFpYQnpYMTlwZEdWdGUxeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXlNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxMGFXTnJaWFI3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklERnlaVzA3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01UWndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1YMTltYkc5aGRHbHVaM3RjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ0lDQjNhV1IwYURvZ2FXNW9aWEpwZER0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTRjSGc3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKbDlmYjNCaFkybDBlVEI3WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJSDFjYmx4dUlDQjlYRzRnSUM1MlppMXpkR2xqYTNrZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXhPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVU5EUVN4QlFVTkZMR2RDUVVSakxFTkJRMlFzWjBOQlFXZERMRU5CUVVNc1NVRkJTU3hEUVVGQk8wVkJRMjVETEZkQlFWY3NSVUZCUlN3MFEwRkJORU03UTBGRE1VUTdPMEZCU0Vnc1FVRkpSU3huUWtGS1l5eERRVWxrTEhOQ1FVRnpRaXhEUVVGQk8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1pVRkJaU3hGUVVGRExGRkJRVkU3UlVGRGVFSXNWMEZCVnl4RlFVRkRMRlZCUVZVN1EwRkRka0k3TzBGQlVrZ3NRVUZUUlN4blFrRlVZeXhEUVZOa0xGbEJRVmtzUTBGQlFUdEZRVU5XTEZOQlFWTXNSVUZCUXl4TFFVRkxPMFZCUTJZc1lVRkJZU3hGUVVGRExFbEJRVWs3UTBGRGJrSTdPMEZCV2tnc1FVRmhSU3huUWtGaVl5eERRV0ZrTEZsQlFWa3NRMEZCUVR0RlFVTldMRk5CUVZNc1JVRkJReXhMUVVGTE8wVkJRMllzWVVGQllTeEZRVUZETEVsQlFVazdSVUZEYkVJc1owSkJRV2RDTEVWQlFVVXNUMEZCVHp0RFFVTXhRanM3UVVGcVFrZ3NRVUZyUWtVc1owSkJiRUpqTEVOQmEwSmtMRmxCUVZrc1EwRkJRVHRGUVVOV0xHZENRVUZuUWl4RlFVRkZMRTlCUVU4N1EwRkRNVUk3TzBGQmNFSklMRUZCY1VKRkxHZENRWEpDWXl4RFFYRkNaQ3hyUTBGQmEwTXNRMEZCUVR0RlFVTm9ReXhYUVVGWExFVkJRVU1zU1VGQlNUdEZRVU5vUWl4VlFVRlZMRVZCUVVNc1NVRkJTVHREUVVOb1FqczdRVUY0UWtnc1FVRjVRa1VzWjBKQmVrSmpMRU5CZVVKa0xIVkNRVUYxUWl4RFFVRkJPMFZCUTNKQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBOQlEyNUNPenRCUVROQ1NDeEJRVGhDU1N4blFrRTVRbGtzUTBFMlFtUXNaVUZCWlN4RFFVTllMRVZCUVVVc1EwRkJRenRGUVVOSUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQmRVTnFRanM3UVVGMFJVd3NRVUZwUTAwc1owSkJha05WTEVOQk5rSmtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJSMFFzV1VGQldTeERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkpaRHM3UVVGSVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJia016UXl4QlFXbERUU3huUWtGcVExVXNRMEUyUW1Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGSFJDeFpRVUZaTEVOQlFVTTdTVUZIVml4UFFVRlBMRVZCUVVVc1MwRkJTenRIUVVWcVFqczdPMEZCZEVOUUxFRkJkME5OTEdkQ1FYaERWU3hEUVRaQ1pDeGxRVUZsTEVOQlExZ3NSVUZCUlN4QlFWVkVMRmRCUVZjc1EwRkJRenRGUVVOWUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlNXUTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFURkRNME1zUVVGM1EwMHNaMEpCZUVOVkxFTkJOa0prTEdWQlFXVXNRMEZEV0N4RlFVRkZMRUZCVlVRc1YwRkJWeXhEUVVGRE8wbEJSMVFzVDBGQlR5eEZRVUZGTEV0QlFVczdSMEZGYWtJN096dEJRVGREVUN4QlFXbEVWU3huUWtGcVJFMHNRMEUyUW1Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGcFFrUXNWVUZCVnl4RFFVRkJMRVZCUVVVc1JVRkRWaXhEUVVGRExFRkJRMEVzVDBGQlR5eERRVUZCTzBWQlEwNHNXVUZCV1N4RlFVRkZMRkZCUVZFN1JVRkRkRUlzV1VGQldTeEZRVUZGTEcxQ1FVRnRRanRGUVVOcVF5eFZRVUZWTEVWQlFVVXNiVUpCUVcxQ08wVkJReTlDTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1MwRkJTeXhGUVVGRkxFMUJRVTA3UlVGRFlpeE5RVUZOTEVWQlFVVXNUVUZCVFR0RlFVTmtMRk5CUVZNc1JVRkJSU3hsUVVGbE8wVkJRekZDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNZMEZCWXl4RlFVRkZMRkZCUVZFN1JVRkRlRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZOYmtJN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsRUwwTXNRVUZwUkZVc1owSkJha1JOTEVOQk5rSmtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJhVUpFTEZWQlFWY3NRMEZCUVN4RlFVRkZMRVZCUTFZc1EwRkJReXhCUVVOQkxFOUJRVThzUTBGQlFUdEpRV05LTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUjJoQ096czdRVUZzUlZnc1FVRjNSVWtzWjBKQmVFVlpMRU5CZDBWWUxIRkNRVUZOTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGZEJRVmNzUlVGQlJTeE5RVUZOTzBOQmFVSndRanM3UVVGb1FrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVE5GZWtNc1FVRTBSVkVzWjBKQk5VVlJMRU5CZDBWWUxIRkNRVUZOTEVGQlNVWXNUVUZCVFN4RFFVRkJPMGxCUTB3c1dVRkJXU3hGUVVGRkxGRkJRVkU3U1VGRGRFSXNXVUZCV1N4RlFVRkZMRzFDUVVGdFFqdEpRVU5xUXl4VlFVRlZMRVZCUVVVc2JVSkJRVzFDTzBsQlF5OUNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wbEJRMlFzUzBGQlN5eEZRVUZGTEUxQlFVMDdTVUZEWWl4TlFVRk5MRVZCUVVVc1RVRkJUVHRKUVVOa0xGTkJRVk1zUlVGQlJTeGhRVUZoTzBsQlEzaENMRTlCUVU4c1JVRkJSU3hGUVVGRk8wbEJRMWdzVDBGQlR5eEZRVUZGTEZsQlFWazdTVUZEY2tJc1kwRkJZeXhGUVVGRkxGRkJRVkU3U1VGRGVFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1IwRkRia0k3T3p0QlFYaEdWQ3hCUVdkSFJTeG5Ra0ZvUjJNc1EwRm5SMlFzYlVKQlFXMUNMRUZCUVVFc1VVRkJVU3hIUVVGRExHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOeVJDeG5Ra0ZCWjBJc1JVRkJSU3hQUVVGUE8wTkJRekZDT3p0QlFXeEhTQ3hCUVcxSFJTeG5Ra0Z1UjJNc1EwRnRSMlFzV1VGQldTeERRVUZCTzBWQlExWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQmNrZElMRUZCYzBkRkxHZENRWFJIWXl4RFFYTkhaQ3hWUVVGVkxFTkJRVUU3UlVGRFVpeExRVUZMTEVWQlFVTXNUMEZCVHp0RFFVbGtPenRCUVROSFNDeEJRWGRIU1N4blFrRjRSMWtzUTBGelIyUXNWVUZCVlN4QlFVVlFMRTFCUVUwc1EwRkJRVHRGUVVOTUxFdEJRVXNzUlVGQlF5eFBRVUZQTzBOQlEyUTdPMEZCTVVkTUxFRkJOa2RGTEdkQ1FUZEhZeXhEUVRaSFpDeHpRa0ZCYzBJc1EwRkJRVHRGUVVOd1FpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVTmtPenRCUVM5SFNDeEJRVzFJUlN4blFrRnVTR01zUTBGdFNHUXNWVUZCVlN4RFFVRkJPMFZCUTFJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNaMEpCUVdkQ0xFVkJRVVVzY1VOQlFYRkRPMFZCUTNaRUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMR2xDUVVGcFFpeEZRVUZGTEZOQlFWTTdRMEZuUWpkQ096dEJRV1pETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNFNIWkRMRUZCYlVoRkxHZENRVzVJWXl4RFFXMUlaQ3hWUVVGVkxFTkJRVUU3U1VGTlRpeG5Ra0ZCWjBJc1JVRkJSU3d3UTBGQk1FTTdTVUZETlVRc2NVSkJRWEZDTEVWQlFVVXNTMEZCU3p0SlFVTTFRaXh4UWtGQmNVSXNSVUZCUlN4TlFVRk5PMGRCV1doRE96czdRVUYyU1Vnc1FVRTJTRWtzWjBKQk4waFpMRU5CTmtoWUxIbENRVUZsTEVOQlFVTTdSVUZEWml4WFFVRlhMRVZCUVVVc1NVRkJTVHREUVZGc1FqczdRVUZRUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQkwwZ3pReXhCUVRaSVNTeG5Ra0UzU0Zrc1EwRTJTRmdzZVVKQlFXVXNRMEZCUXp0SlFVZFlMRmRCUVZjc1JVRkJSU3hKUVVGSk8wZEJUWFJDT3pzN1FVRktSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYkVrelF5eEJRVFpJU1N4blFrRTNTRmtzUTBFMlNGZ3NlVUpCUVdVc1EwRkJRenRKUVUxaUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBsQlEycENMR05CUVdNc1JVRkJSU3hKUVVGSk8wZEJSWFpDT3pzN1FVRjBTVXdzUVVFeVNVMHNaMEpCTTBsVkxFTkJNa2xVTEN0Q1FVRk5MRU5CUVVFN1JVRkRUQ3hUUVVGVExFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVRTNTVkFzUVVFNFNVMHNaMEpCT1VsVkxFTkJNRWxZTEhsQ1FVRlhMRU5CU1ZZc1kwRkJZeXhEUVVGQk8wVkJRMW9zUzBGQlN5eEZRVUZGTEVsQlFVazdRMEZEV2pzN1FVRm9TbEFzUVVGcFNrMHNaMEpCYWtwVkxFTkJNRWxZTEhsQ1FVRlhMRU5CVDFZc2NVSkJRWEZDTEVOQlFVRTdSVUZEYmtJc1pVRkJaU3hGUVVGRkxGTkJRVk03UTBGRE0wSTdPMEZCYmtwUUxFRkJjVXBKTEdkQ1FYSktXU3hEUVhsSlpDeGpRVUZqTEVOQldWb3NSMEZCUnl4RFFVRkJPMFZCUTBRc1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCZGtwTUxFRkJORXBKTEdkQ1FUVktXU3hEUVRSS1dDeHhRa0ZCVnl4RFFVRkJPMFZCUTFZc1QwRkJUeXhGUVVGRkxFMUJRVTA3UlVGRFppeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFWTnVRanM3UVVGMlMwd3NRVUVyU2swc1owSkJMMHBWTEVOQkswcFVMREJDUVVGTExFTkJRVUU3UlVGRFNpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzUTBGQlF6dEZRVU5PTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTFCUVUwc1JVRkJSU3hKUVVGSk8wTkJRMkk3TzBGQmRFdFFMRUZCZDB0SkxHZENRWGhMV1N4RFFYZExXQ3huUWtGQlRTeERRVUZCTzBWQlEwd3NVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdSVUZEYWtJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhYUVVGWExFVkJRVVVzVFVGQlRUdEZRVU51UWl4VlFVRlZMRVZCUVVVc1ZVRkJWVHREUVc5Q2RrSTdPMEZCYkUxTUxFRkJLMHROTEdkQ1FTOUxWU3hEUVhkTFdDeG5Ra0ZCVFN4QlFVOUtMRTlCUVU4c1EwRkJRenRGUVVOUUxFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdSVUZEYWtJc1IwRkJSeXhGUVVGRkxFbEJRVWs3UlVGRFZDeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRXRCUVVzc1JVRkJSU3hMUVVGTE8wVkJRMW9zVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4VFFVRlRMRVZCUVVVc2VVSkJRWGxDTzBWQlEzQkRMR1ZCUVdVc1JVRkJSU3hMUVVGTE8wVkJRM1JDTEZWQlFWVXNSVUZCUlN3MlEwRkJOa01zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1R0RFFVTnFSVHM3UVVGRlJDeHJRa0ZCYTBJc1EwRkJiRUlzUzBGQmEwSTdSVUZEYUVJc1NVRkJTVHRKUVVOR0xGTkJRVk1zUlVGQlJTeG5Ra0ZCWjBJN096czdRVUU1VEhKRExFRkJiMDFGTEdkQ1FYQk5ZeXhEUVc5TlpDeFpRVUZaTEVOQlFVTTdSVUZEV0N4aFFVRmhMRVZCUVVVc1IwRkJSenRGUVVOc1FpeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhqUVVGakxFVkJRVVVzVFVGQlRUdERRWGxDZGtJN08wRkJlRUpETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNFRYWkRMRUZCYjAxRkxHZENRWEJOWXl4RFFXOU5aQ3haUVVGWkxFTkJRVU03U1VGTFZDeGpRVUZqTEVWQlFVVXNSMEZCUnp0SFFYVkNkRUk3T3p0QlFXaFBTQ3hCUVRKTlNTeG5Ra0V6VFZrc1EwRXlUVmdzY1VKQlFWTXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hEUVVGRE8wVkJRMUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdRMEZMYmtJN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsTmVrTXNRVUV5VFVrc1owSkJNMDFaTEVOQk1rMVlMSEZDUVVGVExFTkJRVU03U1VGSlVDeExRVUZMTEVWQlFVVXNRMEZCUXp0SlFVTlNMRlZCUVZVc1JVRkJSU3hKUVVGSk8wZEJSVzVDT3pzN1FVRnNUa3dzUVVGdFRra3NaMEpCYms1WkxFTkJiVTVZTEhkQ1FVRlpMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzU1VGQlNUdERRVXRrT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZ5VG5wRExFRkJiVTVKTEdkQ1FXNU9XU3hEUVcxT1dDeDNRa0ZCV1N4RFFVRkRPMGxCUjFZc1QwRkJUeXhGUVVGRkxFdEJRVXM3U1VGRFpDeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVVllPenM3UVVGNlRrd3NRVUV3VGtrc1owSkJNVTVaTEVOQk1FNVlMSFZDUVVGWExFTkJRVU03UlVGRFdDeExRVUZMTEVWQlFVVXNRMEZCUXp0RFFVbFVPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRTFUbnBETEVGQk1FNUpMR2RDUVRGT1dTeERRVEJPV0N4MVFrRkJWeXhEUVVGRE8wbEJSMVFzVDBGQlR5eEZRVUZGTEVsQlFVazdSMEZGYUVJN096dEJRUzlPVEN4QlFXdFBTU3huUWtGc1Qxa3NRMEZyVDFnc2NVSkJRV1VzUTBGQlFUdEZRVU5rTEdOQlFXTXNSVUZCUlN4TlFVRk5PME5CUzNaQ096dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGd1QzcERMRUZCYTA5SkxHZENRV3hQV1N4RFFXdFBXQ3h4UWtGQlpTeERRVUZCTzBsQlIxb3NZMEZCWXl4RlFVRkZMRWRCUVVjN1IwRkhkRUk3T3p0QlFYaFBUQ3hCUVRKUFNTeG5Ra0V6VDFrc1EwRXlUMWdzZDBKQlFXVXNRMEZCUVR0RlFVTmtMR05CUVdNc1JVRkJSU3hOUVVGTk8wTkJTM1pDT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUUzVDNwRExFRkJNazlKTEdkQ1FUTlBXU3hEUVRKUFdDeDNRa0ZCWlN4RFFVRkJPMGxCUjFvc1kwRkJZeXhGUVVGRkxFZEJRVWM3UjBGSGRFSTdPenRCUVdwUVRDeEJRVzlRU1N4blFrRndVRmtzUTBGdlVGZ3NORUpCUVdVc1EwRkJRVHRGUVVOa0xHTkJRV01zUlVGQlJTeE5RVUZOTzBOQlNYWkNPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjBVSHBETEVGQmIxQkpMR2RDUVhCUVdTeERRVzlRV0N3MFFrRkJaU3hEUVVGQk8wbEJSMW9zWTBGQll5eEZRVUZGTEZkQlFWYzdSMEZGT1VJN096dEJRWHBRVEN4QlFUQlFTU3huUWtFeFVGa3NRMEV3VUZnc2EwSkJRVXNzUTBGQlFUdEZRVU5LTEZOQlFWTXNSVUZCUlN4TFFVRkxPME5CU1dwQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFMVVIcERMRUZCTUZCSkxHZENRVEZRV1N4RFFUQlFXQ3hyUWtGQlN5eERRVUZCTzBsQlIwWXNVMEZCVXl4RlFVRkZMRXRCUVVzN1IwRkZia0k3T3p0QlFTOVFUQ3hCUVdsUlJTeG5Ra0ZxVVdNc1EwRnBVV1FzVVVGQlVTeERRVUZCTzBWQlEwNHNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzVDBGQlR5eEZRVUZETEU5QlFVODdRMEZQYUVJN08wRkJNVkZJTEVGQmIxRkpMR2RDUVhCUldTeERRVzlSV0N4aFFVRkxMRU5CUVVFN1JVRkRTaXhMUVVGTExFVkJRVVVzVDBGQlR6dERRVWxtT3p0QlFYcFJUQ3hCUVhOUlRTeG5Ra0YwVVZVc1EwRnZVVmdzWVVGQlN5eEJRVVZJTEZsQlFWa3NRMEZCUVR0RlFVTllMR0ZCUVdFc1JVRkJSU3hKUVVGSk8wTkJRM0JDT3p0QlFYaFJVQ3hCUVRSUlNTeG5Ra0UxVVZrc1EwRXlVV1FzV1VGQldTeERRVU5XTERaQ1FVRTJRaXhEUVVGQk8wVkJRek5DTEZOQlFWTXNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVGxSVEN4QlFTdFJTU3huUWtFdlVWa3NRMEV5VVdRc1dVRkJXU3hEUVVsV0xEUkNRVUUwUWl4RFFVRkJPMFZCUXpGQ0xGTkJRVk1zUlVGQlJTeEhRVUZITzBOQlEyWTdPMEZCYWxKTUxFRkJiVkpGTEdkQ1FXNVNZeXhEUVcxU1pDeFZRVUZWTEVOQlFVRTdSVUZEVWl4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVc5Q2JrSTdPMEZCYkVKRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjBVblpETEVGQmJWSkZMR2RDUVc1U1l5eERRVzFTWkN4VlFVRlZMRU5CUVVFN1NVRkpUaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEpRVU5zUWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRKUVVOWUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBkQlpYQkNPenM3UVVGNFUwZ3NRVUUwVWtrc1owSkJOVkpaTEVOQk5GSllMRzlDUVVGVkxFTkJRVUU3UlVGRFZDeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhMUVVGTExFVkJRVVVzVDBGQlR6dEZRVU5rTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRGFFSXNWMEZCVnl4RlFVRkZMRWRCUVVjN1EwRkRha0k3TzBGQmJGTk1MRUZCYjFOSkxHZENRWEJUV1N4RFFXOVRXQ3h2UWtGQlZTeERRVUZCTzBWQlExUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGMFUwd3NRVUY1VTBVc1owSkJlbE5qTEVOQmVWTmtMRlZCUVZVc1EwRkJRenRGUVVOVUxGRkJRVkVzUlVGQlJTeExRVUZMTzBWQlEyWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CU1ZvN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsVGRrTXNRVUY1VTBVc1owSkJlbE5qTEVOQmVWTmtMRlZCUVZVc1EwRkJRenRKUVUxUUxFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlJXaENJbjA9ICovXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1Z6TG1OemN5SXNJbk52ZFhKalpYTWlPbHNpYzNSNWJHVnpMbk5qYzNNaUxDSmZiV2xqY204dWMyTnpjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkJjWFZwSUhObElIQjFaV1JsYmlCcGJYQnZjblJoY2lCc2FXSnlaWExEcldGeklHVjRkR1Z5Ym1GelhHNHZMeUJsYWpvZ1FHbHRjRzl5ZENBbkwzUnZiMnh6TDJaMWJtTjBhVzl1Y3ljN1hHNWNia0JwYlhCdmNuUWdYQ0p0YVdOeWIxd2lPeUlzSWk4dklFTlRVeUJrWld3Z2JXbGpjbTl6YVhSbFhHNHVkbVpsY3kxdGN5MWpiMjUwWlc1MGUxeHVJQ0F1ZDNNeE1DMWpMV05oY21RdGNtRjBaVjlmY0hKdlpIVmpkQzEwYVhSc1pTQnpjR0Z1ZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsWnZaR0ZtYjI1bFVtVm5kV3hoY2x3aUxFaGxiSFpsZEdsallTeEJjbWxoYkN4ellXNXpMWE5sY21sbU8xeHVJQ0I5WEc0Z0lDNTJabTF6TFdKaFpHZGxMUzFqYjI1MFlXbHVaWEo3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZZbUZ6Wld4cGJtVTdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZabXhsZUMxemRHRnlkRHRjYmlBZ2ZWeHVJQ0F1ZG1adGN5MWlZV1JuWlRGN1hHNGdJQ0FnYldGNExYZHBaSFJvT2pFeU1IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2TVRWd2VEdGNiaUFnZlZ4dUlDQXVkbVp0Y3kxaVlXUm5aVEo3WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PakV6TUhCNE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZNVFZ3ZUR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1WallqQXdPMXh1SUNCOVhHNGdJQzUyWm0xekxXSmhaR2RsTTN0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUVRoQ05EQXdPMXh1SUNCOVhHNGdJQzUyWm0xekxYWmxiRzlqYVhSNUxYTmxiR1ZqZEc5eVgxOWpiMjUwWVdsdVpYSjdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZNekJ3ZUR0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2pFd2NIZzdYRzRnSUgxY2JpQWdMblptYlhNdGNHOXphWFJwYjI0dGNtVnNZWFJwZG1WN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjlYRzRnSUM4dklFSnlaV0ZrWTNKMWJXSnpYRzRnSUM1MlppMWljbVZoWkdOeWRXMWljM3RjYmlBZ0lDQW1JR3hwSUh0Y2JpQWdJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1Y2JpQWdJQ0FnSUNZNlptbHljM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwdWRHZ3RZMmhwYkdRb01tNHBJSHRjYmlBZ0lDQWdJQ0FnSmlCaGUxeHVJQ0FnSUNBZ0lDQWdJQ1k2WW1WbWIzSmxlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhkcFpIUm9PaUF1TURZeU5YSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeWFXZG9kRG9nTGpBMk1qVnlaVzBnYzI5c2FXUWdJek16TXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SUM0d05qSTFjbVZ0SUhOdmJHbGtJQ016TXpNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUM0M05YSmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtDMHhNelZrWldjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZiR2x1YXlCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLWHRjYmlBZ0lDQWdJQ0FnSmpwaFpuUmxjbnRjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZDJsa2RHZzZJQzR3TmpJMWNtVnRPMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dMakEyTWpWeVpXMGdjMjlzYVdRZ0l6TXpNenRjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXVNRFl5TlhKbGJTQnpiMnhwWkNBak16TXpPMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF1TnpWeVpXMDdYRzRnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BPMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmlZWE5sYkdsdVpUdGNiaUFnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUgxY2JseHVJQ0I5WEc0Z0lDOHZJR05zWVhObElHZGxic09wY21sallTQmhjbkpsWjJ4dklISmhaR2x2SUdKMWRIUnZibk5jYmx4dUlDQXVkM014TUMxakxXWnZjbTFmWDNKaFpHbHZPbU5vWldOclpXUXJMbmR6TVRBdFl5MW1iM0p0WDE5c1lXSmxiRG82WVdaMFpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNRGRqT1RJN1hHNGdJSDFjYmlBZ0xuZG1iWE5mWDJ4bFoyRnNlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2JpQWdmVnh1SUNBdWRtWnRjeTFzYVc1cmUxeHVJQ0FnSUdOdmJHOXlPaU13TURBd01EQTdYRzRnSUNBZ0pqcG9iM1psY250Y2JpQWdJQ0FnSUdOdmJHOXlPaU5GTmpBd01EQTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDOHZZbUZ1Ym1WeUlIUmxjbTFwYm1Gc1hHNGdJQzUyWm0xelgxOWlZVzV1WlhJdGRHVnliV2x1WVd4N1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnZlZ4dVhHNGdJQzh2SUdOc1lYTmxJR2RsYnNPcGNtbGpZVnh1WEc0Z0lDNTJaaTFpWVc1dVpYSjdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1TDJsdFp5OWlZVzV1WlhJdlltY3RZbUZ1Ym1WeUxXMTJMbXB3WjF3aUtUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmJuUmhhVzQ3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmlBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDa2dlMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUxpNHZhVzFuTDJKaGJtNWxjaTlpWnkxaVlXNXVaWEl0WkdWemEzUnZjQzVxY0dkY0lpazdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV0YwZEdGamFHMWxiblE2SUdacGVHVmtPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiaTE1T2lBdE1UVXdjSGc3WEc0Z0lDQWdmVnh1SUNBZ0lDWmZYM1JsZUhSamIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREl3Y0hnN1hHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEVXdjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURrNGNIZzdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTVPSEI0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xuWm1MWFJsY20xcGJtRnNaWE43WEc0Z0lDQWdKbDlmWTI5dWRHRnBibVZ5ZTF4dUlDQWdJQ0FnSmkwdGRHVjRkSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE5IQjRPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMbmR6TVRBdFl5MWlkWFIwYjI1N1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMbmR6TVRBdGRHVjRkQzB0ZFc1a1pYSnNhVzVsZTF4dUlDQWdJQ0FnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBM05IQjRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNWNiaUFnTG5abUxXMXZZbWxzWlh0Y2JpQWdJQ0FtWDE5aGJtbHRZWFJwYjI1N1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBek1IQjRJREE3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FtTFMxcGJXZDdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNRHRjYmlBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SUdGMWRHODdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyRndjSE43WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lDQWdiV2x1TFdobGFXZG9kRG9nTWprd2NIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTWpnd2NIZzdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzB4TURBbE8xeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nYzJ4cFpHVWdNakJ6SUd4cGJtVmhjaUJwYm1acGJtbDBaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lMaTR2YVcxbkwzTmxZM1JwYjI0dGJXOWlhV3hsTDJGd2NHbHNhVzFwZEdGa1lTNXdibWRjSWlrZ01DQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2MyeHBaR1VnZTF4dUlDQWdJQ0FnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29MVFV3SlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEdWeWJXbHVZV3dnZTF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEWndlRHRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyTnZiblJsYm5RZ2UxeHVJQ0FnSUNBZ2IzSmtaWEk2SURJN1hHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYkdWbWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw5ZmFXMW5aR1Z6YTNSdmNDQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1YMTlwYldkdGIySnBiR1VnZTF4dUlDQWdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEhaN1hHNGdJQ0FnSmw5ZlpteGxlR1JwY21WamRHbHZibnRjYmlBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNsN1hHNGdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptTFdacFltVnllMXh1SUNBZ0lDWmZYMlpzWlhoa2FYSmxZM1JwYjI1N1hHNGdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMXpkWEJsY2xkcFptbDdYRzRnSUNBZ0psOWZabXhsZUdScGNtVmpkR2x2Ym50Y2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDbDdYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2N0Y21WMlpYSnpaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0psOWZhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05EVXdjSGc3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWIzSnRlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem93SURBZ01DQXdPMXh1SUNBZ0lDWmZYMkp2ZUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1MWFJwYldWc2FXNWxlMXh1SUNBZ0lDNTNjekV3TFdNdGRHbHRaV3hwYm1VdGMzUmxjSE5mWDNScGRHeGxlMXh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lIMWNiaUFnSUNBdWQzTXhNQzFqTFhScGJXVnNhVzVsTFhOMFpYQnpYMTlwZEdWdGUxeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXlNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxMGFXTnJaWFI3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklERnlaVzA3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01UWndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1YMTltYkc5aGRHbHVaM3RjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ0lDQjNhV1IwYURvZ2FXNW9aWEpwZER0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTRjSGc3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKbDlmYjNCaFkybDBlVEI3WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJSDFjYmx4dUlDQjlYRzRnSUM1MlppMXpkR2xqYTNrZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXhPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVU5EUVN4QlFVTkZMR2RDUVVSakxFTkJRMlFzWjBOQlFXZERMRU5CUVVNc1NVRkJTU3hEUVVGQk8wVkJRMjVETEZkQlFWY3NSVUZCUlN3MFEwRkJORU03UTBGRE1VUTdPMEZCU0Vnc1FVRkpSU3huUWtGS1l5eERRVWxrTEhOQ1FVRnpRaXhEUVVGQk8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1pVRkJaU3hGUVVGRExGRkJRVkU3UlVGRGVFSXNWMEZCVnl4RlFVRkRMRlZCUVZVN1EwRkRka0k3TzBGQlVrZ3NRVUZUUlN4blFrRlVZeXhEUVZOa0xGbEJRVmtzUTBGQlFUdEZRVU5XTEZOQlFWTXNSVUZCUXl4TFFVRkxPMFZCUTJZc1lVRkJZU3hGUVVGRExFbEJRVWs3UTBGRGJrSTdPMEZCV2tnc1FVRmhSU3huUWtGaVl5eERRV0ZrTEZsQlFWa3NRMEZCUVR0RlFVTldMRk5CUVZNc1JVRkJReXhMUVVGTE8wVkJRMllzWVVGQllTeEZRVUZETEVsQlFVazdSVUZEYkVJc1owSkJRV2RDTEVWQlFVVXNUMEZCVHp0RFFVTXhRanM3UVVGcVFrZ3NRVUZyUWtVc1owSkJiRUpqTEVOQmEwSmtMRmxCUVZrc1EwRkJRVHRGUVVOV0xHZENRVUZuUWl4RlFVRkZMRTlCUVU4N1EwRkRNVUk3TzBGQmNFSklMRUZCY1VKRkxHZENRWEpDWXl4RFFYRkNaQ3hyUTBGQmEwTXNRMEZCUVR0RlFVTm9ReXhYUVVGWExFVkJRVU1zU1VGQlNUdEZRVU5vUWl4VlFVRlZMRVZCUVVNc1NVRkJTVHREUVVOb1FqczdRVUY0UWtnc1FVRjVRa1VzWjBKQmVrSmpMRU5CZVVKa0xIVkNRVUYxUWl4RFFVRkJPMFZCUTNKQ0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBOQlEyNUNPenRCUVROQ1NDeEJRVGhDU1N4blFrRTVRbGtzUTBFMlFtUXNaVUZCWlN4RFFVTllMRVZCUVVVc1EwRkJRenRGUVVOSUxGVkJRVlVzUlVGQlJTeEpRVUZKTzBOQmRVTnFRanM3UVVGMFJVd3NRVUZwUTAwc1owSkJha05WTEVOQk5rSmtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJSMFFzV1VGQldTeERRVUZETzBWQlExb3NUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkpaRHM3UVVGSVF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hMUVVGTE8wVkJia016UXl4QlFXbERUU3huUWtGcVExVXNRMEUyUW1Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGSFJDeFpRVUZaTEVOQlFVTTdTVUZIVml4UFFVRlBMRVZCUVVVc1MwRkJTenRIUVVWcVFqczdPMEZCZEVOUUxFRkJkME5OTEdkQ1FYaERWU3hEUVRaQ1pDeGxRVUZsTEVOQlExZ3NSVUZCUlN4QlFWVkVMRmRCUVZjc1EwRkJRenRGUVVOWUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlNXUTdPMEZCU0VNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFURkRNME1zUVVGM1EwMHNaMEpCZUVOVkxFTkJOa0prTEdWQlFXVXNRMEZEV0N4RlFVRkZMRUZCVlVRc1YwRkJWeXhEUVVGRE8wbEJSMVFzVDBGQlR5eEZRVUZGTEV0QlFVczdSMEZGYWtJN096dEJRVGREVUN4QlFXbEVWU3huUWtGcVJFMHNRMEUyUW1Rc1pVRkJaU3hEUVVOWUxFVkJRVVVzUVVGcFFrUXNWVUZCVnl4RFFVRkJMRVZCUVVVc1JVRkRWaXhEUVVGRExFRkJRMEVzVDBGQlR5eERRVUZCTzBWQlEwNHNXVUZCV1N4RlFVRkZMRkZCUVZFN1JVRkRkRUlzV1VGQldTeEZRVUZGTEcxQ1FVRnRRanRGUVVOcVF5eFZRVUZWTEVWQlFVVXNiVUpCUVcxQ08wVkJReTlDTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1MwRkJTeXhGUVVGRkxFMUJRVTA3UlVGRFlpeE5RVUZOTEVWQlFVVXNUVUZCVFR0RlFVTmtMRk5CUVZNc1JVRkJSU3hsUVVGbE8wVkJRekZDTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1QwRkJUeXhGUVVGRkxGbEJRVms3UlVGRGNrSXNZMEZCWXl4RlFVRkZMRkZCUVZFN1JVRkRlRUlzVVVGQlVTeEZRVUZGTEZGQlFWRTdRMEZOYmtJN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsRUwwTXNRVUZwUkZVc1owSkJha1JOTEVOQk5rSmtMR1ZCUVdVc1EwRkRXQ3hGUVVGRkxFRkJhVUpFTEZWQlFWY3NRMEZCUVN4RlFVRkZMRVZCUTFZc1EwRkJReXhCUVVOQkxFOUJRVThzUTBGQlFUdEpRV05LTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUjJoQ096czdRVUZzUlZnc1FVRjNSVWtzWjBKQmVFVlpMRU5CZDBWWUxIRkNRVUZOTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxGZEJRVmNzUlVGQlJTeE5RVUZOTzBOQmFVSndRanM3UVVGb1FrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVE5GZWtNc1FVRTBSVkVzWjBKQk5VVlJMRU5CZDBWWUxIRkNRVUZOTEVGQlNVWXNUVUZCVFN4RFFVRkJPMGxCUTB3c1dVRkJXU3hGUVVGRkxGRkJRVkU3U1VGRGRFSXNXVUZCV1N4RlFVRkZMRzFDUVVGdFFqdEpRVU5xUXl4VlFVRlZMRVZCUVVVc2JVSkJRVzFDTzBsQlF5OUNMRTlCUVU4c1JVRkJSU3hMUVVGTE8wbEJRMlFzUzBGQlN5eEZRVUZGTEUxQlFVMDdTVUZEWWl4TlFVRk5MRVZCUVVVc1RVRkJUVHRKUVVOa0xGTkJRVk1zUlVGQlJTeGhRVUZoTzBsQlEzaENMRTlCUVU4c1JVRkJSU3hGUVVGRk8wbEJRMWdzVDBGQlR5eEZRVUZGTEZsQlFWazdTVUZEY2tJc1kwRkJZeXhGUVVGRkxGRkJRVkU3U1VGRGVFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1IwRkRia0k3T3p0QlFYaEdWQ3hCUVdkSFJTeG5Ra0ZvUjJNc1EwRm5SMlFzYlVKQlFXMUNMRUZCUVVFc1VVRkJVU3hIUVVGRExHMUNRVUZ0UWl4QlFVRkJMRTlCUVU4c1EwRkJRenRGUVVOeVJDeG5Ra0ZCWjBJc1JVRkJSU3hQUVVGUE8wTkJRekZDT3p0QlFXeEhTQ3hCUVcxSFJTeG5Ra0Z1UjJNc1EwRnRSMlFzV1VGQldTeERRVUZCTzBWQlExWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQmNrZElMRUZCYzBkRkxHZENRWFJIWXl4RFFYTkhaQ3hWUVVGVkxFTkJRVUU3UlVGRFVpeExRVUZMTEVWQlFVTXNUMEZCVHp0RFFVbGtPenRCUVROSFNDeEJRWGRIU1N4blFrRjRSMWtzUTBGelIyUXNWVUZCVlN4QlFVVlFMRTFCUVUwc1EwRkJRVHRGUVVOTUxFdEJRVXNzUlVGQlF5eFBRVUZQTzBOQlEyUTdPMEZCTVVkTUxFRkJOa2RGTEdkQ1FUZEhZeXhEUVRaSFpDeHpRa0ZCYzBJc1EwRkJRVHRGUVVOd1FpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVTmtPenRCUVM5SFNDeEJRVzFJUlN4blFrRnVTR01zUTBGdFNHUXNWVUZCVlN4RFFVRkJPMFZCUTFJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNaMEpCUVdkQ0xFVkJRVVVzY1VOQlFYRkRPMFZCUTNaRUxHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMR2xDUVVGcFFpeEZRVUZGTEZOQlFWTTdRMEZuUWpkQ096dEJRV1pETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNFNIWkRMRUZCYlVoRkxHZENRVzVJWXl4RFFXMUlaQ3hWUVVGVkxFTkJRVUU3U1VGTlRpeG5Ra0ZCWjBJc1JVRkJSU3d3UTBGQk1FTTdTVUZETlVRc2NVSkJRWEZDTEVWQlFVVXNTMEZCU3p0SlFVTTFRaXh4UWtGQmNVSXNSVUZCUlN4TlFVRk5PMGRCV1doRE96czdRVUYyU1Vnc1FVRTJTRWtzWjBKQk4waFpMRU5CTmtoWUxIbENRVUZsTEVOQlFVTTdSVUZEWml4WFFVRlhMRVZCUVVVc1NVRkJTVHREUVZGc1FqczdRVUZRUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQkwwZ3pReXhCUVRaSVNTeG5Ra0UzU0Zrc1EwRTJTRmdzZVVKQlFXVXNRMEZCUXp0SlFVZFlMRmRCUVZjc1JVRkJSU3hKUVVGSk8wZEJUWFJDT3pzN1FVRktSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYkVrelF5eEJRVFpJU1N4blFrRTNTRmtzUTBFMlNGZ3NlVUpCUVdVc1EwRkJRenRKUVUxaUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBsQlEycENMR05CUVdNc1JVRkJSU3hKUVVGSk8wZEJSWFpDT3pzN1FVRjBTVXdzUVVFeVNVMHNaMEpCTTBsVkxFTkJNa2xVTEN0Q1FVRk5MRU5CUVVFN1JVRkRUQ3hUUVVGVExFVkJRVVVzU1VGQlNUdERRVU5vUWpzN1FVRTNTVkFzUVVFNFNVMHNaMEpCT1VsVkxFTkJNRWxZTEhsQ1FVRlhMRU5CU1ZZc1kwRkJZeXhEUVVGQk8wVkJRMW9zUzBGQlN5eEZRVUZGTEVsQlFVazdRMEZEV2pzN1FVRm9TbEFzUVVGcFNrMHNaMEpCYWtwVkxFTkJNRWxZTEhsQ1FVRlhMRU5CVDFZc2NVSkJRWEZDTEVOQlFVRTdSVUZEYmtJc1pVRkJaU3hGUVVGRkxGTkJRVk03UTBGRE0wSTdPMEZCYmtwUUxFRkJjVXBKTEdkQ1FYSktXU3hEUVhsSlpDeGpRVUZqTEVOQldWb3NSMEZCUnl4RFFVRkJPMFZCUTBRc1UwRkJVeXhGUVVGRkxFbEJRVWs3UTBGRGFFSTdPMEZCZGtwTUxFRkJORXBKTEdkQ1FUVktXU3hEUVRSS1dDeHhRa0ZCVnl4RFFVRkJPMFZCUTFZc1QwRkJUeXhGUVVGRkxFMUJRVTA3UlVGRFppeFJRVUZSTEVWQlFVVXNVVUZCVVR0RFFWTnVRanM3UVVGMlMwd3NRVUVyU2swc1owSkJMMHBWTEVOQkswcFVMREJDUVVGTExFTkJRVUU3UlVGRFNpeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhIUVVGSExFVkJRVVVzUTBGQlF6dEZRVU5PTEVsQlFVa3NSVUZCUlN4RFFVRkRPMFZCUTFBc1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRTFCUVUwc1JVRkJSU3hKUVVGSk8wTkJRMkk3TzBGQmRFdFFMRUZCZDB0SkxHZENRWGhMV1N4RFFYZExXQ3huUWtGQlRTeERRVUZCTzBWQlEwd3NVVUZCVVN4RlFVRkZMRTFCUVUwN1JVRkRhRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdSVUZEYWtJc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhYUVVGWExFVkJRVVVzVFVGQlRUdEZRVU51UWl4VlFVRlZMRVZCUVVVc1ZVRkJWVHREUVc5Q2RrSTdPMEZCYkUxTUxFRkJLMHROTEdkQ1FTOUxWU3hEUVhkTFdDeG5Ra0ZCVFN4QlFVOUtMRTlCUVU4c1EwRkJRenRGUVVOUUxFOUJRVThzUlVGQlJTeEZRVUZGTzBWQlExZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdSVUZEYWtJc1IwRkJSeXhGUVVGRkxFbEJRVWs3UlVGRFZDeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRXRCUVVzc1JVRkJSU3hMUVVGTE8wVkJRMW9zVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4VFFVRlRMRVZCUVVVc2VVSkJRWGxDTzBWQlEzQkRMR1ZCUVdVc1JVRkJSU3hMUVVGTE8wVkJRM1JDTEZWQlFWVXNSVUZCUlN3MlEwRkJOa01zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1R0RFFVTnFSVHM3UVVGRlJDeHJRa0ZCYTBJc1EwRkJiRUlzUzBGQmEwSTdSVUZEYUVJc1NVRkJTVHRKUVVOR0xGTkJRVk1zUlVGQlJTeG5Ra0ZCWjBJN096czdRVUU1VEhKRExFRkJiMDFGTEdkQ1FYQk5ZeXhEUVc5TlpDeFpRVUZaTEVOQlFVTTdSVUZEV0N4aFFVRmhMRVZCUVVVc1IwRkJSenRGUVVOc1FpeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhqUVVGakxFVkJRVVVzVFVGQlRUdERRWGxDZGtJN08wRkJlRUpETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGNFRYWkRMRUZCYjAxRkxHZENRWEJOWXl4RFFXOU5aQ3haUVVGWkxFTkJRVU03U1VGTFZDeGpRVUZqTEVWQlFVVXNSMEZCUnp0SFFYVkNkRUk3T3p0QlFXaFBTQ3hCUVRKTlNTeG5Ra0V6VFZrc1EwRXlUVmdzY1VKQlFWTXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hEUVVGRE8wVkJRMUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdRMEZMYmtJN08wRkJTa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsTmVrTXNRVUV5VFVrc1owSkJNMDFaTEVOQk1rMVlMSEZDUVVGVExFTkJRVU03U1VGSlVDeExRVUZMTEVWQlFVVXNRMEZCUXp0SlFVTlNMRlZCUVZVc1JVRkJSU3hKUVVGSk8wZEJSVzVDT3pzN1FVRnNUa3dzUVVGdFRra3NaMEpCYms1WkxFTkJiVTVZTEhkQ1FVRlpMRU5CUVVNN1JVRkRXaXhQUVVGUExFVkJRVVVzU1VGQlNUdERRVXRrT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZ5VG5wRExFRkJiVTVKTEdkQ1FXNU9XU3hEUVcxT1dDeDNRa0ZCV1N4RFFVRkRPMGxCUjFZc1QwRkJUeXhGUVVGRkxFdEJRVXM3U1VGRFpDeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVVllPenM3UVVGNlRrd3NRVUV3VGtrc1owSkJNVTVaTEVOQk1FNVlMSFZDUVVGWExFTkJRVU03UlVGRFdDeExRVUZMTEVWQlFVVXNRMEZCUXp0RFFVbFVPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRTFUbnBETEVGQk1FNUpMR2RDUVRGT1dTeERRVEJPV0N4MVFrRkJWeXhEUVVGRE8wbEJSMVFzVDBGQlR5eEZRVUZGTEVsQlFVazdSMEZGYUVJN096dEJRUzlPVEN4QlFXdFBTU3huUWtGc1Qxa3NRMEZyVDFnc2NVSkJRV1VzUTBGQlFUdEZRVU5rTEdOQlFXTXNSVUZCUlN4TlFVRk5PME5CUzNaQ096dEJRVXBETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGd1QzcERMRUZCYTA5SkxHZENRV3hQV1N4RFFXdFBXQ3h4UWtGQlpTeERRVUZCTzBsQlIxb3NZMEZCWXl4RlFVRkZMRWRCUVVjN1IwRkhkRUk3T3p0QlFYaFBUQ3hCUVRKUFNTeG5Ra0V6VDFrc1EwRXlUMWdzZDBKQlFXVXNRMEZCUVR0RlFVTmtMR05CUVdNc1JVRkJSU3hOUVVGTk8wTkJTM1pDT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUUzVDNwRExFRkJNazlKTEdkQ1FUTlBXU3hEUVRKUFdDeDNRa0ZCWlN4RFFVRkJPMGxCUjFvc1kwRkJZeXhGUVVGRkxFZEJRVWM3UjBGSGRFSTdPenRCUVdwUVRDeEJRVzlRU1N4blFrRndVRmtzUTBGdlVGZ3NORUpCUVdVc1EwRkJRVHRGUVVOa0xHTkJRV01zUlVGQlJTeE5RVUZOTzBOQlNYWkNPenRCUVVoRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjBVSHBETEVGQmIxQkpMR2RDUVhCUVdTeERRVzlRV0N3MFFrRkJaU3hEUVVGQk8wbEJSMW9zWTBGQll5eEZRVUZGTEZkQlFWYzdSMEZGT1VJN096dEJRWHBRVEN4QlFUQlFTU3huUWtFeFVGa3NRMEV3VUZnc2EwSkJRVXNzUTBGQlFUdEZRVU5LTEZOQlFWTXNSVUZCUlN4TFFVRkxPME5CU1dwQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFMVVIcERMRUZCTUZCSkxHZENRVEZRV1N4RFFUQlFXQ3hyUWtGQlN5eERRVUZCTzBsQlIwWXNVMEZCVXl4RlFVRkZMRXRCUVVzN1IwRkZia0k3T3p0QlFTOVFUQ3hCUVdsUlJTeG5Ra0ZxVVdNc1EwRnBVV1FzVVVGQlVTeERRVUZCTzBWQlEwNHNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzVDBGQlR5eEZRVUZETEU5QlFVODdRMEZQYUVJN08wRkJNVkZJTEVGQmIxRkpMR2RDUVhCUldTeERRVzlSV0N4aFFVRkxMRU5CUVVFN1JVRkRTaXhMUVVGTExFVkJRVVVzVDBGQlR6dERRVWxtT3p0QlFYcFJUQ3hCUVhOUlRTeG5Ra0YwVVZVc1EwRnZVVmdzWVVGQlN5eEJRVVZJTEZsQlFWa3NRMEZCUVR0RlFVTllMR0ZCUVdFc1JVRkJSU3hKUVVGSk8wTkJRM0JDT3p0QlFYaFJVQ3hCUVRSUlNTeG5Ra0UxVVZrc1EwRXlVV1FzV1VGQldTeERRVU5XTERaQ1FVRTJRaXhEUVVGQk8wVkJRek5DTEZOQlFWTXNSVUZCUlN4UFFVRlBPME5CUTI1Q096dEJRVGxSVEN4QlFTdFJTU3huUWtFdlVWa3NRMEV5VVdRc1dVRkJXU3hEUVVsV0xEUkNRVUUwUWl4RFFVRkJPMFZCUXpGQ0xGTkJRVk1zUlVGQlJTeEhRVUZITzBOQlEyWTdPMEZCYWxKTUxFRkJiVkpGTEdkQ1FXNVNZeXhEUVcxU1pDeFZRVUZWTEVOQlFVRTdSVUZEVWl4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVc5Q2JrSTdPMEZCYkVKRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjBVblpETEVGQmJWSkZMR2RDUVc1U1l5eERRVzFTWkN4VlFVRlZMRU5CUVVFN1NVRkpUaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEpRVU5zUWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRKUVVOWUxGZEJRVmNzUlVGQlJTeEpRVUZKTzBkQlpYQkNPenM3UVVGNFUwZ3NRVUUwVWtrc1owSkJOVkpaTEVOQk5GSllMRzlDUVVGVkxFTkJRVUU3UlVGRFZDeFJRVUZSTEVWQlFVVXNUVUZCVFR0RlFVTm9RaXhMUVVGTExFVkJRVVVzVDBGQlR6dEZRVU5rTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRGFFSXNWMEZCVnl4RlFVRkZMRWRCUVVjN1EwRkRha0k3TzBGQmJGTk1MRUZCYjFOSkxHZENRWEJUV1N4RFFXOVRXQ3h2UWtGQlZTeERRVUZCTzBWQlExUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRXRHM3UVVGMFUwd3NRVUY1VTBVc1owSkJlbE5qTEVOQmVWTmtMRlZCUVZVc1EwRkJRenRGUVVOVUxGRkJRVkVzUlVGQlJTeExRVUZMTzBWQlEyWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEV0QlFVc3NSVUZCUlN4SlFVRkpPME5CU1ZvN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRsVGRrTXNRVUY1VTBVc1owSkJlbE5qTEVOQmVWTmtMRlZCUVZVc1EwRkJRenRKUVUxUUxFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlJXaENJbjA9ICovXG4iXX0= */
